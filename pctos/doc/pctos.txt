                       TOS-Bibliothek fÅr PureC

                           Version V0.6.0û
                          13. Dezember 2005

                                 von

                           Martin ElsÑsser
                            GartenÑcker 30
                         86938 Schondorf a.A.
                             Deutschland



======================================================================
Inhaltsverzeichnis
======================================================================

 1  Allgemeines
    1.1  Dank
    1.2  Copyright
    1.3  Kontakt-Aufnahme

 2  Dokumentation der Funktionen
    2.1  Ash_getcookie
    2.2  Ash_getMagiC
    2.3  Ash_getMagiCAESVars
    2.4  Ash_getMagiCVersion
    2.5  Ash_getNAES
    2.6  Ash_gettimer
    2.7  Ash_getOSHeader
    2.8  Mxmask

 3  Installation
    3.1  Installation fÅr Pure-C
    3.2  Installation fÅr GNU-C
    3.3  Installation fÅr Pure-Pascal

 4  Download von PCTOS
    4.1  Mein îffentlicher PGP-SchlÅssel
    4.2  PCTOS.LIB

 5  History
    5.1  Version V0.6.0
    5.2  Version V0.5.0
    5.3  Version V0.4.0
    5.4  Version V0.3.0
    5.5  Version V0.2.0
    5.6  Version V0.1.0



======================================================================
Kapitel 1

Allgemeines
======================================================================

Die TOS-Bibliothek   ist   entstanden,   da   die  Pure-C  beiliegende
Bibliothek PCTOSLIB.LIB inzwischen "gnadenlos  veraltet"  ist.  Einige
System-Funktionen  sind  hier nicht vorhanden, so daû man immer wieder
neue "ErgÑnzungs-Bibliotheken" dazu nehmen muû. Ferner benîtigt ACSpro
eine  Bibliothek, die identische Bindings auch fÅr GNU-C zur VerfÅgung
stellt, damit der Anpassungsaufwand nicht ausufert.

So entstand diese TOS-Bibliothek - und genauso die GEM-Bibliothek. Die
PCTOS.LIB  ist  kompatibel zur Pure-C-Bibliothek PCTOSLIB.LIB und kann
diese direkt ersetzen -  so  geschehen  z.B.  in  ACSpro  V2.3.4.  Die
Verwendung  der  Pure-C-Headerdateien ist weiter mîglich, ACSpro macht
es in allen Versionen vor der 3.0.0 noch so... Die neueren  Funktionen
mÅssen  dann  eben  ggf. einen Prototypen "nachgeschoben" bekommen. Da
die TOS-Bibliothek aus ACSpro quasi "herausgelîst wurde", werden  auch
die von ACSpro definierten Datentypen int16, int32 etc. verwendet.


1.1  Dank
=========

Dank sagen  mîchte  ich  allen,  die bei der Entstehung der Bibliothek
mitgeholfen haben, speziell

   ˘ Meiner Frau Simone, die mich oft  genug  in  meiner  Freizeit  am
     Rechner sitzen sieht

   ˘ Gerhard  Stoll  @  B  fÅr  seine  Bug-Meldungen,  Anregungen  und
     Hinweise.

   ˘ Den Betreibern von http://www.atari.org, die  mir  kostenlos  den
     Platz  im  Internet  unter http://acspro.atari.org/ zur VerfÅgung
     stellen, um dort meine Projekte ablegen und u.a. diese Bibliothek
     dort zum Download anbieten zu kînnen.


1.2  Copyright
==============

Einerseits hat  mich  diese  Bibliothek einiges an Zeit fÅr Schreiben,
Debuggen,  Testen  etc.  gekostet.  Andererseits  kann  sich  mit  den
allgemein zugÑnglichen Informationen jeder so eine Bibliothek basteln,
und ferner will ich, soweit  es  geht,  die  Software-Entwicklung  fÅr
TOS-Rechner fîrdern.

Daher erklÑre   ich   hiermit  die  TOS-Bibliothek  zusammen  mit  den
zugehîrigen Sourcen als Freeware -  wer  mîchte,  darf  mir  natÅrlich
trotzdem schreiben (siehe "Kontakt-Aufnahme"). Die TOS-Bibliothek darf
frei und beliebig weiterkopiert, in Mailboxen oder  auf  dem  Internet
abgelegt  werden,  allerdings  nur  in  den  von mir zusammengepackten
Archiven, die ich per PGP signiert  habe.  FÅr  Uploads  in  Mailboxen
sollte  der  von  mir  im  Archiv mit eingepackte Text benutzt werden,
damit Åberall eine einheitliche Beschreibung vorhanden ist.


1.3  Kontakt-Aufnahme
=====================

Der von mir bevorzugte Weg der Kontakt-Aufnahme ist der  elektronische
Weg per eMail. Die Adresse lautet im

 MausNet:  Martin ElsÑsser @ LL

 Internet: martin@melsaesser.de

Bitte lassen  Sie den Betreff mit <PCTOS: > beginnend - natÅrlich ohne
die umrahmenden '<' oder '>' ;-) - (Katzenklo transportiert mir die PM
dann in meine lokale "Pseudo-Gruppe" PCTOS.

Sie kînnen  mich  auch  schriftlich - unter Beilegen eines ausreichend
frankierten RÅckumschlags - unter der Adresse

     Martin ElsÑsser
     GartenÑcker 30
     D - 86938 Schondorf a.A.


oder per Telefon (ab 19:30 Uhr) unter (08192) 99 8000 erreichen.



======================================================================
Kapitel 2

Dokumentation der Funktionen
======================================================================

Die Bibliothek PCTOS.LIB implementiert BIndings der BIOS-, XBIOS-  und
GEMDOS-Funktionen.  Als  Dokumentation  dieser Funktionen verweise ich
hier auf die folgenden Quellen, die auch  ich  genutzt  habe,  um  die
Bibliothek zu erstellen:

 Atari ST Profibuch  Das   Profibuch  ist  eigentlich  "die  Standard-
                     Referenz" fÅr deutsche Entwickler.  Es  ist  zwar
                     bereits etwas Ñlter und enthÑlt nicht die neueren
                     Funktionen, die nach dem TOS des  TT  hinzukamen,
                     aber ist denoch sehr empfehlenswert!

 Atari Compendium    Was  das  Profibuch  fÅr deutsche Entwickler, ist
                     das Compendium  mind.  fÅr  alle  nicht-deutschen
                     Entwickler.  Hier  sind  auch  im Profibuch nicht
                     dokumentierte Funktionen aus  MiNT  und  TOS  4.x
                     aufgefÅhrt.   Leider   ist  das  Compendium  auch
                     bereits etwas Ñlter, aber denoch  sehe  ich  sehr
                     gerne hinein - ich nutze in die Online-Fassung in
                     HTML-Seiten.

 TOS.HYP             Der TOS.HYP ist ein  ST-Guide-Hypertext.  In  ihm
                     sind  eigentlich  alle  wichtigen  Funktionen aus
                     (X)BIOS, GEMDOS,  (N)VDI  und  AES  dokumentiert.
                     Dazu  besticht  der Hypertext durch viele weitere
                     Informationen. Ich verwende ihn sehr  hÑufig  und
                     freue  mich  schon  auf  eine  neue  Version  des
                     Hypertextes ;-)

In der PCTOS.LIB sind einige weitere Funktionen zu finden, die ich als
"Utility-Funktionen"   bezeichnen  mîchte.  Diese  sind  im  Folgenden
dokumentiert.


2.1  Ash_getcookie
==================

 Kurzbeschreibung:  Einen Cookie aus dem Cookie Jar abfragen

 C:                 int16 Ash_getcookie( int32 cookie, void *val );

 Definition:        in TOS.H

Die Funktion  Ash_getcookie  durchsucht  den  Cookie  Jar  nach  einem
Cookie.  Wenn der RÅckgabewert TRUE ist, so wurde der Cookie gefunden,
in 'value' wird dann der Zeiger auf den Cookie-Wert zurÅckgeliefert.

Hinweis: Ash_getcookie nutzt bevorzugt Ssystem. Falls  diese  Funktion
nicht  verfÅgbar  ist,  wird  der  Cookie Jar per Setexc ermittelt und
selbst durchsucht.


2.2  Ash_getMagiC
=================

 Kurzbeschreibung:  Den MagiC-Cookie auslesen (optimiert)

 C:                 MAGX_COOKIE *Ash_getMagiC( void );

 Definition:        in TOS.H

Die Funktion Ash_getMagiC liefert den Wert  des  MagiC-Cookies  'MagX'
zurÅck.

Hinweis: Das    Ergebnis    wird    in   einer   statischen   Variable
zwischengespeichert und zur Optimierung der Funktion genutzt.


2.3  Ash_getMagiCAESVars
========================

 Kurzbeschreibung:  Die MagiC-AES-Variablen ermitteln

 C:                 AESVARS *Ash_getMagiCAESVars( void );

 Definition:        in TOS.H

Die Funktion Ash_getMagiCAESVars liefert den  Zeiger  auf  die  MagiC-
AES-Variablen.  Dies  funktioniert  auch  wÑhrend  der Abarbeitung des
Auto-Ordners.  Falls  MagiC  nicht   lÑuft,   wird   NULL   bzw.   NIL
zurÅckgegeben.


2.4  Ash_getMagiCVersion
========================

 Kurzbeschreibung:  Die MagiC-Versionsnummer ermitteln

 C:                 int16 Ash_getMagiCVersion( void );

 Definition:        in TOS.H

Die Funktion  Ash_getMagiCVersion  liefert die Versionsnummer als BCD-
codierte Zahl. Ein Wert von -1 signalisiert, daû  MagiC  nicht  lÑuft,
der  Wert -2 wird geliefert, wenn MagiC lÑuft, aber die MagiC-AES noch
nicht aktiv sind (also wÑhrend der Abarbeitung des Auto-Ordners).


2.5  Ash_getNAES
================

 Kurzbeschreibung:  Den N.AES-Cookie auslesen (optimiert)

 C:                 N_AESINFO *Ash_getNAES( void );

 Definition:        in TOS.H

Die Funktion Ash_getNAES liefert den  Wert  des  N.AES-Cookies  'nAES'
zurÅck.

Hinweis: Das    Ergebnis    wird    in   einer   statischen   Variable
zwischengespeichert und zur Optimierung der Funktion genutzt.


2.6  Ash_gettimer
=================

 Kurzbeschreibung:  Den 200Hz-Timer auslesen

 C:                 uint32 Ash_gettimer( void );

 Definition:        in TOS.H

Die Funktion Ash_gettimer liefert den Wert des 200Hz-Timers zurÅck.

Hinweis: Der  Wert  wird  bevorzugt  per  Ssystem   ermitteln   (falls
vorhanden), andernfalls wird der Timer "wie Åblich" im Supervisor-Mode
ausgelesen.


2.7  Ash_getOSHeader
====================

 Kurzbeschreibung:  SYSHDR bzw. OSHEADER des Systems ermitteln

 C:                 SYSHDR *Ash_getOSHeader( void )

 Definition:        in TOS.H

Die Funktion Ash_getOSHeader liefert  einen  Zeiger  auf  die  SYSHDR-
Struktur - auch OSHEADER genannt - des OS zurÅck.

Hinweis: Die  Funktion  kînnte  unter  MiNT  Probleme  machen,  da auf
System-Daten zugegriffen wird - zwar nur lesend, aber auch das  kînnte
schief  gehen.  Unter  MiNT  sollten  Werte  der  Struktur SYSHDR bzw.
OSHEADER per Ssystem erfragt werden.


2.8  Mxmask
===========

 Kurzbeschreibung:  Eine Maske fÅr 'mode' von Mxalloc liefern

 C:                 int16 Mxmask( void );

 Definition:        in TOS.H

Die Funktion Mxmask liefert eine Maske fÅr Mxalloc zurÅck. Damit  kann
geprÅft   werden,   ob   Mxalloc   vorhanden   ist   und   ob  es  die
Speicherschutz-Flags unterstÅtzt.

Die folgenden Werte werden geliefert:

 0   Mxalloc ist nicht vorhanden, es muû Malloc benutzt werden.

 3   Mxalloc ist vorhanden, allerdings werden die Speicherschutz-Flags
     niht unterstÅtzt.

 -1  Mxalloc    ist   vorhanden,   die   Speicherschutz-Flags   werden
     unterstÅtzt.

Beispiel: Die  folgende  Funktion  soll  die  Verwendung  von   Mxmask
verdeutlichen:

   void *myMxalloc( int32 size, int16 mode )
   {
      int16 mxmask = Mxmask();
      if( mxmask!=0 )
         memory = Mxalloc(size, mode & mxmask);
      else
         memory = Malloc(size);
   }

Hintergrund: Die   ersten   Implementationen  von  Mxalloc  im  GEMDOS
stÅrzten bei Verwendung  der  Speicherschutz-Flags  gnadenlos  ab  und
rissen die Anwendung, manchmal sogar das gesamte System mit!

Anmerkung: Im       MausNet       wurden       in      der      Gruppe
Maus.Computer.Atari.Programmieren                         verschiedene
Implementationsvarianten  von Mxmask diskutiert. Schlieûlich blieb die
hier realisierte Variante Åbrig. Sie beruht u.a. auf dem Vorhandensein
der  Funktion  Sysconf.  Falls  die  Funktion  Sysconf  vorhanden  ist
(momentan  nur  unter  MiNT),  so  kînnen   die   Speicherschutz-Flags
gefahrlos  verwendet werden. Andreas Kromke hat zugesagt, die Funktion
Sysconf  spÑtestens  dann  in  MagiC  zu  implementieren,  wenn  MagiC
Speicherschutz  unterstÅtzen sollte. Damit ist die hier implementierte
Erkennung auch in Zukunft abgesichert.



======================================================================
Kapitel 3

Installation
======================================================================

Um die Bibliothek zu verwenden, sind nur  wenige  Schritte  notwendig.
Befolgen Sie einfach die fÅr Ihren Compiler passenden Hinweise.


3.1  Installation fÅr Pure-C
============================

Die Installation ist eigentlich sehr einfach:

  1. Beschaffen  Sie  sich  das Archiv PCTOS.LZH aus dem Internet oder
     der Maus LL. Damit Sie sicher sein kînnen, daû dieses Archiv  von
     mir  stammt, ist ebenfalls eine PGP-Signatur-Datei verfÅgbar. Mit
     meinem îffentlichen SchlÅssel kînnen Sie dann das Archiv prÅfen.

  2. Packen Sie dieses Archiv aus, am Besten in ein neues Verzeichnis.

  3. ôffnen Sie nun das neu angelegte Unterverzeichnis PureC.

  4. Kopieren Sie den Inhalt des darin enthaltenen Unterverzeichnisses
     Header  in  das  Verzeichnis,  in  dem  Ihre Pure-C-Headerdateien
     enthalten sind.

  5. Kopieren Sie  den  Inhalt  des  Unterverzeichnisses  Lib  in  das
     Verzeichnis, in dem Ihre Pure-C-Bibliotheken enthalten sind.

Hinweis: Wer  nun  allerdings  die  KEYTAB-Bibliothek,  die  KEYTAB in
Versionen vor Rel. 10 (ohne Beta!) beiliegt, verwenden mîchte, der muû
in der KEYTAB-Bibliothek die Funktion Ash_getcookie entfernen!


3.2  Installation fÅr GNU-C
===========================

Im Moment bin ich noch dabei, die Bibliothek mit Inline-Funktionen und
Inline-Assembler fÅr GNU-C  zu  portieren.  Sobald  diese  eingermaûen
zufriedenstellend   fertig  ist,  wird  sie  hier  mit  zur  VerfÅgung
gestellt.


3.3  Installation fÅr Pure-Pascal
=================================

Nach der Portierung fÅr GNU-C steht die Umsetzung fÅr Pure-Pascal  auf
der  "Tagesordnung".  Sobald  hier  etwas  verfÅgbar  ist, wird es mit
verîffentlicht.



======================================================================
Kapitel 4

Download von PCTOS
======================================================================

Die Bibliothek  PCTOS   wird   im   Internet   und   im   MausNet   im
Gruppenprogrammteil     (GPT    genannt)    ACSpro    und    im    GPT
Maus.Computer.Atari.Programmieren der Maus LL zum Download angeboten.

Neue Versionen erscheinen jedoch zuerst in der Maus LL, die hier einen
"Heim-Vorteil"  genieût  -  sie wird von mir betrieben und steht unter
meinem Schreibtisch... ;-)

Jedes Archiv ist von mir mittels PGP signiert worden. Damit  kann  die
AuthentizitÑt  der Archive durch PGP geprÅft werden. Mein dazu nîtiger
îffentlicher SchlÅssel (siehe "Mein îffentlicher PGP-SchlÅssel") steht
Ihnen hier auch zur VerfÅgung.

Falls Sie  auf  Archive  stoûen,  die nicht mit der hier zur VerfÅgung
stehenden Signatur-Datei Åbereinstimmen, so liegt eine nicht  von  mir
herausgegebene Version vor, fÅr die ich keinerlei Support Åbernehme.

 4.1  Mein îffentlicher PGP-SchlÅssel
 4.2  PCTOS.LIB


4.1  Mein îffentlicher PGP-SchlÅssel
====================================

Mit meinem  îffentlicher  PGP-SchlÅssel  kînnen  Sie die AuthentizitÑt
dieser und aller irgendwo gespeicherten Archive  ÅberprÅfen.  Auûerdem
kînnen  Sie mir damit eine verschlÅsselte E-Mail zukommen lassen. Mein
îffentlicher SchlÅssel lautet:

Type Bits/KeyID    Date       User ID
pub  2048/3FF38621 1998/02/20 Martin Elsaesser <martin@melsaesser.de>
                              Martin Elsaesser <Martin Elsaesser @ LL>
                              Martin Elsaesser <Martin_Elsaesser@ll.maus.de>
                              Martin Elsaesser <martin@melsaesser.de>

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.6.3i
Comment: Requires PGP version 2.6 or later.

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
=aI2r
-----END PGP PUBLIC KEY BLOCK-----


4.2  PCTOS.LIB
==============

 Name          PCTOS-Bibliothek (Download/PCTOS/pctos.lzh)

 Datum         13.12.2005

 Grîûe         82,4 kByte

 Verzeichnis   http://acspro.atari.org/

 Beschreibung  Das TOS-Binding incl. Sourcen (Pure-C kompatibel)

 Signatur      Archiv-Signatur             zur             öberprÅfung
               (Download/PCTOS/pctos.asc)

Das Archiv  enthÑlt  die  Pure-C  kompatible  TOS-Bibliothek incl. der
Sourcen.

Entpacken Sie dieses Archiv bitte in ein gesondertes Verzeichnis  (bei
mir   z.B.   ist   es  D:\Sourcen\PCTOS\),  die  Installation  ist  im
Unterverzeichnis Doku im Hypertext und in der ASCII-Datei beschrieben.



======================================================================
Kapitel 5

History
======================================================================

Die sog. History, die Liste aller énderungen und  Neuerungen,  die  es
gibt   bzw.  gab,  ist  hier  zu  finden.  Wie  solche  History-Listen
normalerweise ist  auch  diese  chronologisch  geordnet,  die  letzten
Neuerungen stehen zuerst in der Liste.


5.1  Version V0.6.0
===================

Stand der Liste ist der 13.12.2005.

 16.10.2004

           ˘ Das  Binding fÅr Pvfork wurde Åberarbeitet, da der Child-
             Prozeû dem Parent-Prozeû  den  Inhalt  des  Stacks  nicht
             zerstîren darf.

           ˘ Die  Parameter  der  Funktion  Tsetitimer  wurden an MiNT
             angepaût. Hier scheint ein Fehler im TOS.HYP  gewesen  zu
             sein, da in MiNT der Wert `which' nur 16-Bit breit ist.

           ˘ Die  Funktion  Dsetkey gab 32-Bit-Werte nur als 16-Bit an
             GEMDOS weiter, was natÅrlich zu beliebig schînen Chrashes
             fÅhren konnte.

           ˘ Der Prototyp der Funktion Tadjtime stimmte nicht mit MiNT
             Åberein und wurde  zusammen  mit  dem  Binding  angepaût.
             Tadjtime erhÑlt nun zwei Parameter.

           ˘ Das  Binding  der  Funktion Super wurde nun angepaût. Die
             eigentlich  `typischen'  Aufrufe  Super(0)  und  Super(1)
             werden wie allgemein Åblich abgewickelt, wÑhrend der Fall
             bei Super(mein_ssp) etwas komplizierter ist.  Dabei  wird
             natÅrlich  auf den Åblichen Fall Super(old_ssp) RÅcksicht
             genommen.

 18.09.2004

           ˘ Die Cookie-Strukturen fÅr MagiCMac und  MagiCMacX  wurden
             mit allen Datentypen und Strukturen in das Headerfile mit
             aufgenommen.


5.2  Version V0.5.0
===================

Stand der Liste ist der 29.07.2003.

 29.07.2003

           ˘ Meinen Planungen zufolge wird  dies  die  letzte  Version
             sein,  die die beiden Varianten CATTOS.LIB und ACSTOS.LIB
             der TOS-Bibliothek enthÑlt. Es macht mehr Sinn,  sich  an
             den    verschiedenen   Dokumentationen   zu   orientieren
             (Stichwort:  PortabilitÑt),  die  Optimierungen  sind  ja
             sowieso nicht so groû!

           ˘ Neue Konstanten sind hinzugekommen.

           ˘ Die  Struktur  InitMousParamwurde  nun  korrekterweise in
             InitMouseParamumbenannt. Sie steht per define auch  unter
             dem PureC-Namen MOUSE zur VerfÅgung.


5.3  Version V0.4.0
===================

Stand der Liste ist der 24.04.2003.

 24.04.2003

           ˘ Die  Funktion Ash_getMagiCAESVars wurde optimiert, so daû
             sie nun auch unter MiNT korrekt funktionieren sollte.

 30.03.2003

           ˘ Die  Funktionen  Ash_getMagiC  (MagiC-Cookie   auslesen),
             Ash_getNAES  (N.AES-Cookie auslesen), Ash_getMagiCVersion
             (Versionsnummer  von  MagiC   liefern,   -1   fÅr   nicht
             vorhanden,  -2  fÅr  MagiC-AES nicht aktiv (Auto-Ordner))
             und Ash_getMagiCAESVars (MagiC-AES-Variablen  -  auch  im
             Auto-Ordner   -   liefern)   wurden   implementiert.  Die
             notwendigen Cookie-Definitionen sind aus den Headern  der
             PCGEM.LIB in die Header der PCTOS.LIB gewandert.


5.4  Version V0.3.0
===================

Stand der Liste ist der 03.03.2003.

 03.03.2003

           ˘ Die    Funktionen    Ash_getcookie,    Ash_gettimer   und
             Ash_getOSHeader wurden aus  ACSpro  heraus  genommen  und
             hier integriert.

             Hinweis: Wer  nun  allerdings  die KEYTAB-Bibliothek, die
             KEYTAB in Versionen vor Rel. 10  (ohne  Beta!)  beiliegt,
             verwenden  mîchte,  der  muû in der KEYTAB-Bibliothek die
             Funktion Ash_getcookie entfernen!

 26.02.2003

           ˘ Konstanten  und  Strukturen  wurden  gem.   Dokumentation
             (TOS.Hyp,  Profibuch)  ergÑnzt  bzw.  angepaût. Betroffen
             sind die Konstanten, Funktionen bzw. Strukturen  Fsfirst,
             Ssystem, PH, die Modes fÅr VsetMode.

           ˘ Der  OS-Header  SYSHDR (Pure-C-Name) steht auch unter dem
             im TOS.HYP und im Compendium verwendeten  Namen  OSHEADER
             zur VerfÅgung.

           ˘ Ein  paar Funktionen aus dem MilanTOS sind hinzugekommen:
             CacheCtrl, WdgCtrl, ExtRsConf.

           ˘ Die PAMSNet-Funktionen wurden in eigene Sourcen PAMSNet.S
             ausgelagert  und  in  der Headerdatei ACSTOS.H als solche
             zusammengefaût.

           ˘ Die  Bindings  fÅr  MiNTNet   sind   hinzugekommen.   Die
             Funktionen   stehen   in   MiNTNet.S   und  sind  in  der
             Headerdatei ACSTOS.H ebenfalls als solche  zusammengefaût
             worden.

 28.01.2003

           ˘ Die Konstanten fÅr Mode in Mxalloc aufgenommen.

           ˘ Neue  Funktion Mxmask gemÑû Diskussion im MausNet (Gruppe
             Maus.Computer.Atari.Programmieren)  in   die   Bibliothek
             aufgenommen.   Wenn  Mxmask  den  Wert  0  liefert,  darf
             Mxmalloc nicht benutzt werden. Andernfalls muû  der  Wert
             per  AND  mit  dem gewÅnschten Parameter 'mode' verknÅpft
             werden. Hintergrund: in einigen  TOS-Versionen  ist  zwar
             Mxmalloc  vorhanden,  macht  aber mit den Speicherschutz-
             Flags Probleme (Absturz!). Dies wird hiermit behoben.


5.5  Version V0.2.0
===================

Stand der Liste ist der 19. November 2002.

 18.11.2002

           ˘ Die   eigene    "Portab"-Deklarationen    in    ACSTYPE.H
             umgestellt,  so  daû eine bereits zuvor includierte Datei
             PORTAB.H verwndet wird. Falls dies nicht  der  Fall  ist,
             werden   die   passenden   Deklarationen   gesetzt.   Die
             Headerdatei  ACSTYPE.H   kann   anstelle   der   PORTAB.H
             verwendet  werden,  da  ggf.  WORD,  LONG  etc. definiert
             werden.

 04.11.2002

           ˘ Neue Bindings fÅr die Funktionen CacheCtrl,  WdgCtrl  und
             ExtRsConf aus dem Milan-TOS.

           ˘ Korrektur  bei der Benutzung der Save-Area der Funktionen
             bios(), xbios() und gemdos().

 14.10.2002

           ˘ Die Funktionen gemdos(), xbios() und  bios()  waren  zwar
             vorhanden, sind aber nicht exportiert worden.


5.6  Version V0.1.0
===================

Stand der Liste ist der 27.04.2001.

 25.10.2000

           ˘ Die    Funktion    Dsp_GetWordSize    war    durch   eine
             "ungeschickte" Ersetzung  in  Dsp_GetINT16Size  umbenannt
             worden, die Funktion Dsp_BlkBytes hieû ebenso dummerweise
             Dsp_BlkCHARs... Korrektur ist erfolgt...

           ˘ Die TOS-Bibliotheken wurden aus ACSpro  herausgelîst  und
             laufen ab heute als eigenstÑndiges Projekt.



======================================================================
Kapitel

UDO6
======================================================================

                    Dieser Text wurde erzeugt mit

                                 UDO
                       Release 6 Patchlevel 14
                                 TOS

                      Copyright (c) 1995-1999 by
                            Dirk Hagedorn
                            Postfach 8105
                           D-59840 Sundern
                    E-Mail: info@dirk-hagedorn.de

 UDO ist ein Programm, welches Textdateien, die im Universal Document
Format erstellt wurden, in das ASCII-, ST-Guide-, LaTeX-, Rich Text-,
Pure-C-Help-, Manualpage-, HTML-, WinHelp-, Texinfo-, Linuxdoc-SGML-,
 LyX-, Apple-QuickView- und Turbo-Vision-Help-Format umwandeln kann.

  Weitere Informationen sowie die aktuellen Versionen findet man im
                         World Wide Web unter
                     http://www.dirk-hagedorn.de



