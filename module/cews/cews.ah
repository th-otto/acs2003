/*********************************************************************/
/*                                                                   */
/* This file was created with ACS3.00 at Fri Jul 15 17:36:28 2022    */
/*                                                                   */
/* The contents are based on file:                                   */
/*    C:\SRC\ACS\MODULE\CEWS\CEWS.ACS                                */
/*                                                                   */
/* (c) 1991-2003 by Stefan Bachert, Oliver Michalak, Martin ElsÑsser */
/*********************************************************************/

/*		GUI-LANGUAGE		*/
#if defined(ACS_LANG1) && defined(ACS_LANG2)
	#error "More than one language macros defined!"
#endif
#if defined(ACS_LANG1) && defined(ACS_LANG3)
	#error "More than one language macros defined!"
#endif
#if defined(ACS_LANG1) && defined(ACS_LANG4)
	#error "More than one language macros defined!"
#endif
#if defined(ACS_LANG2) && defined(ACS_LANG3)
	#error "More than one language macros defined!"
#endif
#if defined(ACS_LANG2) && defined(ACS_LANG4)
	#error "More than one language macros defined!"
#endif
#if defined(ACS_LANG3) && defined(ACS_LANG4)
	#error "More than one language macros defined!"
#endif

#if !defined(ACS_LANG1) && !defined(ACS_LANG2) && !defined(ACS_LANG3) && !defined(ACS_LANG4)
	#define ACS_LANG1
#endif


/*		ANSI-C Prototypes		*/





/*		ALERT BOXES		*/


#if defined(ACS_LANG1)			/*		Alerts: ACS_LANG1		*/

static char A_ASK_LOAD [] = "[2][CEWS:|Die letzten énderungen|gehen verloren!][OK| Abbruch ]";
static char A_ASK_SAVE [] = "[4][CEWS:|Einstellungen sichern?][OK|  Weiter  ]";
static char A_EWS_OK [] = "[1][CEWS:|Beim nÑchsten Modulstart|wird '%s' geladen.][    OK    ]";
       char A_NO_ASSI [] = "[3][CEWS:|Kein Assembler angegeben!][ Abbruch ]";
       char A_NO_COM [] = "[3][CEWS:|Kein Compiler angegeben!][ Abbruch ]";
static char A_NO_DEBUG [] = "[3][CEWS:|Kein Debugger angegeben|oder das Zielprogramm|existiert nicht!][ Abbruch ]";
       char A_NO_LINK [] = "[3][CEWS:|Kein Linker angegeben!][ Abbruch ]";
static char A_NO_MODUL [] = "[3][CEWS:|Es kînnen keine weiteren|Dateien aufgenommen werden!][ Abbruch ]";

#elif defined(ACS_LANG2)			/*		Alerts: ACS_LANG2		*/

static char A_ASK_LOAD [] = "[2][CEWS:|Die letzten énderungen|gehen verloren!][OK| Abbruch ]";
static char A_ASK_SAVE [] = "[4][CEWS:|Einstellungen sichern?][OK|  Weiter  ]";
static char A_EWS_OK [] = "[1][CEWS:|Beim nÑchsten Modulstart|wird '%s' geladen.][    OK    ]";
       char A_NO_ASSI [] = "[3][CEWS:|Kein Assembler angegeben!][ Abbruch ]";
       char A_NO_COM [] = "[3][CEWS:|Kein Compiler angegeben!][ Abbruch ]";
static char A_NO_DEBUG [] = "[3][CEWS:|Kein Debugger angegeben|oder das Zielprogramm|existiert nicht!][ Abbruch ]";
       char A_NO_LINK [] = "[3][CEWS:|Kein Linker angegeben!][ Abbruch ]";
static char A_NO_MODUL [] = "[3][CEWS:|Es kînnen keine weiteren|Dateien aufgenommen werden!][ Abbruch ]";

#elif defined(ACS_LANG3)			/*		Alerts: ACS_LANG3		*/

static char A_ASK_LOAD [] = "[2][CEWS:|Die letzten énderungen|gehen verloren!][OK| Abbruch ]";
static char A_ASK_SAVE [] = "[4][CEWS:|Einstellungen sichern?][OK|  Weiter  ]";
static char A_EWS_OK [] = "[1][CEWS:|Beim nÑchsten Modulstart|wird '%s' geladen.][    OK    ]";
       char A_NO_ASSI [] = "[3][CEWS:|Kein Assembler angegeben!][ Abbruch ]";
       char A_NO_COM [] = "[3][CEWS:|Kein Compiler angegeben!][ Abbruch ]";
static char A_NO_DEBUG [] = "[3][CEWS:|Kein Debugger angegeben|oder das Zielprogramm|existiert nicht!][ Abbruch ]";
       char A_NO_LINK [] = "[3][CEWS:|Kein Linker angegeben!][ Abbruch ]";
static char A_NO_MODUL [] = "[3][CEWS:|Es kînnen keine weiteren|Dateien aufgenommen werden!][ Abbruch ]";

#elif defined(ACS_LANG4)			/*		Alerts: ACS_LANG4		*/

static char A_ASK_LOAD [] = "[2][CEWS:|Die letzten énderungen|gehen verloren!][OK| Abbruch ]";
static char A_ASK_SAVE [] = "[4][CEWS:|Einstellungen sichern?][OK|  Weiter  ]";
static char A_EWS_OK [] = "[1][CEWS:|Beim nÑchsten Modulstart|wird '%s' geladen.][    OK    ]";
       char A_NO_ASSI [] = "[3][CEWS:|Kein Assembler angegeben!][ Abbruch ]";
       char A_NO_COM [] = "[3][CEWS:|Kein Compiler angegeben!][ Abbruch ]";
static char A_NO_DEBUG [] = "[3][CEWS:|Kein Debugger angegeben|oder das Zielprogramm|existiert nicht!][ Abbruch ]";
       char A_NO_LINK [] = "[3][CEWS:|Kein Linker angegeben!][ Abbruch ]";
static char A_NO_MODUL [] = "[3][CEWS:|Es kînnen keine weiteren|Dateien aufgenommen werden!][ Abbruch ]";

#else

	#error "Wrong Language Macro defined"

#endif



/*		STRINGS		*/


#if defined(ACS_LANG1)				/*		Strings: ACS_LANG1		*/

static char FS_EWSSEL [] = "EWS-Datei wÑhlen";
       char FS_FILESEL [] = "Datei(en) wÑhlen";
       char FS_PATHSEL [] = "Pfad wÑhlen";
       char FS_PRGSEL [] = "Programm wÑhlen";
static char TEXT_01 [] = "Debugger:";
static char TEXT_02 [] = "CEWS - V2.1 vom 5.7.96|Integrierte Entwicklungsumgebung fÅr ACSpro von Oliver Michalak";
static char TEXT_07 [] = "EWS-Datei:";
static char TEXT_08 [] = "Zielname:";
static char TEXT_09 [] = "Include-Pfad:";
static char TEXT_10 [] = "Library-Pfad:";
static char TEXT_100 [] = "MC68851-CoProz";
static char TEXT_101 [] = "MC68881/82-CoProz";
static char TEXT_102 [] = "Auflisten der Makros";
static char TEXT_103 [] = "Files'";
static char TEXT_104 [] = "....(1)";
static char TEXT_105 [] = "Liste ohne 'Include-";
static char TEXT_106 [] = "Liste ohne '#if-#else'";
static char TEXT_107 [] = "Liste ausgeben";
static char TEXT_108 [] = "priviligierte Befehle";
static char TEXT_109 [] = "Liste ohne Makrozeilen";
static char TEXT_110 [] = "Annahme externer Symbole";
static char TEXT_111 [] = ".(S)";
static char TEXT_112 [] = ".......(3)";
static char TEXT_113 [] = ".......(2)";
static char TEXT_114 [] = ".......(4)";
static char TEXT_115 [] = "........(5)";
static char TEXT_116 [] = ".......(Y)";
static char TEXT_117 [] = ".....(8)";
static char TEXT_118 [] = "...........(B)";
static char TEXT_119 [] = ".....(M)";
static char TEXT_120 [] = ".......(A)";
static char TEXT_121 [] = "...(U)";
static char TEXT_122 [] = ".............(P)";
static char TEXT_124 [] = "....(V)";
static char TEXT_125 [] = "ôffnen";
static char TEXT_13 [] = " Information ";
static char TEXT_130 [] = " CEWS | Optionen | Compiler | Assembler | Linker ";
static char TEXT_14 [] = "12345678.123";
#ifndef __GNUC__
static char TEXT_16 [] = "HILFE";
#endif
static char TEXT_19 [] = "";
static char TEXT_20 [] = ".(J)";
static char TEXT_22 [] = "DR-Object-Format";
static char TEXT_23 [] = " CEWS ";
static char TEXT_26 [] = "........(Y)";
static char TEXT_27 [] = "C-EWS";
static char TEXT_28 [] = "Hilfe-ACC:";
static char TEXT_29 [] = "nur ANSI-Standard";
static char TEXT_30 [] = "...(L)";
static char TEXT_35 [] = "geschachtelte Kommentare";
static char TEXT_36 [] = "Grîûe optimieren";
static char TEXT_37 [] = "Maximum an Warnungen:";
static char TEXT_41 [] = "Maximum an Fehlern:";
static char TEXT_42 [] = "CDECL-Aufrufkonvention";
static char TEXT_43 [] = "keine Sprungoptimierung";
static char TEXT_44 [] = "'unsigned char' nutzen";
static char TEXT_45 [] = "Linker:";
static char TEXT_46 [] = ".(C)";
static char TEXT_47 [] = "........(A)";
static char TEXT_48 [] = "absolute SprÅnge";
static char TEXT_49 [] = "PASCAL-Aufrufkonvention";
static char TEXT_50 [] = "keine Registervariablen";
static char TEXT_51 [] = "Standard-Stackaufbau";
static char TEXT_52 [] = "Stack ÅberprÅfen";
static char TEXT_53 [] = "ausfÅhrliches Protokoll";
static char TEXT_54 [] = "'_' vor jeder Variablen";
static char TEXT_55 [] = "Debugging-Infos";
static char TEXT_56 [] = "ohne Registeroptimierung";
static char TEXT_57 [] = "gleiche Texte trennen";
static char TEXT_58 [] = "..........(Y)";
static char TEXT_59 [] = ".........(B)";
static char TEXT_60 [] = ".........(T)";
static char TEXT_61 [] = "..(X)";
static char TEXT_62 [] = "...(H)";
static char TEXT_63 [] = "..(Q)";
static char TEXT_64 [] = "...(K)";
static char TEXT_65 [] = "..(J)";
static char TEXT_66 [] = ".(Z)";
static char TEXT_67 [] = "....(M)";
static char TEXT_68 [] = "..(R)";
static char TEXT_69 [] = ".........(G)";
static char TEXT_70 [] = ".........(P)";
static char TEXT_71 [] = ".....(S)";
static char TEXT_72 [] = "..(V)";
static char TEXT_74 [] = "Stack-Grîûe:";
static char TEXT_75 [] = "Compiler:";
static char TEXT_76 [] = "Sofortstart einrichten";
static char TEXT_77 [] = "kein 'Fastload'-Flag";
static char TEXT_78 [] = "globale Symboltabelle";
static char TEXT_79 [] = "..(G)";
static char TEXT_80 [] = "lokale Symboltabelle";
static char TEXT_81 [] = "Programm nur im ST-RAM";
static char TEXT_82 [] = "'Malloc' aus ST-RAM";
static char TEXT_83 [] = "erzeuge 'Object'-Datei";
static char TEXT_84 [] = ".(V)";
static char TEXT_85 [] = "....(F)";
static char TEXT_86 [] = ".....(F)";
static char TEXT_88 [] = "Sichern";
static char TEXT_89 [] = "Rest:";
static char TEXT_90 [] = "LÑnge der Bezeichner:";
static char TEXT_94 [] = "Bytes";
static char TEXT_95 [] = "Assembler:";
static char TEXT_96 [] = "MC68010/12-Befehle";
static char TEXT_97 [] = "MC68020-Befehle";
static char TEXT_98 [] = "MC68030-Befehle";
static char TEXT_99 [] = "MC68040-Befehle";

#elif defined(ACS_LANG2)			/*		Strings: ACS_LANG2		*/

static char FS_EWSSEL [] = "EWS-Datei wÑhlen";
       char FS_FILESEL [] = "Datei(en) wÑhlen";
       char FS_PATHSEL [] = "Pfad wÑhlen";
       char FS_PRGSEL [] = "Programm wÑhlen";
static char TEXT_01 [] = "Debugger:";
static char TEXT_02 [] = "CEWS - V2.0 vom 2.4.96|Integrierte Entwicklungsumgebung fÅr ACSpro von Oliver Michalak";
static char TEXT_07 [] = "EWS-Datei:";
static char TEXT_08 [] = "Zielname:";
static char TEXT_09 [] = "Include-Pfad:";
static char TEXT_10 [] = "Library-Pfad:";
static char TEXT_100 [] = "MC68851-CoProz";
static char TEXT_101 [] = "MC68881/82-CoProz";
static char TEXT_102 [] = "Auflisten der Makros";
static char TEXT_103 [] = "Files'";
static char TEXT_104 [] = "....(1)";
static char TEXT_105 [] = "Liste ohne 'Include-";
static char TEXT_106 [] = "Liste ohne '#if-#else'";
static char TEXT_107 [] = "Liste ausgeben";
static char TEXT_108 [] = "priviligierte Befehle";
static char TEXT_109 [] = "Liste ohne Makrozeilen";
static char TEXT_110 [] = "Annahme externer Symbole";
static char TEXT_111 [] = ".(S)";
static char TEXT_112 [] = ".......(3)";
static char TEXT_113 [] = ".......(2)";
static char TEXT_114 [] = ".......(4)";
static char TEXT_115 [] = "........(5)";
static char TEXT_116 [] = ".......(Y)";
static char TEXT_117 [] = ".....(8)";
static char TEXT_118 [] = "...........(B)";
static char TEXT_119 [] = ".....(M)";
static char TEXT_120 [] = ".......(A)";
static char TEXT_121 [] = "...(U)";
static char TEXT_122 [] = ".............(P)";
static char TEXT_124 [] = "....(V)";
static char TEXT_125 [] = "ôffnen";
static char TEXT_13 [] = " Information ";
static char TEXT_130 [] = " CEWS | Optionen | Compiler | Assembler | Linker ";
static char TEXT_14 [] = "12345678.123";
#ifndef __GNUC__
static char TEXT_16 [] = "HILFE";
#endif
static char TEXT_19 [] = "";
static char TEXT_20 [] = ".(J)";
static char TEXT_22 [] = "DR-Object-Format";
static char TEXT_23 [] = " CEWS ";
static char TEXT_26 [] = "........(Y)";
static char TEXT_27 [] = "C-EWS";
static char TEXT_28 [] = "Hilfe-ACC:";
static char TEXT_29 [] = "nur ANSI-Standard";
static char TEXT_30 [] = "...(L)";
static char TEXT_35 [] = "geschachtelte Kommentare";
static char TEXT_36 [] = "Grîûe optimieren";
static char TEXT_37 [] = "Maximum an Warnungen:";
static char TEXT_41 [] = "Maximum an Fehlern:";
static char TEXT_42 [] = "CDECL-Aufrufkonvention";
static char TEXT_43 [] = "keine Sprungoptimierung";
static char TEXT_44 [] = "'unsigned char' nutzen";
static char TEXT_45 [] = "Linker:";
static char TEXT_46 [] = ".(C)";
static char TEXT_47 [] = "........(A)";
static char TEXT_48 [] = "absolute SprÅnge";
static char TEXT_49 [] = "PASCAL-Aufrufkonvention";
static char TEXT_50 [] = "keine Registervariablen";
static char TEXT_51 [] = "Standard-Stackaufbau";
static char TEXT_52 [] = "Stack ÅberprÅfen";
static char TEXT_53 [] = "ausfÅhrliches Protokoll";
static char TEXT_54 [] = "'_' vor jeder Variablen";
static char TEXT_55 [] = "Debugging-Infos";
static char TEXT_56 [] = "ohne Registeroptimierung";
static char TEXT_57 [] = "gleiche Texte trennen";
static char TEXT_58 [] = "..........(Y)";
static char TEXT_59 [] = ".........(B)";
static char TEXT_60 [] = ".........(T)";
static char TEXT_61 [] = "..(X)";
static char TEXT_62 [] = "...(H)";
static char TEXT_63 [] = "..(Q)";
static char TEXT_64 [] = "...(K)";
static char TEXT_65 [] = "..(J)";
static char TEXT_66 [] = ".(Z)";
static char TEXT_67 [] = "....(M)";
static char TEXT_68 [] = "..(R)";
static char TEXT_69 [] = ".........(G)";
static char TEXT_70 [] = ".........(P)";
static char TEXT_71 [] = ".....(S)";
static char TEXT_72 [] = "..(V)";
static char TEXT_74 [] = "Stack-Grîûe:";
static char TEXT_75 [] = "Compiler:";
static char TEXT_76 [] = "Sofortstart einrichten";
static char TEXT_77 [] = "kein 'Fastload'-Flag";
static char TEXT_78 [] = "globale Symboltabelle";
static char TEXT_79 [] = "..(G)";
static char TEXT_80 [] = "lokale Symboltabelle";
static char TEXT_81 [] = "Programm nur im ST-RAM";
static char TEXT_82 [] = "'Malloc' aus ST-RAM";
static char TEXT_83 [] = "erzeuge 'Object'-Datei";
static char TEXT_84 [] = ".(V)";
static char TEXT_85 [] = "....(F)";
static char TEXT_86 [] = ".....(F)";
static char TEXT_88 [] = "Sichern";
static char TEXT_89 [] = "Rest:";
static char TEXT_90 [] = "LÑnge der Bezeichner:";
static char TEXT_94 [] = "Bytes";
static char TEXT_95 [] = "Assembler:";
static char TEXT_96 [] = "MC68010/12-Befehle";
static char TEXT_97 [] = "MC68020-Befehle";
static char TEXT_98 [] = "MC68030-Befehle";
static char TEXT_99 [] = "MC68040-Befehle";

#elif defined(ACS_LANG3)			/*		Strings: ACS_LANG3		*/

static char FS_EWSSEL [] = "EWS-Datei wÑhlen";
       char FS_FILESEL [] = "Datei(en) wÑhlen";
       char FS_PATHSEL [] = "Pfad wÑhlen";
       char FS_PRGSEL [] = "Programm wÑhlen";
static char TEXT_01 [] = "Debugger:";
static char TEXT_02 [] = "CEWS - V2.0 vom 2.4.96|Integrierte Entwicklungsumgebung fÅr ACSpro von Oliver Michalak";
static char TEXT_07 [] = "EWS-Datei:";
static char TEXT_08 [] = "Zielname:";
static char TEXT_09 [] = "Include-Pfad:";
static char TEXT_10 [] = "Library-Pfad:";
static char TEXT_100 [] = "MC68851-CoProz";
static char TEXT_101 [] = "MC68881/82-CoProz";
static char TEXT_102 [] = "Auflisten der Makros";
static char TEXT_103 [] = "Files'";
static char TEXT_104 [] = "....(1)";
static char TEXT_105 [] = "Liste ohne 'Include-";
static char TEXT_106 [] = "Liste ohne '#if-#else'";
static char TEXT_107 [] = "Liste ausgeben";
static char TEXT_108 [] = "priviligierte Befehle";
static char TEXT_109 [] = "Liste ohne Makrozeilen";
static char TEXT_110 [] = "Annahme externer Symbole";
static char TEXT_111 [] = ".(S)";
static char TEXT_112 [] = ".......(3)";
static char TEXT_113 [] = ".......(2)";
static char TEXT_114 [] = ".......(4)";
static char TEXT_115 [] = "........(5)";
static char TEXT_116 [] = ".......(Y)";
static char TEXT_117 [] = ".....(8)";
static char TEXT_118 [] = "...........(B)";
static char TEXT_119 [] = ".....(M)";
static char TEXT_120 [] = ".......(A)";
static char TEXT_121 [] = "...(U)";
static char TEXT_122 [] = ".............(P)";
static char TEXT_124 [] = "....(V)";
static char TEXT_125 [] = "ôffnen";
static char TEXT_13 [] = " Information ";
static char TEXT_130 [] = " CEWS | Optionen | Compiler | Assembler | Linker ";
static char TEXT_14 [] = "12345678.123";
#ifndef __GNUC__
static char TEXT_16 [] = "HILFE";
#endif
static char TEXT_19 [] = "";
static char TEXT_20 [] = ".(J)";
static char TEXT_22 [] = "DR-Object-Format";
static char TEXT_23 [] = " CEWS ";
static char TEXT_26 [] = "........(Y)";
static char TEXT_27 [] = "C-EWS";
static char TEXT_28 [] = "Hilfe-ACC:";
static char TEXT_29 [] = "nur ANSI-Standard";
static char TEXT_30 [] = "...(L)";
static char TEXT_35 [] = "geschachtelte Kommentare";
static char TEXT_36 [] = "Grîûe optimieren";
static char TEXT_37 [] = "Maximum an Warnungen:";
static char TEXT_41 [] = "Maximum an Fehlern:";
static char TEXT_42 [] = "CDECL-Aufrufkonvention";
static char TEXT_43 [] = "keine Sprungoptimierung";
static char TEXT_44 [] = "'unsigned char' nutzen";
static char TEXT_45 [] = "Linker:";
static char TEXT_46 [] = ".(C)";
static char TEXT_47 [] = "........(A)";
static char TEXT_48 [] = "absolute SprÅnge";
static char TEXT_49 [] = "PASCAL-Aufrufkonvention";
static char TEXT_50 [] = "keine Registervariablen";
static char TEXT_51 [] = "Standard-Stackaufbau";
static char TEXT_52 [] = "Stack ÅberprÅfen";
static char TEXT_53 [] = "ausfÅhrliches Protokoll";
static char TEXT_54 [] = "'_' vor jeder Variablen";
static char TEXT_55 [] = "Debugging-Infos";
static char TEXT_56 [] = "ohne Registeroptimierung";
static char TEXT_57 [] = "gleiche Texte trennen";
static char TEXT_58 [] = "..........(Y)";
static char TEXT_59 [] = ".........(B)";
static char TEXT_60 [] = ".........(T)";
static char TEXT_61 [] = "..(X)";
static char TEXT_62 [] = "...(H)";
static char TEXT_63 [] = "..(Q)";
static char TEXT_64 [] = "...(K)";
static char TEXT_65 [] = "..(J)";
static char TEXT_66 [] = ".(Z)";
static char TEXT_67 [] = "....(M)";
static char TEXT_68 [] = "..(R)";
static char TEXT_69 [] = ".........(G)";
static char TEXT_70 [] = ".........(P)";
static char TEXT_71 [] = ".....(S)";
static char TEXT_72 [] = "..(V)";
static char TEXT_74 [] = "Stack-Grîûe:";
static char TEXT_75 [] = "Compiler:";
static char TEXT_76 [] = "Sofortstart einrichten";
static char TEXT_77 [] = "kein 'Fastload'-Flag";
static char TEXT_78 [] = "globale Symboltabelle";
static char TEXT_79 [] = "..(G)";
static char TEXT_80 [] = "lokale Symboltabelle";
static char TEXT_81 [] = "Programm nur im ST-RAM";
static char TEXT_82 [] = "'Malloc' aus ST-RAM";
static char TEXT_83 [] = "erzeuge 'Object'-Datei";
static char TEXT_84 [] = ".(V)";
static char TEXT_85 [] = "....(F)";
static char TEXT_86 [] = ".....(F)";
static char TEXT_88 [] = "Sichern";
static char TEXT_89 [] = "Rest:";
static char TEXT_90 [] = "LÑnge der Bezeichner:";
static char TEXT_94 [] = "Bytes";
static char TEXT_95 [] = "Assembler:";
static char TEXT_96 [] = "MC68010/12-Befehle";
static char TEXT_97 [] = "MC68020-Befehle";
static char TEXT_98 [] = "MC68030-Befehle";
static char TEXT_99 [] = "MC68040-Befehle";

#elif defined(ACS_LANG4)			/*		Strings: ACS_LANG4		*/

static char FS_EWSSEL [] = "EWS-Datei wÑhlen";
       char FS_FILESEL [] = "Datei(en) wÑhlen";
       char FS_PATHSEL [] = "Pfad wÑhlen";
       char FS_PRGSEL [] = "Programm wÑhlen";
static char TEXT_01 [] = "Debugger:";
static char TEXT_02 [] = "CEWS - V2.0 vom 2.4.96|Integrierte Entwicklungsumgebung fÅr ACSpro von Oliver Michalak";
static char TEXT_07 [] = "EWS-Datei:";
static char TEXT_08 [] = "Zielname:";
static char TEXT_09 [] = "Include-Pfad:";
static char TEXT_10 [] = "Library-Pfad:";
static char TEXT_100 [] = "MC68851-CoProz";
static char TEXT_101 [] = "MC68881/82-CoProz";
static char TEXT_102 [] = "Auflisten der Makros";
static char TEXT_103 [] = "Files'";
static char TEXT_104 [] = "....(1)";
static char TEXT_105 [] = "Liste ohne 'Include-";
static char TEXT_106 [] = "Liste ohne '#if-#else'";
static char TEXT_107 [] = "Liste ausgeben";
static char TEXT_108 [] = "priviligierte Befehle";
static char TEXT_109 [] = "Liste ohne Makrozeilen";
static char TEXT_110 [] = "Annahme externer Symbole";
static char TEXT_111 [] = ".(S)";
static char TEXT_112 [] = ".......(3)";
static char TEXT_113 [] = ".......(2)";
static char TEXT_114 [] = ".......(4)";
static char TEXT_115 [] = "........(5)";
static char TEXT_116 [] = ".......(Y)";
static char TEXT_117 [] = ".....(8)";
static char TEXT_118 [] = "...........(B)";
static char TEXT_119 [] = ".....(M)";
static char TEXT_120 [] = ".......(A)";
static char TEXT_121 [] = "...(U)";
static char TEXT_122 [] = ".............(P)";
static char TEXT_124 [] = "....(V)";
static char TEXT_125 [] = "ôffnen";
static char TEXT_13 [] = " Information ";
static char TEXT_130 [] = " CEWS | Optionen | Compiler | Assembler | Linker ";
static char TEXT_14 [] = "12345678.123";
#ifndef __GNUC__
static char TEXT_16 [] = "HILFE";
#endif
static char TEXT_19 [] = "";
static char TEXT_20 [] = ".(J)";
static char TEXT_22 [] = "DR-Object-Format";
static char TEXT_23 [] = " CEWS ";
static char TEXT_26 [] = "........(Y)";
static char TEXT_27 [] = "C-EWS";
static char TEXT_28 [] = "Hilfe-ACC:";
static char TEXT_29 [] = "nur ANSI-Standard";
static char TEXT_30 [] = "...(L)";
static char TEXT_35 [] = "geschachtelte Kommentare";
static char TEXT_36 [] = "Grîûe optimieren";
static char TEXT_37 [] = "Maximum an Warnungen:";
static char TEXT_41 [] = "Maximum an Fehlern:";
static char TEXT_42 [] = "CDECL-Aufrufkonvention";
static char TEXT_43 [] = "keine Sprungoptimierung";
static char TEXT_44 [] = "'unsigned char' nutzen";
static char TEXT_45 [] = "Linker:";
static char TEXT_46 [] = ".(C)";
static char TEXT_47 [] = "........(A)";
static char TEXT_48 [] = "absolute SprÅnge";
static char TEXT_49 [] = "PASCAL-Aufrufkonvention";
static char TEXT_50 [] = "keine Registervariablen";
static char TEXT_51 [] = "Standard-Stackaufbau";
static char TEXT_52 [] = "Stack ÅberprÅfen";
static char TEXT_53 [] = "ausfÅhrliches Protokoll";
static char TEXT_54 [] = "'_' vor jeder Variablen";
static char TEXT_55 [] = "Debugging-Infos";
static char TEXT_56 [] = "ohne Registeroptimierung";
static char TEXT_57 [] = "gleiche Texte trennen";
static char TEXT_58 [] = "..........(Y)";
static char TEXT_59 [] = ".........(B)";
static char TEXT_60 [] = ".........(T)";
static char TEXT_61 [] = "..(X)";
static char TEXT_62 [] = "...(H)";
static char TEXT_63 [] = "..(Q)";
static char TEXT_64 [] = "...(K)";
static char TEXT_65 [] = "..(J)";
static char TEXT_66 [] = ".(Z)";
static char TEXT_67 [] = "....(M)";
static char TEXT_68 [] = "..(R)";
static char TEXT_69 [] = ".........(G)";
static char TEXT_70 [] = ".........(P)";
static char TEXT_71 [] = ".....(S)";
static char TEXT_72 [] = "..(V)";
static char TEXT_74 [] = "Stack-Grîûe:";
static char TEXT_75 [] = "Compiler:";
static char TEXT_76 [] = "Sofortstart einrichten";
static char TEXT_77 [] = "kein 'Fastload'-Flag";
static char TEXT_78 [] = "globale Symboltabelle";
static char TEXT_79 [] = "..(G)";
static char TEXT_80 [] = "lokale Symboltabelle";
static char TEXT_81 [] = "Programm nur im ST-RAM";
static char TEXT_82 [] = "'Malloc' aus ST-RAM";
static char TEXT_83 [] = "erzeuge 'Object'-Datei";
static char TEXT_84 [] = ".(V)";
static char TEXT_85 [] = "....(F)";
static char TEXT_86 [] = ".....(F)";
static char TEXT_88 [] = "Sichern";
static char TEXT_89 [] = "Rest:";
static char TEXT_90 [] = "LÑnge der Bezeichner:";
static char TEXT_94 [] = "Bytes";
static char TEXT_95 [] = "Assembler:";
static char TEXT_96 [] = "MC68010/12-Befehle";
static char TEXT_97 [] = "MC68020-Befehle";
static char TEXT_98 [] = "MC68030-Befehle";
static char TEXT_99 [] = "MC68040-Befehle";

#else

	#error "Wrong Language Macro defined"

#endif



/*		DATAS		*/

static int16 DATAS_01     [] =
	{
			0x0000, 0x0000, 0x0208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffbf, 0xffff, 0xff1f, 0xffff, 0xfe0f, 0xffff, 0xfc07, 0xffff, 
			0xf803, 0xffff, 0xf001, 0xffff, 0xfe0f, 0xffff, 0xfe0f, 0xffff, 
			0xfe0f, 0xfffc, 0x7e0f, 0xfff0, 0x3e0f, 0xffe0, 0x1e0f, 0xffc0, 
			0x1e0f, 0xffc0, 0x1e0f, 0xff83, 0x3e0f, 0xff87, 0xfc1f, 0xff87, 
			0xfc1f, 0xff87, 0xf81f, 0xff83, 0xf03f, 0xffc1, 0xc03f, 0xffc0, 
			0x007f, 0xffe0, 0x00ff, 0xfff0, 0x03ff, 0xfffc, 0x0fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffbf, 0xffff, 0xff1f, 0xffff, 0xfe0f, 0xffff, 0xfc07, 0xffff, 
			0xf803, 0xffff, 0xf001, 0xffff, 0xfe0f, 0xffff, 0xfe0f, 0xffff, 
			0xfe0f, 0xfffc, 0x7e0f, 0xfff0, 0x3e0f, 0xffe0, 0x1e0f, 0xffc0, 
			0x1e0f, 0xffc0, 0x1e0f, 0xff83, 0x3e0f, 0xff87, 0xfc1f, 0xff87, 
			0xfc1f, 0xff87, 0xf81f, 0xff83, 0xf03f, 0xffc1, 0xc03f, 0xffc0, 
			0x007f, 0xffe0, 0x00ff, 0xfff0, 0x03ff, 0xfffc, 0x0fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x000f, 0xc000, 0x003f, 0xf000, 0x00ff, 0xf800, 0x01ff, 
			0xfc00, 0x03fc, 0x7c00, 0x03f0, 0x3e00, 0x07e0, 0x1e00, 0x07c0, 
			0x1e00, 0x07c0, 0x1e00, 0x0f83, 0x3e00, 0x0f87, 0xfc00, 0x0f87, 
			0xfc00, 0x0f87, 0xf800, 0x0f83, 0xf000, 0x0fc1, 0xc000, 0x0dc0, 
			0x0000, 0x0a80, 0x0000, 0x0700, 0x0000, 0x0f80, 0x0000, 0x1fc0, 
			0x0000, 0x3fe0, 0x0000, 0x7ff0, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_02     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_03     [] =
	{
			0x0000, 0x0000, 0x0208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xfffb, 0xdfff, 0xfff2, 0x4fff, 0xfff2, 
			0x4fff, 0xfffe, 0x7fff, 0xfffc, 0x3fff, 0xfffe, 0x7fff, 0xffff, 
			0xffff, 0xfff3, 0xcfff, 0xffe3, 0xc7ff, 0xffe7, 0xe7ff, 0xffef, 
			0xf7ff, 0xffdc, 0x3bff, 0xfffd, 0xbfff, 0xfff0, 0x0fff, 0xffe5, 
			0xa7ff, 0xffc0, 0x03ff, 0xfff8, 0x1fff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcfff, 
			0xfff3, 0xc7ff, 0xffe3, 0xe3ff, 0xffc7, 0xf1ff, 0xff8f, 0xf8ff, 
			0xff1f, 0xfc7f, 0xfe3f, 0xfe3b, 0xdc7f, 0xff17, 0xe8ff, 0xff8f, 
			0xf1ff, 0xffc7, 0xe3ff, 0xffe3, 0xc7ff, 0xfff1, 0x8fff, 0xfff8, 
			0x1fff, 0xfffc, 0x3fff, 0xfffc, 0x3fff, 0xfff8, 0x1fff, 0xfff1, 
			0x8fff, 0xffe3, 0xc7ff, 0xffc5, 0xa3ff, 0xff8f, 0xf1ff, 0xff1d, 
			0xb8ff, 0xfe3f, 0xfc7f, 0xfc7f, 0xfe3f, 0xf8ff, 0xff1f, 0xf1ff, 
			0xff8f, 0xe3ff, 0xffc7, 0xc7ff, 0xffe3, 0xcfff, 0xfff3, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xcfff, 
			0xfff3, 0xc7ff, 0xffe3, 0xe3ff, 0xffc7, 0xf1ff, 0xff8f, 0xf8ff, 
			0xff1f, 0xfc7f, 0xfe3f, 0xfe3b, 0xdc7f, 0xff15, 0xa8ff, 0xff8d, 
			0xb1ff, 0xffc7, 0xe3ff, 0xffe3, 0xc7ff, 0xfff1, 0x8fff, 0xfff8, 
			0x1fff, 0xfffc, 0x3fff, 0xfffc, 0x3fff, 0xfff8, 0x1fff, 0xfff1, 
			0x8fff, 0xffe3, 0xc7ff, 0xffc5, 0xa3ff, 0xff8f, 0xf1ff, 0xff1d, 
			0xb8ff, 0xfe3f, 0xfc7f, 0xfc7f, 0xfe3f, 0xf8ff, 0xff1f, 0xf1ff, 
			0xff8f, 0xe3ff, 0xffc7, 0xc7ff, 0xffe3, 0xcfff, 0xfff3, 0xffff, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x2000, 0x0004, 0x1000, 0x0008, 0x080c, 0x3010, 0x0416, 
			0x6820, 0x0222, 0x4440, 0x0107, 0xe080, 0x008d, 0xb100, 0x004d, 
			0xb200, 0x0027, 0xe400, 0x0013, 0xc800, 0x0009, 0x9000, 0x0004, 
			0x2000, 0x010e, 0x7080, 0x029c, 0x3940, 0x0459, 0x9a20, 0x1832, 
			0x4c18, 0x0127, 0xe480, 0x028e, 0x7140, 0x041f, 0xf820, 0x183e, 
			0x7c18, 0x007f, 0xfe00, 0x009f, 0xf900, 0x0107, 0xe080, 0x0200, 
			0x0040, 0x0400, 0x0020, 0x0800, 0x0010, 0x1000, 0x0008, 0x0000, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_04     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_05     [] =
	{
			0x0000, 0x0000, 0x0208, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 
			0xffff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff1, 0x1fff, 0xffe2, 
			0x8fff, 0xffc4, 0x47ff, 0xff88, 0x23ff, 0xff10, 0x11ff, 0xff90, 
			0x20ff, 0xffc8, 0x487f, 0xff84, 0x983f, 0xf703, 0x321f, 0xe200, 
			0x640f, 0xc000, 0xc907, 0xe200, 0x920f, 0xf101, 0xf41f, 0xf886, 
			0xac07, 0xfc4d, 0xf407, 0xfe2a, 0x3807, 0xff1f, 0xfc07, 0xff8b, 
			0xe807, 0xffc5, 0x5407, 0xffe3, 0xa807, 0xfff1, 0xfc07, 0xfff8, 
			0x0c07, 0xfffc, 0x1fff, 0xfffe, 0x3fff, 0xffff, 0x7fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 
			0xffff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff1, 0x1fff, 0xffe3, 
			0x8fff, 0xffc6, 0xc7ff, 0xff8d, 0x63ff, 0xff1a, 0xb1ff, 0xff95, 
			0x60ff, 0xffca, 0xc87f, 0xff85, 0x983f, 0xf703, 0x321f, 0xe200, 
			0x640f, 0xc000, 0xc907, 0xe200, 0x920f, 0xf101, 0xf41f, 0xf886, 
			0xac07, 0xfc4d, 0xf407, 0xfe2a, 0x3807, 0xff1f, 0xfc07, 0xff8b, 
			0xe807, 0xffc5, 0x5407, 0xffe3, 0xa807, 0xfff1, 0xfc07, 0xfff8, 
			0x0c07, 0xfffc, 0x1fff, 0xfffe, 0x3fff, 0xffff, 0x7fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 
			0xffff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff1, 0x1fff, 0xffe3, 
			0x8fff, 0xffc7, 0xc7ff, 0xff8f, 0xe3ff, 0xff1f, 0xf1ff, 0xff9f, 
			0xe0ff, 0xffcf, 0xc87f, 0xff87, 0x983f, 0xf703, 0x321f, 0xe200, 
			0x640f, 0xc000, 0xc907, 0xe200, 0x920f, 0xf101, 0xf41f, 0xf886, 
			0x0fff, 0xfc4d, 0xe7ff, 0xfe2a, 0x33ff, 0xff1f, 0xfbff, 0xff89, 
			0xe3ff, 0xffc4, 0x03ff, 0xffe3, 0x03ff, 0xfff1, 0xffff, 0xfff8, 
			0x0fff, 0xfffc, 0x1fff, 0xfffe, 0x3fff, 0xffff, 0x7fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0001, 0x0000, 0x0002, 
			0x8000, 0x0004, 0x4000, 0x0008, 0x2000, 0x0011, 0x1000, 0x0022, 
			0x8800, 0x0044, 0x4400, 0x0088, 0x2200, 0x0110, 0x1100, 0x0390, 
			0x2080, 0x07c8, 0x4840, 0x0f84, 0x9820, 0x1703, 0x3210, 0x2200, 
			0x6408, 0x4000, 0xc904, 0x2200, 0x9208, 0x1101, 0xf410, 0x0886, 
			0x0c00, 0x044d, 0xe400, 0x022a, 0x3000, 0x011f, 0xf800, 0x0089, 
			0xe000, 0x0044, 0x0000, 0x0023, 0x0000, 0x0011, 0xfc00, 0x0008, 
			0x0800, 0x0004, 0x1000, 0x0002, 0x2000, 0x0001, 0x4000, 0x0000, 
			0x8000, 0x0000, 0x0000
	};

static int16 DATAS_06     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_07     [] =
	{
			0x0000, 0x0000, 0x010e, 0xffff, 0xffff, 0xf83f, 0xf29f, 0xe54f, 
			0xcaa7, 0xd557, 0xa82b, 0x9393, 0xa7ab, 0x9793, 0xa7ab, 0x8753, 
			0xfea7, 0xfd57, 0xfaaf, 0xf95f, 0xf2bf, 0xf53f, 0xf27f, 0xf57f, 
			0xf07f, 0xffff, 0xf07f, 0xf27f, 0xf57f, 0xf27f, 0xf57f, 0xf07f, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf83f, 0xf29f, 0xe54f, 
			0xcaa7, 0xd557, 0xa82b, 0x9393, 0xa7ab, 0x9793, 0xa7ab, 0x8753, 
			0xfea7, 0xfd57, 0xfaaf, 0xf95f, 0xf2bf, 0xf53f, 0xf27f, 0xf57f, 
			0xf07f, 0xffff, 0xf07f, 0xf27f, 0xf57f, 0xf27f, 0xf57f, 0xf07f, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf83f, 0xf01f, 0xe00f, 
			0xc007, 0xc007, 0x8003, 0x8383, 0x8783, 0x8783, 0x8783, 0x8703, 
			0xfe07, 0xfc07, 0xf80f, 0xf81f, 0xf03f, 0xf03f, 0xf07f, 0xf07f, 
			0xf07f, 0xffff, 0xf07f, 0xf07f, 0xf07f, 0xf07f, 0xf07f, 0xf07f, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x07e0, 0x0830, 0x1018, 
			0x200c, 0x200c, 0x4386, 0x47c6, 0x4e46, 0x4c46, 0x4c46, 0x7c86, 
			0x3d0c, 0x020c, 0x0418, 0x0430, 0x0860, 0x0860, 0x08c0, 0x08c0, 
			0x0fc0, 0x07c0, 0x0f80, 0x08c0, 0x08c0, 0x08c0, 0x08c0, 0x0fc0, 
			0x07c0, 0x0000, 0x0000
	};

static int16 DATAS_08     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_09     [] =
	{
			0x0000, 0x0000, 0x0208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0x7fff, 0xffff, 0x7fff, 0xfffe, 0x7fff, 0xfffe, 0x7fff, 0xfffc, 
			0x3fff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfff8, 
			0x3fff, 0xfff8, 0xffff, 0xfff8, 0xffff, 0xfff8, 0x3fff, 0xfff8, 
			0xffff, 0xfff8, 0xffff, 0xfff8, 0x3fff, 0xfff0, 0xbfff, 0xfff0, 
			0xbfff, 0xffe0, 0xb7ff, 0xffe0, 0xb7ff, 0xffc0, 0x93ff, 0xffdc, 
			0xbfff, 0xfffe, 0xbfff, 0xffff, 0xffff, 0xffff, 0xfdff, 0xfffb, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0x7fff, 0xffff, 0x7fff, 0xfffe, 0x7fff, 0xfffe, 0x7fff, 0xfffc, 
			0x3fff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfff8, 
			0x3fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfff8, 
			0x3fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfff0, 0xbfff, 0xfff0, 
			0xbfff, 0xffe0, 0xb7ff, 0xffe0, 0xb7ff, 0xffc0, 0x93ff, 0xffdc, 
			0xbfff, 0xfffa, 0x8fff, 0xffec, 0x1fff, 0xfffe, 0x5fff, 0xfffb, 
			0x6fff, 0xffef, 0xfbff, 0xffff, 0x7fff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0x7fff, 0xffff, 0x7fff, 0xfffe, 0x7fff, 0xfffe, 0x7fff, 0xfffc, 
			0x3fff, 0xfffc, 0x7fff, 0xfff8, 0x3fff, 0xfff8, 0x3fff, 0xfffa, 
			0x3fff, 0xfff9, 0x3fff, 0xfffa, 0x3fff, 0xfff9, 0x3fff, 0xfffa, 
			0x3fff, 0xfff9, 0x3fff, 0xfff8, 0x3fff, 0xfff0, 0xbfff, 0xfff0, 
			0xbfff, 0xffe0, 0xb7ff, 0xffe0, 0xb7ff, 0xffc0, 0x93ff, 0xffdc, 
			0xbfff, 0xfff0, 0x8fff, 0xffe0, 0x07ff, 0xffe0, 0x01ff, 0xffc0, 
			0x03ff, 0xffcc, 0x39ff, 0xffbe, 0x3eff, 0xffff, 0x3fff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x8000, 0x0000, 0x8000, 0x0001, 0x4000, 0x0001, 0x4000, 0x0002, 
			0x2000, 0x0002, 0x2000, 0x0004, 0x1000, 0x0004, 0x1000, 0x0004, 
			0x1000, 0x0004, 0x1000, 0x0004, 0x1000, 0x0004, 0x1000, 0x0004, 
			0x1000, 0x0004, 0x1000, 0x0004, 0x1000, 0x000c, 0x9800, 0x000c, 
			0x9800, 0x0014, 0x9c00, 0x0014, 0x9c00, 0x0025, 0xde00, 0x003d, 
			0xde00, 0x0001, 0xc000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0004, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_10     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_11     [] =
	{
			0x0000, 0x0000, 0x020e, 0xffff, 0xffff, 0xffff, 0xffff, 0xc070, 
			0x1c07, 0xd676, 0x5d67, 0xc070, 0x1c07, 0xdb75, 0xddb7, 0xc070, 
			0x1c07, 0xffff, 0xffff, 0xfbfe, 0xffbf, 0xfcfe, 0xfe7f, 0xff3e, 
			0xf9ff, 0xffce, 0xe7ff, 0xfff2, 0x9fff, 0xfffc, 0x7fff, 0xfffe, 
			0xffff, 0xfffe, 0xffff, 0xfff0, 0x1fff, 0xfff8, 0x3fff, 0xfffc, 
			0x7fff, 0xfffe, 0xffff, 0xffff, 0xffff, 0xff80, 0x02ff, 0xffb3, 
			0x12ff, 0xffaa, 0xaaff, 0xffaa, 0xa2ff, 0xffb3, 0x2aff, 0xffa2, 
			0xaaff, 0xffa2, 0x9aff, 0xff80, 0x02ff, 0xffff, 0xfeff, 0xff80, 
			0x00ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc070, 
			0x1c07, 0xd676, 0x5d67, 0xc070, 0x1c07, 0xdb75, 0xddb7, 0xc070, 
			0x1c07, 0xffff, 0xffff, 0xfbfe, 0xffbf, 0xfcfe, 0xfe7f, 0xff3e, 
			0xf9ff, 0xffce, 0xe7ff, 0xfff2, 0x9fff, 0xfffc, 0x7fff, 0xfffe, 
			0xffff, 0xfffe, 0xffff, 0xfff0, 0x1fff, 0xfff8, 0x3fff, 0xfffc, 
			0x7fff, 0xfffe, 0xffff, 0xffff, 0xffff, 0xff80, 0x02ff, 0xffb3, 
			0x12ff, 0xffaa, 0xaaff, 0xffaa, 0xa2ff, 0xffb3, 0x2aff, 0xffa2, 
			0xaaff, 0xffa2, 0x9aff, 0xff80, 0x02ff, 0xffff, 0xfeff, 0xff80, 
			0x00ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc070, 
			0x1c07, 0xd676, 0x5d67, 0xc070, 0x1c07, 0xdb75, 0xddb7, 0xc070, 
			0x1c07, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff80, 0x02ff, 0xffb3, 
			0x12ff, 0xffaa, 0xaaff, 0xffaa, 0xa2ff, 0xffb3, 0x2aff, 0xffa2, 
			0xaaff, 0xffa2, 0x9aff, 0xff80, 0x02ff, 0xffff, 0xfeff, 0xff80, 
			0x00ff, 0xffff, 0xffff, 0x0000, 0x0000, 0x7fdf, 0xf7fc, 0x4050, 
			0x1404, 0x5656, 0x5564, 0x4050, 0x1404, 0x5b55, 0xd5b4, 0x4050, 
			0x1404, 0x7fdf, 0xf7fc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x00ff, 0xfe00, 0x0080, 0x0300, 0x00b3, 
			0x1300, 0x00aa, 0xab00, 0x00aa, 0xa300, 0x00b3, 0x2b00, 0x00a2, 
			0xab00, 0x00a2, 0x9b00, 0x0080, 0x0300, 0x00ff, 0xff00, 0x007f, 
			0xff00, 0x0000, 0x0000
	};

static int16 DATAS_12     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_13     [] =
	{
			0x0000, 0x0000, 0x020e, 0xffff, 0xffff, 0xffff, 0xffff, 0xe03f, 
			0xff8f, 0xe020, 0x0087, 0xe020, 0x7c83, 0xe020, 0x4483, 0xe020, 
			0x4483, 0xe020, 0x4483, 0xe020, 0x4483, 0xe020, 0x4483, 0xe020, 
			0x7c83, 0xe020, 0x0083, 0xe01f, 0xff03, 0xe000, 0x0003, 0xe000, 
			0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe01e, 0x0203, 0xe01e, 
			0x0303, 0xe01f, 0x0383, 0xe01f, 0xffc3, 0xe00f, 0xffe3, 0xe00f, 
			0xffe3, 0xe003, 0xffc3, 0xe000, 0x0383, 0xe000, 0x0303, 0xe400, 
			0x0203, 0xe000, 0x0003, 0xf000, 0x0003, 0xf800, 0x0003, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe03f, 
			0xff8f, 0xe020, 0x0087, 0xe020, 0x7c83, 0xe020, 0x4483, 0xe020, 
			0x4483, 0xe020, 0x4483, 0xe020, 0x4483, 0xe020, 0x4483, 0xe020, 
			0x7c83, 0xe020, 0x0083, 0xe01f, 0xff03, 0xe000, 0x0003, 0xe000, 
			0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe000, 
			0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe000, 
			0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe000, 0x0003, 0xe400, 
			0x0003, 0xe000, 0x0003, 0xf000, 0x0003, 0xf800, 0x0003, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe03f, 
			0xff8f, 0xefe0, 0x00f7, 0xefe0, 0x7cfb, 0xefe0, 0x7cfb, 0xefe0, 
			0x7cfb, 0xefe0, 0x7cfb, 0xefe0, 0x7cfb, 0xefe0, 0x7cfb, 0xefe0, 
			0x7cfb, 0xefe0, 0x00fb, 0xefff, 0xfffb, 0xefff, 0xfffb, 0xefff, 
			0xfffb, 0xee00, 0x003b, 0xee00, 0x003b, 0xee00, 0x003b, 0xee00, 
			0x003b, 0xee00, 0x003b, 0xee00, 0x003b, 0xee00, 0x001b, 0xee00, 
			0x001b, 0xee00, 0x003b, 0xee00, 0x003b, 0xee00, 0x003b, 0xee00, 
			0x003b, 0xee00, 0x003b, 0xffff, 0xfffb, 0xf800, 0x0003, 0xffff, 
			0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x1fff, 
			0xfff0, 0x143f, 0xff98, 0x143f, 0xff8c, 0x143f, 0xc78c, 0x143f, 
			0xc78c, 0x143f, 0xc78c, 0x143f, 0xc78c, 0x143f, 0xc78c, 0x143f, 
			0xff8c, 0x143f, 0xff8c, 0x13ff, 0xff0c, 0x1000, 0x000c, 0x1000, 
			0x000c, 0x11ff, 0xffcc, 0x1100, 0x004c, 0x1100, 0x004c, 0x1100, 
			0x004c, 0x1100, 0x004c, 0x1100, 0x000c, 0x1100, 0x000c, 0x1100, 
			0x000c, 0x1100, 0x000c, 0x1100, 0x004c, 0x1100, 0x004c, 0x1500, 
			0x004c, 0x1100, 0x004c, 0x0fff, 0xfffc, 0x07ff, 0xfffc, 0x0000, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_14     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_15     [] =
	{
			0x0000, 0x0000, 0x0108, 0xffff, 0xffff, 0xffff, 0xffff, 0xfc3f, 
			0xf00f, 0xe407, 0xe807, 0xd203, 0xd403, 0xc403, 0xc003, 0xe007, 
			0xe007, 0xf00f, 0xfc3f, 0xffff, 0xffff, 0xfc3f, 0xfc3f, 0xfc3f, 
			0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 
			0xfc7f, 0xfe7f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfc3f, 
			0xf00f, 0xe407, 0xe807, 0xd203, 0xd403, 0xc403, 0xc003, 0xe007, 
			0xe007, 0xf00f, 0xfc3f, 0xffff, 0xffff, 0xfdbf, 0xfdbf, 0xfdbf, 
			0xfdbf, 0xfdbf, 0xfdbf, 0xfdbf, 0xfdbf, 0xfdbf, 0xfdbf, 0xfdbf, 
			0xfdff, 0xfe7f, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfc3f, 
			0xf00f, 0xe407, 0xe807, 0xd203, 0xd403, 0xc403, 0xc003, 0xe007, 
			0xe007, 0xf00f, 0xfc3f, 0xffff, 0xffff, 0xfc3f, 0xfc3f, 0xfc3f, 
			0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 0xfc3f, 
			0xfc7f, 0xfe7f, 0xffff, 0x0000, 0x0000, 0x0000, 0x07e0, 0x1c38, 
			0x300c, 0x2404, 0x6806, 0x5202, 0x5402, 0x4402, 0x4002, 0x6006, 
			0x2004, 0x300c, 0x1c38, 0x07e0, 0x0180, 0x02c0, 0x02c0, 0x02c0, 
			0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 
			0x02c0, 0x0180, 0x0000
	};

static int16 DATAS_16     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

static int16 DATAS_17     [] =
	{
			0x0000, 0x0000, 0x0208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xf0ff, 0xe1ff, 0xff03, 0xfe07, 0xf003, 0xe007, 0xf003, 
			0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xffff, 
			0xffff, 0xffbf, 0xff7f, 0xff80, 0x007f, 0xffbf, 0xff7f, 0xffbf, 
			0xff7f, 0xffbf, 0xe1ff, 0xfc07, 0xfe07, 0xfe0f, 0xe007, 0xff1f, 
			0xe007, 0xffbf, 0xe007, 0xffff, 0xe007, 0xe000, 0xa007, 0xecc4, 
			0xbfff, 0xeaaa, 0xbfff, 0xeaa8, 0xbfff, 0xecca, 0xbfff, 0xe8aa, 
			0xbfff, 0xe8a6, 0xbfff, 0xe000, 0xbfff, 0xffff, 0xbfff, 0xe000, 
			0x3fff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xf0ff, 0xe1ff, 0xff03, 0xfe07, 0xf003, 0xe007, 0xf003, 
			0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xffff, 
			0xffff, 0xffbf, 0xff7f, 0xff80, 0x007f, 0xffbf, 0xff7f, 0xffbf, 
			0xff7f, 0xffbf, 0xe1ff, 0xfc07, 0xfe07, 0xfe0f, 0xe007, 0xff1f, 
			0xe007, 0xffbf, 0xe007, 0xffff, 0xe007, 0xe000, 0xa007, 0xecc4, 
			0xbfff, 0xeaaa, 0xbfff, 0xeaa8, 0xbfff, 0xecca, 0xbfff, 0xe8aa, 
			0xbfff, 0xe8a6, 0xbfff, 0xe000, 0xbfff, 0xffff, 0xbfff, 0xe000, 
			0x3fff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xf0ff, 0xe1ff, 0xff03, 0xfe07, 0xf003, 0xe007, 0xf003, 
			0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xf003, 0xe007, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xe1ff, 0xffff, 0xfe07, 0xffff, 0xe007, 0xffff, 
			0xe007, 0xffff, 0xe007, 0xffff, 0xe007, 0xe000, 0xa007, 0xecc4, 
			0xbfff, 0xeaaa, 0xbfff, 0xeaa8, 0xbfff, 0xecca, 0xbfff, 0xe8aa, 
			0xbfff, 0xe8a6, 0xbfff, 0xe000, 0xbfff, 0xffff, 0xbfff, 0xe000, 
			0x3fff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0f00, 
			0x1e00, 0x1ffc, 0x3ff8, 0x10fe, 0x21fc, 0x1ffe, 0x3ffc, 0x1ffe, 
			0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 
			0x3ffc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x1e00, 0x0000, 0x3ff8, 0x0000, 0x21fc, 0x0000, 0x3ffc, 0x0000, 
			0x3ffc, 0x0000, 0x3ffc, 0x3fff, 0xbffc, 0x2000, 0xfffc, 0x2cc4, 
			0xfffc, 0x2aaa, 0xc000, 0x2aa8, 0xc000, 0x2cca, 0xc000, 0x28aa, 
			0xc000, 0x28a6, 0xc000, 0x2000, 0xc000, 0x3fff, 0xc000, 0x1fff, 
			0xc000, 0x0000, 0x0000
	};

static int16 DATAS_18     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	};

#ifndef __GNUC__
static int16 DATAS_20     [] =
	{
			0x0000, 0x0000, 0x0308, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x2000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0400, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0fc0, 0x0002, 0x4000, 0x3ff0, 0x0002, 
			0x4000, 0x7ff8, 0x0002, 0x4000, 0xfffc, 0x0002, 0x4000, 0xf87c, 
			0x0002, 0x4000, 0xf03c, 0x0002, 0x4000, 0x603c, 0x0002, 0x4000, 
			0x007c, 0x0002, 0x4000, 0x00f8, 0x0002, 0x4000, 0x01f0, 0x0002, 
			0x4000, 0x03e0, 0x0002, 0x4000, 0x03c0, 0x0002, 0x4000, 0x0780, 
			0x0002, 0x4000, 0x0780, 0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 
			0x0700, 0x0002, 0x4000, 0x0200, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0700, 0x0002, 0x4000, 0x0f80, 0x0002, 0x4000, 0x0f80, 
			0x0002, 0x4000, 0x0f80, 0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 0x0800, 
			0x0002, 0x4000, 0x1004, 0x0002, 0x4000, 0x6004, 0x0002, 0x4000, 
			0x0004, 0x0002, 0x4000, 0x0008, 0x0002, 0x4000, 0x0010, 0x0002, 
			0x4000, 0x0020, 0x0002, 0x4000, 0x0040, 0x0002, 0x4000, 0x0080, 
			0x0002, 0x4000, 0x0080, 0x0002, 0x4000, 0x0100, 0x0002, 0x4000, 
			0x0100, 0x0002, 0x4000, 0x0200, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0080, 
			0x0002, 0x4000, 0x0080, 0x0002, 0x4000, 0x0300, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_21     [] =
	{
			0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000
	};

static int16 DATAS_22     [] =
	{
			0x0000, 0x0000, 0x0308, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x7800, 0x0002, 0x4003, 0xf800, 0x0002, 0x400f, 0xfc40, 0x0002, 
			0x401f, 0xfc40, 0x0002, 0x400f, 0xfe00, 0x0002, 0x4003, 0xfe00, 
			0x0002, 0x4000, 0xff40, 0x0002, 0x4000, 0x3f40, 0x0002, 0x4030, 
			0x1f40, 0x0002, 0x4002, 0x0f80, 0x0002, 0x4000, 0x6780, 0x0002, 
			0x4000, 0x0380, 0x0042, 0x4000, 0x01c0, 0x0042, 0x4000, 0x00c0, 
			0x00c2, 0x4000, 0x00c0, 0x0082, 0x4000, 0x0260, 0x0102, 0x4000, 
			0x0260, 0x0602, 0x4000, 0x0000, 0x1c02, 0x4000, 0x003c, 0x0082, 
			0x4000, 0x027e, 0x0002, 0x4000, 0x027e, 0x0802, 0x4000, 0x027e, 
			0x0002, 0x4000, 0x007e, 0x0002, 0x4000, 0x003c, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x4000, 0x0002, 0x4002, 0x0000, 0x0002, 0x4008, 0x0040, 0x0002, 
			0x4000, 0x0044, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 
			0x0002, 0x4000, 0x0040, 0x0002, 0x4000, 0x0040, 0x0002, 0x4030, 
			0x0040, 0x0002, 0x4002, 0x0000, 0x0002, 0x4000, 0x6008, 0x0002, 
			0x4000, 0x0000, 0x0042, 0x4000, 0x0000, 0x0042, 0x4000, 0x0000, 
			0x00c2, 0x4000, 0x0000, 0x0082, 0x4000, 0x0200, 0x0102, 0x4000, 
			0x0200, 0x0602, 0x4000, 0x0000, 0x1c02, 0x4000, 0x0000, 0x0082, 
			0x4000, 0x4210, 0x0002, 0x4000, 0x0220, 0x0802, 0x4000, 0x0200, 
			0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0040, 0x0002, 
			0x4000, 0x0047, 0xc002, 0x4000, 0x000f, 0xe002, 0x4000, 0x000f, 
			0xf002, 0x4000, 0x004e, 0x7802, 0x4000, 0x0040, 0x3802, 0x4030, 
			0x0040, 0x3c02, 0x4002, 0x0000, 0x1c02, 0x4000, 0x6038, 0x1c02, 
			0x4000, 0x003e, 0x3c42, 0x4000, 0x1c1f, 0xf842, 0x4000, 0x3c07, 
			0xf0c2, 0x4000, 0x3801, 0xe082, 0x4000, 0x3a00, 0x0102, 0x4000, 
			0x1200, 0x0602, 0x4000, 0x0000, 0x1c02, 0x4000, 0x7000, 0x0082, 
			0x4000, 0xfa00, 0x0002, 0x4000, 0xfa00, 0x0802, 0x4000, 0xfa00, 
			0x0002, 0x4000, 0x7000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 
			0xfffe, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 
			0x4000, 0x0000, 0x0002, 0x400c, 0x0040, 0x0002, 0x4003, 0x0040, 
			0x0002, 0x4000, 0xc040, 0x0002, 0x4000, 0x2040, 0x0002, 0x4018, 
			0x1040, 0x0002, 0x4007, 0x0800, 0x0002, 0x4000, 0xe400, 0x0402, 
			0x4000, 0x0200, 0x0442, 0x4000, 0x0410, 0x0842, 0x4000, 0x0406, 
			0x1002, 0x4000, 0x0801, 0xe082, 0x4000, 0x0a00, 0x0102, 0x4000, 
			0x1200, 0x0202, 0x4000, 0x0200, 0x1802, 0x4000, 0x0200, 0x0002, 
			0x4000, 0x0000, 0x0102, 0x4000, 0x0800, 0x0602, 0x4000, 0x0800, 
			0x0002, 0x4000, 0x3000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
			0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_23     [] =
	{
			0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
			0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
			0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
			0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000
	};
#endif

static int16 DATAS_37     [] =
	{
			0x0000, 0x0000, 0x020e, 0xffff, 0xffff, 0xffff, 0x9fff, 0xffff, 
			0x1fff, 0xffff, 0x1fff, 0xfffe, 0x3fff, 0xfffe, 0x3fff, 0xfffc, 
			0x7fff, 0xfffc, 0x7fff, 0xfff8, 0xffff, 0xfff8, 0xffff, 0xfff1, 
			0xffff, 0xfff1, 0xe3ff, 0xffe3, 0x03ff, 0xffe0, 0x07ff, 0xffc0, 
			0x07ff, 0xffc0, 0x8fff, 0xff87, 0x8fff, 0xff9f, 0x1fff, 0xffff, 
			0x1fff, 0xfff6, 0x3fff, 0xfff2, 0x3fff, 0xfff0, 0x7fff, 0xfff0, 
			0x1fff, 0xfff0, 0x1fff, 0xfff0, 0x3fff, 0xfff0, 0x7fff, 0xfff0, 
			0xffff, 0xfff1, 0xffff, 0xfff3, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x9fff, 0xffff, 
			0x5fff, 0xffff, 0x5fff, 0xfffe, 0xbfff, 0xfffe, 0xbfff, 0xfffd, 
			0x7fff, 0xfffd, 0x7fff, 0xfffa, 0xffff, 0xfffa, 0xffff, 0xfff5, 
			0xffff, 0xfff5, 0xe3ff, 0xffe3, 0x0bff, 0xffe8, 0x77ff, 0xffcf, 
			0x37ff, 0xffd8, 0xafff, 0xffa7, 0xafff, 0xff9f, 0x5fff, 0xffff, 
			0x5fff, 0xfff6, 0xbfff, 0xfff2, 0xbfff, 0xfff1, 0x7fff, 0xfff1, 
			0x1fff, 0xfff3, 0x9fff, 0xfff3, 0x3fff, 0xfff6, 0x7fff, 0xfff0, 
			0xffff, 0xfff1, 0xffff, 0xfff3, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xfff7, 0xefff, 0xffff, 0x7fff, 0xffef, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffb, 0xffff, 0xfff9, 
			0xffff, 0xfffb, 0xdfff, 0xfffb, 0xbfff, 0xffff, 0x7fff, 0xfffa, 
			0xffff, 0xfffd, 0xffff, 0xfffb, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x2000, 0x0000, 0x4000, 0x0000, 0x8000, 0x0001, 
			0x0000, 0x0002, 0x0000, 0x0004, 0x0000, 0x0000, 0x0000, 0x0000, 
			0x0000, 0x0000, 0x0000
	};

static int16 DATAS_38     [] =
	{
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
			0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000
	};



/*		TEDINFOS		*/

static TEDINFO TEDINFO_05   = {TEXT_14, TEXT_19, TEXT_19, 3, 6, 0, 0x1180, 0, 0, 13, 1};


/*		AUSERBLK		*/

static AUSERBLK230 A_3DBUTTON01 = {A_3Dbutton, 0x21f11178L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON02 = {A_3Dbutton, 0x29000178L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON03 = {A_3Dbutton, 0x29b20178L , Auo_string  , TEXT_88     , NULL, NULL};
static AUSERBLK230 A_3DBUTTON04 = {A_3Dbutton, 0x29b20178L , Auo_string  , TEXT_76     , NULL, NULL};
static AUSERBLK230 A_3DBUTTON05 = {A_3Dbutton, 0xa9e10178L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON06 = {A_3Dbutton, 0x20219078L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON07 = {A_3Dbutton, 0x29e20178L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON08 = {A_3Dbutton, 0x29019178L , Auo_string  , NULL, NULL, NULL};
static AUSERBLK230 A_3DBUTTON11 = {A_3Dbutton, 0x29b20178L , Auo_string  , TEXT_125    , NULL, NULL};
static AUSERBLK230 A_ARROWS02   = {A_arrows, 0x13010001L , NULL, NULL, NULL, NULL};
static AUSERBLK230 A_BOXED01    = {A_boxed, 0x9038ff12L , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_BOXED02    = {A_boxed, 0x9010ff12L , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_BOXED03    = {A_boxed, 0x90700512L , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_BOXED04    = {A_boxed, 0x90380d12L , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_BOXED05    = {A_boxed, 0x9010ff1aL , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_BOXED06    = {A_boxed, 0x9008ff12L , Auo_boxed   , NULL, NULL, NULL};
static AUSERBLK230 A_CHECKBOX01 = {A_checkbox, 0x1L        , Auo_string  , TEXT_36     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX02 = {A_checkbox, 0x1L        , Auo_string  , TEXT_43     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX03 = {A_checkbox, 0x1L        , Auo_string  , TEXT_56     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX04 = {A_checkbox, 0x1L        , Auo_string  , TEXT_54     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX05 = {A_checkbox, 0x1L        , Auo_string  , TEXT_51     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX06 = {A_checkbox, 0x1L        , Auo_string  , TEXT_35     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX07 = {A_checkbox, 0x1L        , Auo_string  , TEXT_78     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX08 = {A_checkbox, 0x1L        , Auo_string  , TEXT_80     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX09 = {A_checkbox, 0x1L        , Auo_string  , TEXT_42     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX10 = {A_checkbox, 0x1L        , Auo_string  , TEXT_44     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX11 = {A_checkbox, 0x1L        , Auo_string  , TEXT_48     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX12 = {A_checkbox, 0x1L        , Auo_string  , TEXT_49     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX13 = {A_checkbox, 0x1L        , Auo_string  , TEXT_50     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX15 = {A_checkbox, 0x1L        , Auo_string  , TEXT_77     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX16 = {A_checkbox, 0x1L        , Auo_string  , TEXT_82     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX17 = {A_checkbox, 0x1L        , Auo_string  , TEXT_57     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX18 = {A_checkbox, 0x1L        , Auo_string  , TEXT_52     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX19 = {A_checkbox, 0x1L        , Auo_string  , TEXT_81     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX20 = {A_checkbox, 0x1L        , Auo_string  , TEXT_83     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX24 = {A_checkbox, 0x1L        , Auo_string  , TEXT_97     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX25 = {A_checkbox, 0x1L        , Auo_string  , TEXT_98     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX26 = {A_checkbox, 0x1L        , Auo_string  , TEXT_99     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX27 = {A_checkbox, 0x1L        , Auo_string  , TEXT_100    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX28 = {A_checkbox, 0x1L        , Auo_string  , TEXT_101    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX29 = {A_checkbox, 0x1L        , Auo_string  , TEXT_108    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX30 = {A_checkbox, 0x1L        , Auo_string  , TEXT_107    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX31 = {A_checkbox, 0x1L        , Auo_string  , TEXT_109    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX32 = {A_checkbox, 0x1L        , Auo_string  , TEXT_96     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX33 = {A_checkbox, 0x1L        , Auo_string  , TEXT_106    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX34 = {A_checkbox, 0x1L        , Auo_string  , TEXT_110    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX35 = {A_checkbox, 0x1L        , Auo_string  , TEXT_55     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX36 = {A_checkbox, 0x1L        , Auo_string  , TEXT_102    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX37 = {A_checkbox, 0x1L        , Auo_string  , TEXT_53     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX38 = {A_checkbox, 0x1L        , Auo_string  , TEXT_22     , NULL, NULL};
static AUSERBLK230 A_CHECKBOX39 = {A_checkbox, 0x1L        , Auo_string  , TEXT_105    , NULL, NULL};
static AUSERBLK230 A_CHECKBOX40 = {A_checkbox, 0x1L        , Auo_string  , TEXT_29     , NULL, NULL};
static AUSERBLK230 A_CYCLE01    = {A_cycle, 0x10290L    , Auo_cycle   , TEXT_130    , NULL, NULL};
static AUSERBLK230 A_FTEXT03    = {A_ftext, 0x1000dL    , Auo_ftext   , TEXT_02     , NULL, NULL};
static AUSERBLK230 A_INNERFRAME02 = {A_innerframe, 0x10008f19L , Auo_string  , TEXT_07     , NULL, NULL};
static AUSERBLK230 A_SLIDER01   = {A_slider, 0x3L        , Auo_slider  , NULL, NULL, NULL};


/*		ICONS		*/

static CICON _C4_I_ASSM = {
		4,
		&DATAS_37    [3],
		DATAS_38    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_ASSM [] = {
		0x0000, 0x0000, 0x0000, 0x6000, 0x0000, 0xe000, 0x0000, 0xe000, 
		0x0001, 0xc000, 0x0001, 0xc000, 0x0003, 0x8000, 0x0003, 0x8000, 
		0x0007, 0x0000, 0x0007, 0x0000, 0x000e, 0x0000, 0x000e, 0x1c00, 
		0x001c, 0xfc00, 0x001f, 0xf800, 0x003f, 0xf800, 0x003f, 0x7000, 
		0x0078, 0x7000, 0x0060, 0xe000, 0x0000, 0xe000, 0x0009, 0xc000, 
		0x000d, 0xc000, 0x000f, 0x8000, 0x000f, 0xe000, 0x000f, 0xe000, 
		0x000f, 0xc000, 0x000f, 0x8000, 0x000f, 0x0000, 0x000e, 0x0000, 
		0x000c, 0x0000, 0x0008, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_ASSM [] = {
		0x0000, 0x0000, 0x0000, 0x6000, 0x0000, 0xa000, 0x0000, 0xa000, 
		0x0001, 0x4000, 0x0001, 0x4000, 0x0002, 0x8000, 0x0002, 0x8000, 
		0x0005, 0x0000, 0x0005, 0x0000, 0x000a, 0x0000, 0x000a, 0x1c00, 
		0x0014, 0xe400, 0x0017, 0x0800, 0x0020, 0xe800, 0x0027, 0x5000, 
		0x0058, 0x5000, 0x0060, 0xa000, 0x0000, 0xa000, 0x0009, 0x4000, 
		0x000d, 0x4000, 0x000a, 0x8000, 0x0008, 0xe000, 0x0008, 0x2000, 
		0x0008, 0x4000, 0x0008, 0x8000, 0x0009, 0x0000, 0x000a, 0x0000, 
		0x000c, 0x0000, 0x0008, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_ASSM = {{
		_MSK_I_ASSM, _DAT_I_ASSM, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 20,  0,  0},&_C4_I_ASSM};

static int16 _MSK_I_CEWS [] = {
		0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_CEWS [] = {
		0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x4000, 0x0000, 
		0x0002, 0x4000, 0x0000, 0x0002, 0x4001, 0xfc00, 0x0002, 0x4007, 
		0xff80, 0x0002, 0x401f, 0xffc0, 0x0002, 0x403f, 0xffe0, 0x0002, 
		0x403f, 0x07e0, 0x0002, 0x407c, 0x01f0, 0x0002, 0x40f8, 0x00f0, 
		0x2002, 0x40f0, 0x0060, 0x6002, 0x41f0, 0x0000, 0xe002, 0x49e6, 
		0x0001, 0xff02, 0x55e8, 0x0003, 0xffc2, 0x55e6, 0x0001, 0xffe2, 
		0x5de1, 0x0000, 0xe1e2, 0x55e6, 0x0000, 0x60f2, 0x41f0, 0x0000, 
		0x2072, 0x40f0, 0x0060, 0x0072, 0x40f8, 0x00f0, 0x0072, 0x407c, 
		0x01f0, 0x0072, 0x403f, 0x07e0, 0x00f2, 0x403f, 0xffe0, 0x01e2, 
		0x401f, 0xffcd, 0xffe2, 0x4007, 0xff97, 0xffc2, 0x4001, 0xfc2b, 
		0x7f02, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
		0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000};
static CICONBLK I_CEWS = {{
		_MSK_I_CEWS, _DAT_I_CEWS, TEXT_27,
		0x1000,  0,  0, 12,  0, 48, 32,  0, 32, 72,  8},NULL};

static CICON _C4_I_COMPILE = {
		4,
		&DATAS_01    [3],
		DATAS_02    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_COMPILE [] = {
		0x0000, 0x0000, 0x0000, 0x0040, 0x0000, 0x00e0, 0x0000, 0x01f0, 
		0x0000, 0x03f8, 0x0000, 0x07fc, 0x0000, 0x0ffe, 0x000f, 0xcffe, 
		0x003f, 0xf3f8, 0x00ff, 0xfbf8, 0x01ff, 0xfff8, 0x03ff, 0xfff8, 
		0x03ff, 0xfff8, 0x07ff, 0xfff8, 0x07ff, 0xfff8, 0x07ff, 0xfff8, 
		0x0fff, 0xfff8, 0x0fff, 0xfff0, 0x0fff, 0xfff0, 0x0fff, 0xfff0, 
		0x0fff, 0xffe0, 0x0fff, 0xffe0, 0x0fff, 0xffc0, 0x0fbf, 0xff80, 
		0x0f9f, 0xff00, 0x0f8f, 0xfc00, 0x1fc3, 0xf000, 0x3fe0, 0x0000, 
		0x7ff0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_COMPILE [] = {
		0x0000, 0x0000, 0x0000, 0x0040, 0x0000, 0x00e0, 0x0000, 0x01b0, 
		0x0000, 0x0318, 0x0000, 0x060c, 0x0000, 0x0c06, 0x000f, 0xce0e, 
		0x003f, 0xf208, 0x00ff, 0xfa08, 0x01ff, 0xfe08, 0x03fc, 0x7e08, 
		0x03f0, 0x3e08, 0x07e0, 0x1e08, 0x07c0, 0x1e08, 0x07c0, 0x1e08, 
		0x0f83, 0x3e08, 0x0f87, 0xfc10, 0x0f87, 0xfc10, 0x0f87, 0xf810, 
		0x0f83, 0xf020, 0x0fc1, 0xc020, 0x0dc0, 0x0040, 0x0aa0, 0x0080, 
		0x0710, 0x0300, 0x0f8c, 0x0c00, 0x1fc3, 0xf000, 0x3fe0, 0x0000, 
		0x7ff0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_COMPILE = {{
		_MSK_I_COMPILE, _DAT_I_COMPILE, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 16,  0,  0},&_C4_I_COMPILE};

static CICON _C4_I_DEBUG = {
		4,
		&DATAS_03    [3],
		DATAS_04    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_DEBUG [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0x000c, 0x3800, 0x001c, 
		0x1c00, 0x0038, 0x0e0c, 0x3070, 0x071e, 0x78e0, 0x03b2, 0x4dc0, 
		0x01c7, 0xe380, 0x00ef, 0xf700, 0x007f, 0xfe00, 0x003f, 0xfc00, 
		0x001f, 0xf800, 0x000f, 0xf000, 0x0007, 0xe000, 0x010f, 0xf080, 
		0x039f, 0xf9c0, 0x06df, 0xfb60, 0x1c7f, 0xfe38, 0x013f, 0xfc80, 
		0x03bf, 0xfdc0, 0x06ff, 0xff60, 0x1cff, 0xff38, 0x01ff, 0xff80, 
		0x039f, 0xf9c0, 0x0707, 0xe0e0, 0x0e00, 0x0070, 0x1c00, 0x0038, 
		0x3800, 0x001c, 0x3000, 0x000c, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_DEBUG [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0x000c, 0x3800, 0x001c, 
		0x1c00, 0x0038, 0x0e0c, 0x3070, 0x071e, 0x78e0, 0x03b2, 0x4dc0, 
		0x01c7, 0xe380, 0x00ed, 0xb700, 0x007d, 0xbe00, 0x0037, 0xec00, 
		0x001b, 0xd800, 0x000d, 0xb000, 0x0006, 0x6000, 0x010f, 0xf080, 
		0x039d, 0xb9c0, 0x06db, 0xdb60, 0x1c76, 0x6e38, 0x012f, 0xf480, 
		0x03bc, 0x3dc0, 0x06ff, 0xff60, 0x1cf8, 0x1f38, 0x01ff, 0xff80, 
		0x039f, 0xf9c0, 0x0707, 0xe0e0, 0x0e00, 0x0070, 0x1c00, 0x0038, 
		0x3800, 0x001c, 0x3000, 0x000c, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_DEBUG = {{
		_MSK_I_DEBUG, _DAT_I_DEBUG, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 16,  0,  0},&_C4_I_DEBUG};

static CICON _C4_I_EDIT = {
		4,
		&DATAS_05    [3],
		DATAS_06    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_EDIT [] = {
		0x0000, 0x0000, 0x0001, 0x0000, 0x0003, 0x8000, 0x0007, 0xc000, 
		0x000f, 0xe000, 0x001f, 0xf000, 0x003e, 0xf800, 0x007d, 0x7c00, 
		0x00fa, 0xbe00, 0x01f5, 0x5f00, 0x03fa, 0xbf80, 0x07fd, 0x7fc0, 
		0x0ffe, 0xffe0, 0x1fff, 0xfff0, 0x3fff, 0xfff8, 0x7fff, 0xfffc, 
		0x3fff, 0xfffe, 0x1fff, 0xfffc, 0x0fff, 0xfffe, 0x07ff, 0xfffe, 
		0x03ff, 0xfffe, 0x01ff, 0xfffe, 0x00ff, 0xfffe, 0x007f, 0xfffe, 
		0x003f, 0xfffe, 0x001f, 0xfffe, 0x000f, 0xfbfe, 0x0007, 0xf000, 
		0x0003, 0xe000, 0x0001, 0xc000, 0x0000, 0x8000, 0x0000, 0x0000};
static int16 _DAT_I_EDIT [] = {
		0x0000, 0x0000, 0x0001, 0x0000, 0x0002, 0x8000, 0x0004, 0x4000, 
		0x0008, 0x2000, 0x0011, 0x1000, 0x0022, 0x8800, 0x0045, 0x4400, 
		0x008a, 0xa200, 0x0115, 0x5100, 0x039a, 0xa080, 0x07cd, 0x4840, 
		0x0f86, 0x9820, 0x1703, 0x3210, 0x2200, 0x6408, 0x4000, 0xc904, 
		0x2200, 0x0202, 0x1101, 0xf404, 0x0886, 0x0bfe, 0x044d, 0xe600, 
		0x022a, 0x3200, 0x011f, 0xfa00, 0x0089, 0xe200, 0x0044, 0x0200, 
		0x0023, 0x0200, 0x0011, 0xfe00, 0x0008, 0x0bfe, 0x0004, 0x1000, 
		0x0002, 0x2000, 0x0001, 0x4000, 0x0000, 0x8000, 0x0000, 0x0000};
static CICONBLK I_EDIT = {{
		_MSK_I_EDIT, _DAT_I_EDIT, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 16,  0,  0},&_C4_I_EDIT};

#ifndef __GNUC__
static CICON _C4_I_FHELP = {
		4,
		&DATAS_20    [3],
		DATAS_21    ,
		&DATAS_22    [3],
		DATAS_23    ,
		NULL};
static int16 _MSK_I_FHELP [] = {
		0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 
		0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 
		0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x7fff, 
		0xffff, 0xfffe, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_FHELP [] = {
		0x0000, 0x0000, 0x0000, 0x7fff, 0xffff, 0xfffe, 0x4000, 0x0000, 
		0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
		0x0fc0, 0x0002, 0x4000, 0x3ff0, 0x0002, 0x4000, 0x7ff8, 0x0002, 
		0x4000, 0xfffc, 0x0002, 0x4000, 0xf87c, 0x0002, 0x4000, 0xf03c, 
		0x0002, 0x4000, 0x603c, 0x0002, 0x4000, 0x007c, 0x0002, 0x4000, 
		0x00f8, 0x0002, 0x4000, 0x01f0, 0x0002, 0x4000, 0x03e0, 0x0002, 
		0x4000, 0x03c0, 0x0002, 0x4000, 0x0780, 0x0002, 0x4000, 0x0780, 
		0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 
		0x0200, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 0x0700, 0x0002, 
		0x4000, 0x0f80, 0x0002, 0x4000, 0x0f80, 0x0002, 0x4000, 0x0f80, 
		0x0002, 0x4000, 0x0700, 0x0002, 0x4000, 0x0000, 0x0002, 0x4000, 
		0x0000, 0x0002, 0x7fff, 0xffff, 0xfffe, 0x0000, 0x0000, 0x0000};
static CICONBLK I_FHELP = {{
		_MSK_I_FHELP, _DAT_I_FHELP, TEXT_16,
		0x1000,  0,  0, 12,  0, 48, 32,  0, 32, 72,  8},&_C4_I_FHELP};
#endif

static CICON _C4_I_HELP = {
		4,
		&DATAS_07    [3],
		DATAS_08    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_HELP [] = {
		0x0000, 0x0000, 0x07e0, 0x0ff0, 0x1ff8, 0x3ffc, 0x3ffc, 0x7ffe, 
		0x7ffe, 0x7e7e, 0x7c7e, 0x7c7e, 0x7cfe, 0x3dfc, 0x03fc, 0x07f8, 
		0x07f0, 0x0fe0, 0x0fe0, 0x0fc0, 0x0fc0, 0x0fc0, 0x07c0, 0x0f80, 
		0x0fc0, 0x0fc0, 0x0fc0, 0x0fc0, 0x0fc0, 0x07c0, 0x0000, 0x0000};
static int16 _DAT_I_HELP [] = {
		0x0000, 0x0000, 0x07e0, 0x0830, 0x1018, 0x200c, 0x200c, 0x4386, 
		0x47c6, 0x4e46, 0x4c46, 0x4c46, 0x7c86, 0x3d0c, 0x020c, 0x0418, 
		0x0430, 0x0860, 0x0860, 0x08c0, 0x08c0, 0x0fc0, 0x07c0, 0x0f80, 
		0x08c0, 0x08c0, 0x08c0, 0x08c0, 0x0fc0, 0x07c0, 0x0000, 0x0000};
static CICONBLK I_HELP = {{
		_MSK_I_HELP, _DAT_I_HELP, TEXT_19,
		0x1000,  0,  0,  0,  0, 16, 32,  8, 16,  0,  0},&_C4_I_HELP};

static CICON _C4_I_LAUNCH = {
		4,
		&DATAS_09    [3],
		DATAS_10    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_LAUNCH [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8000, 0x0000, 0x8000, 
		0x0001, 0xc000, 0x0001, 0xc000, 0x0003, 0xe000, 0x0003, 0xe000, 
		0x0007, 0xf000, 0x0007, 0xf000, 0x0007, 0xf000, 0x0007, 0xf000, 
		0x0007, 0xf000, 0x0007, 0xf000, 0x0007, 0xf000, 0x0007, 0xf000, 
		0x0007, 0xf000, 0x000f, 0xf800, 0x000f, 0xf800, 0x001f, 0xfc00, 
		0x001f, 0xfc00, 0x003f, 0xfe00, 0x003f, 0xfe00, 0x000f, 0xf800, 
		0x001f, 0xfc00, 0x003f, 0xfe00, 0x003d, 0xdc00, 0x0031, 0xc600, 
		0x0041, 0xc100, 0x0000, 0x8000, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_LAUNCH [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8000, 0x0000, 0x8000, 
		0x0001, 0xc000, 0x0001, 0xc000, 0x0003, 0x6000, 0x0002, 0x2000, 
		0x0004, 0x1000, 0x0004, 0x1000, 0x0006, 0x1000, 0x0005, 0xd000, 
		0x0006, 0x1000, 0x0005, 0xd000, 0x0006, 0x1000, 0x0005, 0xd000, 
		0x0004, 0x1000, 0x000c, 0x9800, 0x000c, 0x9800, 0x001c, 0x9c00, 
		0x001c, 0x9c00, 0x003d, 0xde00, 0x0031, 0xc600, 0x0008, 0x0800, 
		0x0012, 0xa400, 0x0022, 0xa200, 0x0004, 0x1000, 0x0031, 0x4600, 
		0x0041, 0x4100, 0x0000, 0x8000, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_LAUNCH = {{
		_MSK_I_LAUNCH, _DAT_I_LAUNCH, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 16,  0,  0},&_C4_I_LAUNCH};

static CICON _C4_I_LINK = {
		4,
		&DATAS_11    [3],
		DATAS_12    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_LINK [] = {
		0x0000, 0x0000, 0x7fdf, 0xf7fc, 0x7fdf, 0xf7fc, 0x7fdf, 0xf7fc, 
		0x7fdf, 0xf7fc, 0x7fdf, 0xf7fc, 0x7fdf, 0xf7fc, 0x7fdf, 0xf7fc, 
		0x0401, 0x0040, 0x0301, 0x0180, 0x00c1, 0x0600, 0x0031, 0x1800, 
		0x000d, 0x6000, 0x0003, 0x8000, 0x0001, 0x0000, 0x0001, 0x0000, 
		0x000f, 0xe000, 0x0007, 0xc000, 0x0003, 0x8000, 0x0001, 0x0000, 
		0x0000, 0x0000, 0x00ff, 0xfe00, 0x00ff, 0xfe00, 0x00ff, 0xfe00, 
		0x00ff, 0xfe00, 0x00ff, 0xfe00, 0x00ff, 0xfe00, 0x00ff, 0xfe00, 
		0x00ff, 0xfe00, 0x00ff, 0xfe00, 0x00ff, 0xfe00, 0x0000, 0x0000};
static int16 _DAT_I_LINK [] = {
		0x0000, 0x0000, 0x7fdf, 0xf7fc, 0x4050, 0x1404, 0x5656, 0x5564, 
		0x4050, 0x1404, 0x5b55, 0xd5b4, 0x4050, 0x1404, 0x7fdf, 0xf7fc, 
		0x0401, 0x0040, 0x0301, 0x0180, 0x00c1, 0x0600, 0x0031, 0x1800, 
		0x000d, 0x6000, 0x0003, 0x8000, 0x0001, 0x0000, 0x0001, 0x0000, 
		0x000f, 0xe000, 0x0007, 0xc000, 0x0003, 0x8000, 0x0001, 0x0000, 
		0x0000, 0x0000, 0x00ff, 0xfe00, 0x0080, 0x0200, 0x00b3, 0x1200, 
		0x00aa, 0xaa00, 0x00aa, 0xa200, 0x00b3, 0x2a00, 0x00a2, 0xaa00, 
		0x00a2, 0x9a00, 0x0080, 0x0200, 0x00ff, 0xfe00, 0x0000, 0x0000};
static CICONBLK I_LINK = {{
		_MSK_I_LINK, _DAT_I_LINK, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 24,  0,  0},&_C4_I_LINK};

static CICON _C4_I_LOAD = {
		4,
		&DATAS_13    [3],
		DATAS_14    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_LOAD [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x1fff, 0xfff0, 0x1fff, 0xfff8, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 0x1fff, 0xfffc, 
		0x0fff, 0xfffc, 0x07ff, 0xfffc, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_LOAD [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x1fff, 0xfff0, 0x1020, 0x0098, 
		0x1020, 0x7c8c, 0x1020, 0x448c, 0x1020, 0x448c, 0x1020, 0x448c, 
		0x1020, 0x448c, 0x1020, 0x448c, 0x1020, 0x7c8c, 0x1020, 0x008c, 
		0x101f, 0xff0c, 0x1000, 0x000c, 0x1000, 0x000c, 0x11ff, 0xffcc, 
		0x1100, 0x004c, 0x111e, 0x024c, 0x111e, 0x030c, 0x111f, 0x038c, 
		0x111f, 0xffcc, 0x110f, 0xffec, 0x110f, 0xffec, 0x1103, 0xffcc, 
		0x1100, 0x038c, 0x1100, 0x030c, 0x1500, 0x024c, 0x1100, 0x004c, 
		0x0fff, 0xfffc, 0x07ff, 0xfffc, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_LOAD = {{
		_MSK_I_LOAD, _DAT_I_LOAD, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32, 16, 16,  0,  0},&_C4_I_LOAD};

static CICON _C4_I_LOOK = {
		4,
		&DATAS_15    [3],
		DATAS_16    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_LOOK [] = {
		0x0000, 0x0000, 0x0000, 0x07e0, 0x1ff8, 0x3ffc, 0x3ffc, 0x7ffe, 
		0x7ffe, 0x7ffe, 0x7ffe, 0x7ffe, 0x7ffe, 0x3ffc, 0x3ffc, 0x1ff8, 
		0x07e0, 0x0180, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 
		0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x0180, 0x0000};
static int16 _DAT_I_LOOK [] = {
		0x0000, 0x0000, 0x0000, 0x07e0, 0x1c38, 0x300c, 0x2404, 0x6806, 
		0x5202, 0x5402, 0x4402, 0x4002, 0x6006, 0x2004, 0x300c, 0x1c38, 
		0x07e0, 0x0180, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 
		0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x02c0, 0x0180, 0x0000};
static CICONBLK I_LOOK = {{
		_MSK_I_LOOK, _DAT_I_LOOK, TEXT_19,
		0x1000,  0,  0,  0,  0, 16, 32,  8,  8,  0,  0},&_C4_I_LOOK};

static CICON _C4_I_PRJ = {
		4,
		&DATAS_17    [3],
		DATAS_18    ,
		NULL,
		NULL,
		NULL};
static int16 _MSK_I_PRJ [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x0f00, 0x1e00, 0x1ffc, 0x3ff8, 
		0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 
		0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x1ffe, 0x3ffc, 0x0060, 0x00c0, 
		0x007f, 0xffc0, 0x007f, 0xffc0, 0x0060, 0x1ec0, 0x0060, 0x3ff8, 
		0x03f8, 0x3ffc, 0x01f0, 0x3ffc, 0x00e0, 0x3ffc, 0x0040, 0x3ffc, 
		0x3fff, 0xbffc, 0x3fff, 0xbffc, 0x3fff, 0xbffc, 0x3fff, 0x8000, 
		0x3fff, 0x8000, 0x3fff, 0x8000, 0x3fff, 0x8000, 0x3fff, 0x8000, 
		0x3fff, 0x8000, 0x3fff, 0x8000, 0x0000, 0x0000, 0x0000, 0x0000};
static int16 _DAT_I_PRJ [] = {
		0x0000, 0x0000, 0x0000, 0x0000, 0x0f00, 0x1e00, 0x10fc, 0x21f8, 
		0x1002, 0x2004, 0x1002, 0x2004, 0x1002, 0x2004, 0x1002, 0x2004, 
		0x1002, 0x2004, 0x1002, 0x2004, 0x1ffe, 0x3ffc, 0x0040, 0x0080, 
		0x007f, 0xff80, 0x0040, 0x0080, 0x0040, 0x1e80, 0x0040, 0x21f8, 
		0x03f8, 0x2004, 0x01f0, 0x2004, 0x00e0, 0x2004, 0x0040, 0x2004, 
		0x3fff, 0xa004, 0x2000, 0xa004, 0x2cc4, 0xbffc, 0x2aaa, 0x8000, 
		0x2aa8, 0x8000, 0x2cca, 0x8000, 0x28aa, 0x8000, 0x28a6, 0x8000, 
		0x2000, 0x8000, 0x3fff, 0x8000, 0x0000, 0x0000, 0x0000, 0x0000};
static CICONBLK I_PRJ = {{
		_MSK_I_PRJ, _DAT_I_PRJ, TEXT_19,
		0x1000,  0,  0,  0,  0, 32, 32,  8, 22,  0,  0},&_C4_I_PRJ};



/*		OBJECT TREES		*/

#define OA_ASSM        (  3)
#define OA_MC10        (  5)
#define OA_DR          (  8)
#define OA_MC20        ( 11)
#define OA_INC         ( 14)
#define OA_MC30        ( 18)
#define OA_IF          ( 21)
#define OA_MC40        ( 24)
#define OA_MACRO       ( 27)
#define OA_MC51        ( 30)
#define OA_LIST        ( 33)
#define OA_MC81        ( 36)
#define OA_LISTING     ( 39)
#define OA_PRIV        ( 42)
#define OA_EXTERN      ( 45)
#define OA_DEBUG       ( 48)
#define OA_PROTO       ( 51)
#define OA_REST        ( 55)
static struct {
	OBJECT root;
	OBJECT  _01_D_ASSM;
	OBJECT  _02_D_ASSM;
	OBJECT  _03_D_ASSM;
	AOBJECT _03aD_ASSM;
	OBJECT  _05_D_ASSM;
	AOBJECT _05aD_ASSM;
	OBJECT  _07_D_ASSM;
	OBJECT  _08_D_ASSM;
	AOBJECT _08aD_ASSM;
	OBJECT  _10_D_ASSM;
	OBJECT  _11_D_ASSM;
	AOBJECT _11aD_ASSM;
	OBJECT  _13_D_ASSM;
	OBJECT  _14_D_ASSM;
	AOBJECT _14aD_ASSM;
	OBJECT  _16_D_ASSM;
	OBJECT  _17_D_ASSM;
	OBJECT  _18_D_ASSM;
	AOBJECT _18aD_ASSM;
	OBJECT  _20_D_ASSM;
	OBJECT  _21_D_ASSM;
	AOBJECT _21aD_ASSM;
	OBJECT  _23_D_ASSM;
	OBJECT  _24_D_ASSM;
	AOBJECT _24aD_ASSM;
	OBJECT  _26_D_ASSM;
	OBJECT  _27_D_ASSM;
	AOBJECT _27aD_ASSM;
	OBJECT  _29_D_ASSM;
	OBJECT  _30_D_ASSM;
	AOBJECT _30aD_ASSM;
	OBJECT  _32_D_ASSM;
	OBJECT  _33_D_ASSM;
	AOBJECT _33aD_ASSM;
	OBJECT  _35_D_ASSM;
	OBJECT  _36_D_ASSM;
	AOBJECT _36aD_ASSM;
	OBJECT  _38_D_ASSM;
	OBJECT  _39_D_ASSM;
	AOBJECT _39aD_ASSM;
	OBJECT  _41_D_ASSM;
	OBJECT  _42_D_ASSM;
	AOBJECT _42aD_ASSM;
	OBJECT  _44_D_ASSM;
	OBJECT  _45_D_ASSM;
	AOBJECT _45aD_ASSM;
	OBJECT  _47_D_ASSM;
	OBJECT  _48_D_ASSM;
	AOBJECT _48aD_ASSM;
	OBJECT  _50_D_ASSM;
	OBJECT  _51_D_ASSM;
	AOBJECT _51aD_ASSM;
	OBJECT  _53_D_ASSM;
	OBJECT  _54_D_ASSM;
	OBJECT  _55_D_ASSM;
	AOBJECT _55aD_ASSM;
} D_ASSM = {
	{ -1,  1, 55, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON08) ,  0,  0, 64, 14 },
	{  3,  2,  2, 28,   0x40,    0x0, C_UNION(TEXT_95     ) ,  1,  1, 10,  1 },
	{  1, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  0,  0,  1,  1 },
	{  5, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) , 12,  1, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x8841, NULL				, NULL				,    0x0, 0					},
	{  7, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX32) ,  1,  3, 21,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8831, NULL				, NULL				,    0x0, 0					},
	{  8, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_104    ) , 22,  3,  7,  1 },
	{ 10, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX38) , 30,  3, 19,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8852, NULL				, NULL				,    0x0, 0					},
	{ 11, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_118    ) , 49,  3, 14,  1 },
	{ 13, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX24) ,  1,  4, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8832, NULL				, NULL				,    0x0, 0					},
	{ 14, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_113    ) , 19,  4, 10,  1 },
	{ 16, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX39) , 30,  4, 23,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884c, NULL				, NULL				,    0x0, 0					},
	{ 17, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_103    ) , 53,  4,  6,  1 },
	{ 18, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_46     ) , 59,  4,  4,  1 },
	{ 20, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX25) ,  1,  5, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8833, NULL				, NULL				,    0x0, 0					},
	{ 21, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_112    ) , 19,  5, 10,  1 },
	{ 23, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX33) , 30,  5, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8849, NULL				, NULL				,    0x0, 0					},
	{ 24, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_86     ) , 55,  5,  8,  1 },
	{ 26, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX26) ,  1,  6, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8834, NULL				, NULL				,    0x0, 0					},
	{ 27, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_114    ) , 19,  6, 10,  1 },
	{ 29, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX31) , 30,  6, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884d, NULL				, NULL				,    0x0, 0					},
	{ 30, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_119    ) , 55,  6,  8,  1 },
	{ 32, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX27) ,  1,  7, 17,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8835, NULL				, NULL				,    0x0, 0					},
	{ 33, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_115    ) , 18,  7, 11,  1 },
	{ 35, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX36) , 30,  7, 23,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8855, NULL				, NULL				,    0x0, 0					},
	{ 36, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_120    ) , 53,  7, 10,  1 },
	{ 38, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX28) ,  1,  8, 20,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8838, NULL				, NULL				,    0x0, 0					},
	{ 39, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_117    ) , 21,  8,  8,  1 },
	{ 41, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX30) , 30,  8, 17,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8847, NULL				, NULL				,    0x0, 0					},
	{ 42, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_122    ) , 47,  8, 16,  1 },
	{ 44, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX29) ,  1,  9, 24,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8842, NULL				, NULL				,    0x0, 0					},
	{ 45, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_111    ) , 25,  9,  4,  1 },
	{ 47, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX34) , 30,  9, 27,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8858, NULL				, NULL				,    0x0, 0					},
	{ 48, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_121    ) , 57,  9,  6,  1 },
	{ 50, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX35) ,  1, 10, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8844, NULL				, NULL				,    0x0, 0					},
	{ 51, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_116    ) , 19, 10, 10,  1 },
	{ 53, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX37) , 30, 10, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8850, NULL				, NULL				,    0x0, 0					},
	{ 54, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_124    ) , 56, 10,  7,  1 },
	{ 55, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_89     ) ,  5, 12,  5,  1 },
	{  0, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED01   ) , 11, 12, 50,  1 },
	{prg_sel     , NULL		 , 0x8020, 0x8841, NULL				, NULL				,    0x0, 0					},
};

#define C_EDIT         (  2)
#define C_COM          (  5)
#define C_ASSM         (  8)
#define C_LINK         ( 11)
#define C_PRJ          ( 14)
#define C_DEBUG        ( 17)
#define C_LAUNCH       ( 20)
#define C_ADD          ( 23)
#define HELP_BACK      ( 25)
#define HELP_BUT       ( 26)
#define SEARCH_BACK    ( 28)
#define SEARCH_BUT     ( 29)
#define DAT1           ( 31)
#define DAT2           ( 33)
#define DAT3           ( 35)
#define DAT4           ( 37)
#define DAT5           ( 39)
#define DAT6           ( 41)
#define DAT7           ( 43)
#define DAT8           ( 45)
#define DAT9           ( 47)
#define DAT10          ( 49)
#define DAT11          ( 51)
#define DAT12          ( 53)
#define DAT13          ( 55)
#define DAT14          ( 57)
#define DAT15          ( 59)
#define DAT16          ( 61)
#define LIST_SLIDER    ( 63)
#define HELP_TEXT      ( 65)
static struct {
	OBJECT root;
	OBJECT  _01_D_CEWS;
	OBJECT  _02_D_CEWS;
	AOBJECT _02aD_CEWS;
	OBJECT  _04_D_CEWS;
	OBJECT  _05_D_CEWS;
	AOBJECT _05aD_CEWS;
	OBJECT  _07_D_CEWS;
	OBJECT  _08_D_CEWS;
	AOBJECT _08aD_CEWS;
	OBJECT  _10_D_CEWS;
	OBJECT  _11_D_CEWS;
	AOBJECT _11aD_CEWS;
	OBJECT  _13_D_CEWS;
	OBJECT  _14_D_CEWS;
	AOBJECT _14aD_CEWS;
	OBJECT  _16_D_CEWS;
	OBJECT  _17_D_CEWS;
	AOBJECT _17aD_CEWS;
	OBJECT  _19_D_CEWS;
	OBJECT  _20_D_CEWS;
	AOBJECT _20aD_CEWS;
	OBJECT  _22_D_CEWS;
	OBJECT  _23_D_CEWS;
	AOBJECT _23aD_CEWS;
	OBJECT  _25_D_CEWS;
	OBJECT  _26_D_CEWS;
	AOBJECT _26aD_CEWS;
	OBJECT  _28_D_CEWS;
	OBJECT  _29_D_CEWS;
	AOBJECT _29aD_CEWS;
	OBJECT  _31_D_CEWS;
	AOBJECT _31aD_CEWS;
	OBJECT  _33_D_CEWS;
	AOBJECT _33aD_CEWS;
	OBJECT  _35_D_CEWS;
	AOBJECT _35aD_CEWS;
	OBJECT  _37_D_CEWS;
	AOBJECT _37aD_CEWS;
	OBJECT  _39_D_CEWS;
	AOBJECT _39aD_CEWS;
	OBJECT  _41_D_CEWS;
	AOBJECT _41aD_CEWS;
	OBJECT  _43_D_CEWS;
	AOBJECT _43aD_CEWS;
	OBJECT  _45_D_CEWS;
	AOBJECT _45aD_CEWS;
	OBJECT  _47_D_CEWS;
	AOBJECT _47aD_CEWS;
	OBJECT  _49_D_CEWS;
	AOBJECT _49aD_CEWS;
	OBJECT  _51_D_CEWS;
	AOBJECT _51aD_CEWS;
	OBJECT  _53_D_CEWS;
	AOBJECT _53aD_CEWS;
	OBJECT  _55_D_CEWS;
	AOBJECT _55aD_CEWS;
	OBJECT  _57_D_CEWS;
	AOBJECT _57aD_CEWS;
	OBJECT  _59_D_CEWS;
	AOBJECT _59aD_CEWS;
	OBJECT  _61_D_CEWS;
	AOBJECT _61aD_CEWS;
	OBJECT  _63_D_CEWS;
	AOBJECT _63aD_CEWS;
	OBJECT  _65_D_CEWS;
} D_CEWS = {
	{ -1,  1, 65, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON02) ,  0,  0, 18, 18 },
	{  4,  2,  2, 31,   0x40,    0x0, C_UNION(&I_EDIT      ) ,  0,  0,  4,  2 },
	{  1, -1, -1, 24, 0x1005,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{edit        , drag_edit   , 0x8000, 0x8010, NULL				, NULL				,    0x0, 0					},
	{  7,  5,  5, 31,   0x40,    0x0, C_UNION(&I_COMPILE   ) ,  0,  2,  4,  2 },
	{  4, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{compile     , NULL		 , 0x8000, 0x8011, NULL				, NULL				,    0x0, 0					},
	{ 10,  8,  8, 31,   0x40,    0x0, C_UNION(&I_ASSM      ) ,  0,  4,  4,  2 },
	{  7, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{assi        , NULL		 , 0x8000, 0x8012, NULL				, NULL				,    0x0, 0					},
	{ 13, 11, 11, 31,   0x40,    0x0, C_UNION(&I_LINK      ) ,  0,  6,  4,  2 },
	{ 10, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{link        , NULL		 , 0x8000, 0x8013, NULL				, NULL				,    0x0, 0					},
	{ 16, 14, 14, 31,   0x40,    0x0, C_UNION(&I_PRJ       ) ,  0,  8,  4,  2 },
	{ 13, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{projectile  , NULL		 , 0x8000, 0x8014, NULL				, NULL				,    0x0, 0					},
	{ 19, 17, 17, 31,   0x40,    0x0, C_UNION(&I_DEBUG     ) ,  0, 10,  4,  2 },
	{ 16, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{debug       , NULL		 , 0x8000, 0x8015, NULL				, NULL				,    0x0, 0					},
	{ 22, 20, 20, 31,   0x40,    0x0, C_UNION(&I_LAUNCH    ) ,  0, 12,  4,  2 },
	{ 19, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{launch      , NULL		 , 0x8000, 0x8016, NULL				, NULL				,    0x0, 0					},
	{ 25, 23, 23, 31,   0x40,    0x0, C_UNION(&I_LOAD      ) ,  0, 14,  4,  2 },
	{ 22, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  4,  2 },
	{add_modul   , NULL		 , 0x8000, 0x8017, NULL				, NULL				,    0x0, 0					},
	{ 28, 26, 26, 31,   0x40,    0x0, C_UNION(&I_HELP      ) ,  0, 16,  2,  2 },
	{ 25, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  2,  2 },
	{help        , NULL		 , 0x8000, 0x8018, NULL				, NULL				,    0x0, 0					},
	{ 31, 29, 29, 31,   0x40,    0x0, C_UNION(&I_LOOK      ) ,  2, 16,  2,  2 },
	{ 28, -1, -1, 24,    0x5,    0x0, C_UNION(&A_3DBUTTON05) ,  0,  0,  2,  2 },
	{search      , NULL		 , 0x8000, 0x8019, NULL				, NULL				,    0x0, 0					},
	{ 33, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  0, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 35, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  1, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 37, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  2, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 39, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  3, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 41, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  4, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 43, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  5, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 45, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  6, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 47, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  7, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 49, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  8, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 51, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4,  9, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 53, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 10, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 55, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 11, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 57, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 12, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 59, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 13, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 61, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 14, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 63, -1, -1, 22, 0x3805,    0x0, C_UNION(&TEDINFO_05  ) ,  4, 15, 12,  1 },
	{file        , sort_file   , 0x8000,    0x0, NULL				, NULL				,    0x0, AT_FILE     },
	{ 65, -1, -1, 24,   0x40,   0x20, C_UNION(&A_SLIDER01  ) , 16,  0,  2, 16 },
	{Aus_slider  , NULL		 , 0x8000,    0x0, NULL				, NULL				,    0x0, 0					},
	{  0, -1, -1, 24,   0x28,   0x10, C_UNION(&A_BOXED04   ) ,  5, 16, 12,  2 },
};

#define OC_COMPILER    (  3)
#define OC_ANSI        (  5)
#define OC_NOJUMP      (  8)
#define OC_REM         ( 11)
#define OC_REGOPT      ( 14)
#define OC_DEBUG       ( 17)
#define OC_STRING      ( 20)
#define OC_STACKCHECK  ( 23)
#define OC_REGISTER    ( 26)
#define OC_DR          ( 29)
#define OC_SIZE        ( 32)
#define OC_UNDER       ( 35)
#define OC_ABS         ( 38)
#define OC_CDECL       ( 41)
#define OC_STACK       ( 44)
#define OC_PASCAL      ( 47)
#define OC_PROTO       ( 50)
#define OC_CHAR        ( 53)
#define OC_REST        ( 57)
#define OC_ERRORS      ( 60)
#define OC_LEN         ( 62)
#define OC_WARNINGS    ( 64)
static struct {
	OBJECT root;
	OBJECT  _01_D_COMPILER;
	OBJECT  _02_D_COMPILER;
	OBJECT  _03_D_COMPILER;
	AOBJECT _03aD_COMPILER;
	OBJECT  _05_D_COMPILER;
	AOBJECT _05aD_COMPILER;
	OBJECT  _07_D_COMPILER;
	OBJECT  _08_D_COMPILER;
	AOBJECT _08aD_COMPILER;
	OBJECT  _10_D_COMPILER;
	OBJECT  _11_D_COMPILER;
	AOBJECT _11aD_COMPILER;
	OBJECT  _13_D_COMPILER;
	OBJECT  _14_D_COMPILER;
	AOBJECT _14aD_COMPILER;
	OBJECT  _16_D_COMPILER;
	OBJECT  _17_D_COMPILER;
	AOBJECT _17aD_COMPILER;
	OBJECT  _19_D_COMPILER;
	OBJECT  _20_D_COMPILER;
	AOBJECT _20aD_COMPILER;
	OBJECT  _22_D_COMPILER;
	OBJECT  _23_D_COMPILER;
	AOBJECT _23aD_COMPILER;
	OBJECT  _25_D_COMPILER;
	OBJECT  _26_D_COMPILER;
	AOBJECT _26aD_COMPILER;
	OBJECT  _28_D_COMPILER;
	OBJECT  _29_D_COMPILER;
	AOBJECT _29aD_COMPILER;
	OBJECT  _31_D_COMPILER;
	OBJECT  _32_D_COMPILER;
	AOBJECT _32aD_COMPILER;
	OBJECT  _34_D_COMPILER;
	OBJECT  _35_D_COMPILER;
	AOBJECT _35aD_COMPILER;
	OBJECT  _37_D_COMPILER;
	OBJECT  _38_D_COMPILER;
	AOBJECT _38aD_COMPILER;
	OBJECT  _40_D_COMPILER;
	OBJECT  _41_D_COMPILER;
	AOBJECT _41aD_COMPILER;
	OBJECT  _43_D_COMPILER;
	OBJECT  _44_D_COMPILER;
	AOBJECT _44aD_COMPILER;
	OBJECT  _46_D_COMPILER;
	OBJECT  _47_D_COMPILER;
	AOBJECT _47aD_COMPILER;
	OBJECT  _49_D_COMPILER;
	OBJECT  _50_D_COMPILER;
	AOBJECT _50aD_COMPILER;
	OBJECT  _52_D_COMPILER;
	OBJECT  _53_D_COMPILER;
	AOBJECT _53aD_COMPILER;
	OBJECT  _55_D_COMPILER;
	OBJECT  _56_D_COMPILER;
	OBJECT  _57_D_COMPILER;
	AOBJECT _57aD_COMPILER;
	OBJECT  _59_D_COMPILER;
	OBJECT  _60_D_COMPILER;
	OBJECT  _61_D_COMPILER;
	OBJECT  _62_D_COMPILER;
	OBJECT  _63_D_COMPILER;
	OBJECT  _64_D_COMPILER;
} D_COMPILER = {
	{ -1,  1, 64, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON08) ,  0,  0, 65, 19 },
	{  3,  2,  2, 28,   0x40,    0x0, C_UNION(TEXT_75     ) ,  1,  1,  9,  1 },
	{  1, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  0,  0,  1,  1 },
	{  5, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) , 11,  1, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x8843, NULL				, NULL				,    0x0, 0					},
	{  7, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX40) ,  1,  3, 20,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8841, NULL				, NULL				,    0x0, 0					},
	{  8, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_47     ) , 21,  3, 11,  1 },
	{ 10, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX02) , 33,  3, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884b, NULL				, NULL				,    0x0, 0					},
	{ 11, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_65     ) , 59,  3,  5,  1 },
	{ 13, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX06) ,  1,  4, 27,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8847, NULL				, NULL				,    0x0, 0					},
	{ 14, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_46     ) , 28,  4,  4,  1 },
	{ 16, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX03) , 33,  4, 27,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8848, NULL				, NULL				,    0x0, 0					},
	{ 17, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_66     ) , 60,  4,  4,  1 },
	{ 19, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX35) ,  1,  5, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8844, NULL				, NULL				,    0x0, 0					},
	{ 20, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_58     ) , 19,  5, 13,  1 },
	{ 22, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX17) , 33,  5, 24,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8858, NULL				, NULL				,    0x0, 0					},
	{ 23, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_67     ) , 57,  5,  7,  1 },
	{ 25, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX18) ,  1,  6, 19,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8853, NULL				, NULL				,    0x0, 0					},
	{ 26, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_60     ) , 20,  6, 12,  1 },
	{ 28, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX13) , 33,  6, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8852, NULL				, NULL				,    0x0, 0					},
	{ 29, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_68     ) , 59,  6,  5,  1 },
	{ 31, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX38) ,  1,  7, 19,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884f, NULL				, NULL				,    0x0, 0					},
	{ 32, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_59     ) , 20,  7, 12,  1 },
	{ 34, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX01) , 33,  7, 19,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8849, NULL				, NULL				,    0x0, 0					},
	{ 35, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_69     ) , 52,  7, 12,  1 },
	{ 37, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX04) ,  1,  8, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8856, NULL				, NULL				,    0x0, 0					},
	{ 38, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_61     ) , 27,  8,  5,  1 },
	{ 40, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX11) , 33,  8, 19,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8842, NULL				, NULL				,    0x0, 0					},
	{ 41, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_70     ) , 52,  8, 12,  1 },
	{ 43, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX09) ,  1,  9, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8845, NULL				, NULL				,    0x0, 0					},
	{ 44, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_62     ) , 26,  9,  6,  1 },
	{ 46, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX05) , 33,  9, 23,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8854, NULL				, NULL				,    0x0, 0					},
	{ 47, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_71     ) , 56,  9,  8,  1 },
	{ 49, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX12) ,  1, 10, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884c, NULL				, NULL				,    0x0, 0					},
	{ 50, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_63     ) , 27, 10,  5,  1 },
	{ 52, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX37) , 33, 10, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8850, NULL				, NULL				,    0x0, 0					},
	{ 53, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_72     ) , 59, 10,  5,  1 },
	{ 55, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX10) ,  1, 11, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8855, NULL				, NULL				,    0x0, 0					},
	{ 56, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_64     ) , 26, 11,  6,  1 },
	{ 57, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_89     ) ,  5, 13,  5,  1 },
	{ 59, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED01   ) , 11, 13, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x8843, NULL				, NULL				,    0x0, 0					},
	{ 60, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_41     ) ,  6, 15, 19,  1 },
	{ 61, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED03   ) , 26, 15,  5,  1 },
	{ 62, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_90     ) , 34, 15, 21,  1 },
	{ 63, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED03   ) , 56, 15,  5,  1 },
	{ 64, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_37     ) ,  4, 17, 21,  1 },
	{  0, -1, -1, 24,   0x28,   0x10, C_UNION(&A_BOXED03   ) , 26, 17,  5,  1 },
};

static struct {
	OBJECT root;
	OBJECT  _01_D_INFO;
	OBJECT  _02_D_INFO;
	OBJECT  _03_D_INFO;
	OBJECT  _04_D_INFO;
} D_INFO = {
	{ -1,  1,  1, 25,   0x40,    0x0,  C_UNION(0x00ff1100L)				 ,  0,  0, 32,  6 },
	{  0,  2,  2, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON07) ,  0,  0, 32,  6 },
	{  1,  3,  3, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON06) ,  2,  1, 28,  4 },
	{  2,  4,  4, 20,   0x40,    0x0,  C_UNION(0x00001101L)				 ,  0,  0, 28,  4 },
	{  3, -1, -1, 24,   0x60,    0x0, C_UNION(&A_FTEXT03   ) ,  0,  0, 28,  4 },
};

#define OL_LINKER      (  3)
#define OL_GLOBAL      (  5)
#define OL_FAST        (  8)
#define OL_LOCAL       ( 11)
#define OL_LOAD        ( 14)
#define OL_DEBUG       ( 17)
#define OL_MALLOC      ( 20)
#define OL_OBJECT      ( 23)
#define OL_PROTO       ( 26)
#define OL_REST        ( 30)
#define OL_STACKSIZE   ( 32)
static struct {
	OBJECT root;
	OBJECT  _01_D_LINKER;
	OBJECT  _02_D_LINKER;
	OBJECT  _03_D_LINKER;
	AOBJECT _03aD_LINKER;
	OBJECT  _05_D_LINKER;
	AOBJECT _05aD_LINKER;
	OBJECT  _07_D_LINKER;
	OBJECT  _08_D_LINKER;
	AOBJECT _08aD_LINKER;
	OBJECT  _10_D_LINKER;
	OBJECT  _11_D_LINKER;
	AOBJECT _11aD_LINKER;
	OBJECT  _13_D_LINKER;
	OBJECT  _14_D_LINKER;
	AOBJECT _14aD_LINKER;
	OBJECT  _16_D_LINKER;
	OBJECT  _17_D_LINKER;
	AOBJECT _17aD_LINKER;
	OBJECT  _19_D_LINKER;
	OBJECT  _20_D_LINKER;
	AOBJECT _20aD_LINKER;
	OBJECT  _22_D_LINKER;
	OBJECT  _23_D_LINKER;
	AOBJECT _23aD_LINKER;
	OBJECT  _25_D_LINKER;
	OBJECT  _26_D_LINKER;
	AOBJECT _26aD_LINKER;
	OBJECT  _28_D_LINKER;
	OBJECT  _29_D_LINKER;
	OBJECT  _30_D_LINKER;
	OBJECT  _31_D_LINKER;
	OBJECT  _32_D_LINKER;
	OBJECT  _33_D_LINKER;
} D_LINKER = {
	{ -1,  1, 33, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON08) ,  0,  0, 62, 12 },
	{  3,  2,  2, 28,   0x40,    0x0, C_UNION(TEXT_45     ) ,  1,  1,  7,  1 },
	{  1, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  0,  0,  1,  1 },
	{  5, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) ,  9,  1, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x884c, NULL				, NULL				,    0x0, 0					},
	{  7, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX07) ,  1,  3, 24,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8847, NULL				, NULL				,    0x0, 0					},
	{  8, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_79     ) , 25,  3,  5,  1 },
	{ 10, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX15) , 31,  3, 23,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8846, NULL				, NULL				,    0x0, 0					},
	{ 11, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_85     ) , 54,  3,  7,  1 },
	{ 13, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX08) ,  1,  4, 23,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884f, NULL				, NULL				,    0x0, 0					},
	{ 14, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_30     ) , 24,  4,  6,  1 },
	{ 16, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX19) , 31,  4, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8853, NULL				, NULL				,    0x0, 0					},
	{ 17, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_68     ) , 56,  4,  5,  1 },
	{ 19, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX35) ,  1,  5, 18,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8844, NULL				, NULL				,    0x0, 0					},
	{ 20, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_26     ) , 19,  5, 11,  1 },
	{ 22, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX16) , 31,  5, 22,  1 },
	{NULL		 , NULL		 , 0x8000, 0x884d, NULL				, NULL				,    0x0, 0					},
	{ 23, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_119    ) , 53,  5,  8,  1 },
	{ 25, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX20) ,  1,  6, 25,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8842, NULL				, NULL				,    0x0, 0					},
	{ 26, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_20     ) , 26,  6,  4,  1 },
	{ 28, -1, -1, 24,    0x1,    0x0, C_UNION(&A_CHECKBOX37) , 31,  6, 26,  1 },
	{NULL		 , NULL		 , 0x8000, 0x8850, NULL				, NULL				,    0x0, 0					},
	{ 29, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_84     ) , 57,  6,  4,  1 },
	{ 30, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_89     ) ,  2,  8,  5,  1 },
	{ 31, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED01   ) ,  8,  8, 51,  1 },
	{ 32, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_74     ) ,  2, 10, 12,  1 },
	{ 33, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED03   ) , 15, 10,  5,  1 },
	{  0, -1, -1, 28,   0x60,    0x0, C_UNION(TEXT_94     ) , 21, 10,  5,  1 },
};

#define OO_INC         (  3)
#define OO_LIB         (  7)
#define OO_NAME        ( 10)
#define OO_ACC         ( 12)
#define OO_DEBUG       ( 15)
#define DO_LOAD        ( 20)
static struct {
	OBJECT root;
	OBJECT  _01_D_OPTION;
	OBJECT  _02_D_OPTION;
	OBJECT  _03_D_OPTION;
	AOBJECT _03aD_OPTION;
	OBJECT  _05_D_OPTION;
	OBJECT  _06_D_OPTION;
	OBJECT  _07_D_OPTION;
	AOBJECT _07aD_OPTION;
	OBJECT  _09_D_OPTION;
	OBJECT  _10_D_OPTION;
	OBJECT  _11_D_OPTION;
	OBJECT  _12_D_OPTION;
	OBJECT  _13_D_OPTION;
	OBJECT  _14_D_OPTION;
	OBJECT  _15_D_OPTION;
	AOBJECT _15aD_OPTION;
	OBJECT  _17_D_OPTION;
	OBJECT  _18_D_OPTION;
	AOBJECT _18aD_OPTION;
	OBJECT  _20_D_OPTION;
	AOBJECT _20aD_OPTION;
	OBJECT  _22_D_OPTION;
	AOBJECT _22aD_OPTION;
} D_OPTION = {
	{ -1,  1, 17, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON08) ,  0,  0, 66, 13 },
	{  2, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_09     ) ,  1,  1, 13,  1 },
	{  3, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  1,  1,  1,  1 },
	{  5, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) , 15,  1, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x8849, NULL				, NULL				,    0x0, 0					},
	{  7,  6,  6, 28,   0x40,    0x0, C_UNION(TEXT_10     ) ,  1,  3, 13,  1 },
	{  5, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  0,  0,  1,  1 },
	{  9, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) , 15,  3, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x884c, NULL				, NULL				,    0x0, 0					},
	{ 10, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_08     ) ,  5,  5,  9,  1 },
	{ 11, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED02   ) , 15,  5, 12,  1 },
	{ 12, -1, -1, 28,   0x40,    0x0, C_UNION(TEXT_28     ) , 30,  5, 10,  1 },
	{ 13, -1, -1, 24,    0x8,   0x10, C_UNION(&A_BOXED05   ) , 41,  5, 10,  1 },
	{ 15, 14, 14, 28,   0x40,    0x0, C_UNION(TEXT_01     ) ,  5,  7,  9,  1 },
	{ 13, -1, -1, 24,   0x40,    0x0, C_UNION(&A_ARROWS02  ) ,  0,  0,  1,  1 },
	{ 17, -1, -1, 24,    0xd,   0x10, C_UNION(&A_BOXED06   ) , 15,  7, 50,  1 },
	{prg_sel     , NULL		 , 0x8000, 0x8844, NULL				, NULL				,    0x0, 0					},
	{  0, 18, 22, 24,   0x40,    0x0, C_UNION(&A_INNERFRAME02) ,  1,  9, 64,  4 },
	{ 20, -1, -1, 24,    0x5,   0x10, C_UNION(&A_3DBUTTON03) ,  1,  1, 14,  2 },
	{o_save      , NULL		 , 0x8000, 0x8853, NULL				, NULL				,    0x0, 0					},
	{ 22, -1, -1, 24,    0x5,   0x10, C_UNION(&A_3DBUTTON11) , 19,  1, 14,  2 },
	{o_load      , NULL		 , 0x8000, 0x8846, NULL				, NULL				,    0x0, 0					},
	{ 17, -1, -1, 24,    0x5,   0x10, C_UNION(&A_3DBUTTON04) , 37,  1, 26,  2 },
	{o_launch    , NULL		 , 0x8020, 0x884f, NULL				, NULL				,    0x0, 0					},
};

#define OPT_CYCLE      (  1)
static struct {
	OBJECT root;
	OBJECT  _01_D_TOOL;
	AOBJECT _01aD_TOOL;
} D_TOOL = {
	{ -1,  1,  1, 24,   0x40,    0x0, C_UNION(&A_3DBUTTON01) ,  0,  0, 54,  2 },
	{  0, -1, -1, 24,   0x40,   0x30, C_UNION(&A_CYCLE01   ) ,  1, 2048, 13,  1 },
	{t_cycle     , NULL		 , 0x8020,    0x0, NULL				, NULL				,    0x0, 0					},
};



/*		WINDOWS		*/

Awindow23x F_CEWS       =
	{
		NULL,
		service_menu,
		make_menu   ,
		Awi_open,
		init_menu   ,
		&D_CEWS.root, &D_TOOL.root, 0, 0, -1,
		0x400b, { 1,  3, 120, 99},
		{0, 0, 0, 0}, {0, 0, 0, 0}, {-1, -1, -1, -1}, 0, 0,
		0xfcf8,
		TEXT_23     ,
		TEXT_19     ,
		10000,  0x103, 0, -1,
		&I_CEWS      ,
		NULL,
		key_menu    ,
		Awi_obchange,
		Awi_redraw,
		Awi_topped,
		Awi_closed,
		Awi_fulled,
		Awi_arrowed,
		Awi_hslid,
		Awi_vslid,
		Awi_sized,
		Awi_moved,
	};


Awindow23x F_INFO       =
	{
		NULL,
		Awi_service,
		Awi_selfcreate,
		Awi_open,
		Awi_init,
		&D_INFO.root, NULL, 0, 0, -1,
		   0xb, { 0,  0, 120, 50},
		{0, 0, 0, 0}, {0, 0, 0, 0}, {-1, -1, -1, -1}, 0, 0,
		0xf8f8,
		TEXT_13     ,
		TEXT_19     ,
		10000,  0x100, 0, -1,
		NULL,
		NULL,
		Awi_keys,
		Awi_obchange,
		Awi_redraw,
		Awi_topped,
		Awi_closed,
		Awi_fulled,
		Awi_arrowed,
		Awi_hslid,
		Awi_vslid,
		Awi_sized,
		Awi_moved,
	};




/*		ANSI-C Routines		*/

/* Prototypen */
static char *list_live (void *obj, long pos);
static int16 insert_modul (EWS_PARA *user, char *file);
static void open_editor (Awindow *wi, char *file);
static void get_tool (Awindow *wi, EWS_PARA *new, int16 dia);
static void put_tool (Awindow *wi, EWS_PARA *new, int16 dia);
static int16 save_acs (EWS_PARA *user, char *file);
static int16 newer (char *mod, char *prg);

/* statische Variablen */
static char			help_str[17]="";
static char			ews_file[128]="";
static int16		help_accid;



































/* 'Aus_slider' Not yet defined by user */

/* 'Awi_selfcreate' Not yet defined by user */

/* 'add_modul' Not yet defined by user */

/* 'assi' Not yet defined by user */

/* 'compile' Not yet defined by user */

/* 'debug' Not yet defined by user */

/* 'drag_edit' Not yet defined by user */

/* 'edit' Not yet defined by user */

/* 'file' Not yet defined by user */




/* 'help' Not yet defined by user */

/* 'init_menu' Not yet defined by user */


/* 'key_menu' Not yet defined by user */

/* 'launch' Not yet defined by user */

/* 'link' Not yet defined by user */


/* 'make_menu' Not yet defined by user */


/* 'o_launch' Not yet defined by user */

/* 'o_load' Not yet defined by user */

/* 'o_save' Not yet defined by user */


/* 'prg_sel' Not yet defined by user */

/* 'projectile' Not yet defined by user */



/* 'search' Not yet defined by user */

/* 'service_menu' Not yet defined by user */

/* 'sort_file' Not yet defined by user */

/* 't_cycle' Not yet defined by user */

