#ifndef C_UNION
#  define C_UNION(x) { (int32)(x) }
#endif

#ifdef __PUREC__
#pragma warn -use
#endif

static char TEXT_002[] = "";
static char TEXT_01[] = " Palette ";
static char TEXT_217[] = "PALETTE";

static AUSERBLK A_3DBUTTON01 = { A_3Dbutton, 0x21f101f8L, Auo_string, NULL, NULL, NULL, NULL, NULL };

static int16 _MSK_IC_PALETTE[] = {
	0xffff, 0xffff, 0xfffc, 0xffff, 0xffff, 0xfffe, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7fff,
	0xffff, 0xffff, 0x3fff, 0xffff, 0xffff
};
static int16 _DAT_IC_PALETTE[] = {
	0xffff, 0xffff, 0xfffc, 0x8001, 0x0002, 0x0006, 0x8801, 0x20e2,
	0x6007, 0x8c01, 0x5912, 0x9b07, 0x8e01, 0x2a12, 0x4687, 0x8f01,
	0x3c32, 0x3247, 0x8f81, 0x0e62, 0x2d27, 0x8fc1, 0x1782, 0x6427,
	0x8f01, 0x22e2, 0x5217, 0x8901, 0x43c2, 0x4a17, 0x8181, 0x45f2,
	0x2207, 0x8081, 0x4d62, 0x1c07, 0x8001, 0x3852, 0x0707, 0x8001,
	0x0002, 0x0007, 0xffff, 0xffff, 0xffff, 0x8001, 0x0002, 0x0007,
	0x8d81, 0x3872, 0x0607, 0x9261, 0x0782, 0x0607, 0x8911, 0x0302,
	0x0607, 0x8c89, 0x0302, 0x0607, 0x9205, 0x0302, 0x7fe7, 0x8905,
	0x0302, 0x7fe7, 0x8401, 0x0302, 0x0607, 0x8301, 0x0302, 0x0607,
	0x8401, 0x0302, 0x0607, 0x8701, 0x0782, 0x0607, 0x80f1, 0x3872,
	0x0007, 0x8001, 0x0002, 0x0007, 0xffff, 0xffff, 0xffff, 0x7fff,
	0xffff, 0xffff, 0x3fff, 0xffff, 0xffff
};
static CICONBLK IC_PALETTE = { { _MSK_IC_PALETTE, _DAT_IC_PALETTE, TEXT_217, 0x1000, 0, 0, 0x000c, 0, 0x0030, 0x001f, 0, 0x0020, 0x0048, 0x0008 }, NULL };

static int16 _MSK_MOUSEDUMMY[] = {
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
static int16 _DAT_MOUSEDUMMY[] = {
	0x7ffe, 0xbffd, 0xdffb, 0xeff7, 0xf7ef, 0xfbdf, 0xfdbf, 0xfe7f,
	0xfe7f, 0xfdbf, 0xfbdf, 0xf7ef, 0xeff7, 0xdffb, 0xbffd, 0x7ffe
};
static CICONBLK MOUSEDUMMY = { { _MSK_MOUSEDUMMY, _DAT_MOUSEDUMMY, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_ARROW[] = {
	0xc000, 0xe000, 0xf000, 0xf800, 0xfc00, 0xfe00, 0xff00, 0xff80,
	0xffc0, 0xffe0, 0xfe00, 0xef00, 0xcf00, 0x8780, 0x0780, 0x0380
};
static int16 _DAT_MO_ARROW[] = {
	0x0000, 0x4000, 0x6000, 0x7000, 0x7800, 0x7c00, 0x7e00, 0x7f00,
	0x7f80, 0x7c00, 0x6c00, 0x4600, 0x0600, 0x0300, 0x0300, 0x0000
};
static CICONBLK MO_ARROW = { { _MSK_MO_ARROW, _DAT_MO_ARROW, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_BUSYBEE[] = {
	0x1c3e, 0x1c7f, 0x1cff, 0xffff, 0xffff, 0xffff, 0x3ffe, 0x3ffc,
	0x7ffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeff, 0x7c3e
};
static int16 _DAT_MO_BUSYBEE[] = {
	0x0800, 0x083c, 0x0042, 0x1682, 0xc684, 0x188a, 0x1b54, 0x02e0,
	0x1d58, 0x33fc, 0x6160, 0x42de, 0x44d8, 0x4a56, 0x3414, 0x0000
};
static CICONBLK MO_BUSYBEE = { { _MSK_MO_BUSYBEE, _DAT_MO_BUSYBEE, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_FLAT_HAND[] = {
	0x0300, 0x1fb0, 0x3ff8, 0x3ffc, 0x7ffe, 0xfffe, 0xfffe, 0x7fff,
	0x7fff, 0xffff, 0xffff, 0x7fff, 0x3fff, 0x0fff, 0x01ff, 0x003f
};
static int16 _DAT_MO_FLAT_HAND[] = {
	0x0300, 0x1cb0, 0x2448, 0x2224, 0x7112, 0x9882, 0x8402, 0x4201,
	0x7001, 0x9801, 0x8401, 0x4000, 0x3000, 0x0e00, 0x01c0, 0x0030
};
static CICONBLK MO_FLAT_HAND = { { _MSK_MO_FLAT_HAND, _DAT_MO_FLAT_HAND, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_OUTL_CROSS[] = {
	0x07c0, 0x07c0, 0x06c0, 0x06c0, 0x06c0, 0xfefe, 0xfefe, 0xc006,
	0xfefe, 0xfefe, 0x06c0, 0x06c0, 0x06c0, 0x07c0, 0x07c0, 0x0000
};
static int16 _DAT_MO_OUTL_CROSS[] = {
	0x0000, 0x0380, 0x0280, 0x0280, 0x0280, 0x0280, 0x7efc, 0x4004,
	0x7efc, 0x0280, 0x0280, 0x0280, 0x0280, 0x0380, 0x0000, 0x0000
};
static CICONBLK MO_OUTL_CROSS = { { _MSK_MO_OUTL_CROSS, _DAT_MO_OUTL_CROSS, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_POINT_HAND[] = {
	0x3000, 0x7c00, 0x7e00, 0x1f80, 0x0fc0, 0x3ff8, 0x3ffc, 0x7ffc,
	0xfffe, 0xfffe, 0x7fff, 0x3fff, 0x1fff, 0x0fff, 0x03ff, 0x00ff
};
static int16 _DAT_MO_POINT_HAND[] = {
	0x3000, 0x4c00, 0x6200, 0x1980, 0x0c40, 0x32f8, 0x2904, 0x6624,
	0x93c2, 0x8f42, 0x7c43, 0x2021, 0x1001, 0x0c41, 0x0380, 0x00c0
};
static CICONBLK MO_POINT_HAND = { { _MSK_MO_POINT_HAND, _DAT_MO_POINT_HAND, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_TEXT_CRSR[] = {
	0xffff, 0xffff, 0x07e0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0,
	0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x03c0, 0x07e0, 0xffff, 0xffff
};
static int16 _DAT_MO_TEXT_CRSR[] = {
	0x7dbe, 0x0660, 0x03c0, 0x0180, 0x0180, 0x0180, 0x0180, 0x0180,
	0x0180, 0x0180, 0x0180, 0x0180, 0x0180, 0x03c0, 0x0660, 0x7dbe
};
static CICONBLK MO_TEXT_CRSR = { { _MSK_MO_TEXT_CRSR, _DAT_MO_TEXT_CRSR, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_THICK_CROSS[] = {
	0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0xfffe, 0xfffe, 0xfffe,
	0xfffe, 0xfffe, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x0000
};
static int16 _DAT_MO_THICK_CROSS[] = {
	0x0000, 0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0x7ffc, 0x7ffc,
	0x7ffc, 0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0x0000, 0x0000
};
static CICONBLK MO_THICK_CROSS = { { _MSK_MO_THICK_CROSS, _DAT_MO_THICK_CROSS, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };

static int16 _MSK_MO_THIN_CROSS[] = {
	0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0xfffe, 0xfffe,
	0xfffe, 0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0x0380, 0x0000
};
static int16 _DAT_MO_THIN_CROSS[] = {
	0x0000, 0x0100, 0x0100, 0x0100, 0x0100, 0x0100, 0x0100, 0x7ffc,
	0x0100, 0x0100, 0x0100, 0x0100, 0x0100, 0x0100, 0x0000, 0x0000
};
static CICONBLK MO_THIN_CROSS = { { _MSK_MO_THIN_CROSS, _DAT_MO_THIN_CROSS, TEXT_002, 0x1000, 0x000a, 0x000a, 0, 0, 0x0010, 0x0010, 0, 0, 0x0008, 0x0008 }, NULL };


static struct {
	OBJECT  root;
	AOBJECT _00aPALETTE_MOUSE;
	OBJECT  _02_PALETTE_MOUSE;
	AOBJECT _02aPALETTE_MOUSE;
	OBJECT  _04_PALETTE_MOUSE;
	AOBJECT _04aPALETTE_MOUSE;
	OBJECT  _06_PALETTE_MOUSE;
	AOBJECT _06aPALETTE_MOUSE;
	OBJECT  _08_PALETTE_MOUSE;
	AOBJECT _08aPALETTE_MOUSE;
	OBJECT  _10_PALETTE_MOUSE;
	AOBJECT _10aPALETTE_MOUSE;
	OBJECT  _12_PALETTE_MOUSE;
	AOBJECT _12aPALETTE_MOUSE;
	OBJECT  _14_PALETTE_MOUSE;
	AOBJECT _14aPALETTE_MOUSE;
	OBJECT  _16_PALETTE_MOUSE;
	AOBJECT _16aPALETTE_MOUSE;
	OBJECT  _18_PALETTE_MOUSE;
	AOBJECT _18aPALETTE_MOUSE;
	OBJECT  _20_PALETTE_MOUSE;
	AOBJECT _20aPALETTE_MOUSE;
	OBJECT  _22_PALETTE_MOUSE;
	AOBJECT _22aPALETTE_MOUSE;
	OBJECT  _24_PALETTE_MOUSE;
	AOBJECT _24aPALETTE_MOUSE;
	OBJECT  _26_PALETTE_MOUSE;
	AOBJECT _26aPALETTE_MOUSE;
	OBJECT  _28_PALETTE_MOUSE;
	AOBJECT _28aPALETTE_MOUSE;
	OBJECT  _30_PALETTE_MOUSE;
	AOBJECT _30aPALETTE_MOUSE;
	OBJECT  _32_PALETTE_MOUSE;
	AOBJECT _32aPALETTE_MOUSE;
	OBJECT  _34_PALETTE_MOUSE;
	AOBJECT _34aPALETTE_MOUSE;
	OBJECT  _36_PALETTE_MOUSE;
	AOBJECT _36aPALETTE_MOUSE;
	OBJECT  _38_PALETTE_MOUSE;
	AOBJECT _38aPALETTE_MOUSE;
	OBJECT  _40_PALETTE_MOUSE;
	AOBJECT _40aPALETTE_MOUSE;
	OBJECT  _42_PALETTE_MOUSE;
	AOBJECT _42aPALETTE_MOUSE;
	OBJECT  _44_PALETTE_MOUSE;
	AOBJECT _44aPALETTE_MOUSE;
	OBJECT  _46_PALETTE_MOUSE;
	AOBJECT _46aPALETTE_MOUSE;
	OBJECT  _48_PALETTE_MOUSE;
	AOBJECT _48aPALETTE_MOUSE;
	OBJECT  _50_PALETTE_MOUSE;
	AOBJECT _50aPALETTE_MOUSE;
	OBJECT  _52_PALETTE_MOUSE;
	AOBJECT _52aPALETTE_MOUSE;
	OBJECT  _54_PALETTE_MOUSE;
	AOBJECT _54aPALETTE_MOUSE;
	OBJECT  _56_PALETTE_MOUSE;
	AOBJECT _56aPALETTE_MOUSE;
	OBJECT  _58_PALETTE_MOUSE;
	AOBJECT _58aPALETTE_MOUSE;
	OBJECT  _60_PALETTE_MOUSE;
	AOBJECT _60aPALETTE_MOUSE;
	OBJECT  _62_PALETTE_MOUSE;
	AOBJECT _62aPALETTE_MOUSE;
	OBJECT  _64_PALETTE_MOUSE;
	AOBJECT _64aPALETTE_MOUSE;
} PALETTE_MOUSE = {
	{ -1,  2, 64, G_USERDEF, 0, 0x0010, C_UNION(&A_3DBUTTON01), 0, 0, 0x0022, 0x0009 },
	{ 0, 0, 0x8000, 0, 0, 0, 0x001f, 0 },
	{  4, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0400, 0x0400, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{  6, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0005, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{  8, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0009, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 10, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x000d, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 12, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0011, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 14, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0015, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 16, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0019, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 18, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x001d, 0x0001, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 20, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0001, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 22, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0005, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 24, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0009, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 26, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x000d, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 28, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0011, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 30, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0015, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 32, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0019, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 34, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x001d, 0x0003, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 36, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0001, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 38, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0005, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 40, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0009, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 42, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x000d, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 44, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0011, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 46, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0015, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 48, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0019, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 50, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x001d, 0x0005, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 52, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0001, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 54, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0005, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 56, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0009, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 58, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x000d, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 60, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0011, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 62, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0015, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{ 64, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x0019, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8000, 0, 0, 0, 0, 0 },
	{  0, -1, -1, G_ICON, 0x3005, 0, C_UNION(&MOUSEDUMMY), 0x001d, 0x0007, 0x0004, 0x0002 },
	{ edmp_set, edmp_acc, 0x8020, 0, 0, 0, 0, 0 }
};

Awindow WI_PALETTE = {
	NULL,
	mp_service,
	mp_make,
	Awi_open,
	Awi_init,
	&PALETTE_MOUSE.root,
	NULL,
	0, 0,
	-1,
	0x4fff,
	{ 0, 0, 24, 8 },
	{ 0, 0, 0, 0 },
	{ 0, 0, 0, 0 },
	{ -1, -1, -1, -1 },
	0, 0,
	0xfcf8,
	TEXT_01,
	TEXT_002,
	10000,
	AW_TOOLBOX | AW_OBLIST,
	0,
	-1,
	&IC_PALETTE,
	NULL,
	Awi_keys,
	Awi_obchange,
	Awi_redraw,
	Awi_topped,
	Awi_closed,
	Awi_fulled,
	Awi_arrowed,
	Awi_hslid,
	Awi_vslid,
	Awi_sized,
	Awi_moved,
	Awi_iconify,
	Awi_uniconify,
	Awi_gemscript,
	NULL,
	NULL
};
