#ifndef C_UNION
#  define C_UNION(x) { (int32)(x) }
#endif

#if COUNTRY == COUNTRY_DE
static char A_NOSTD[] = "[1][ Die Grafik liegt nicht im | Standard-Format vor, eine | öbernahme ist unmîglich! ][ Abbruch ]";
static char BUBBLE_01[] = "Die énderungen werden verworfen.";
static char BUBBLE_02[] = "Die énderungen werden Åbernommen.";
static char BUBBLE_03[] = "Hier kann der Text unter dem Icon eingegeben werden.";
static char BUBBLE_04[] = "Hier kann das Zeichen (z.B. Laufwerksbuchstabe) fÅr das Icon angegeben werden.";
static char BUBBLE_05[] = "Die Ausmaûe des Icons kînnen hier direkt editiert werden.";
static char BUBBLE_06[] = "Hier kann das Icon entworfen und verÑndert werden.";
static char BUBBLE_07[] = "öber diesen Button wechseln Sie wieder in die Icon-Ansicht.";
static char BUBBLE_08[] = "Die Ausmaûe eines Icons fÅr den Desktop werden eingestellt.";
static char TEXT_002[] = "";
static char TEXT_003[] = "OK";
static char TEXT_004[] = "Abbruch";
#if WITH_FIXES
static char TEXT_01[] = "THIN";
#else
static char TEXT_01[] = "THINN";
#endif
static char TEXT_019[] = "Struktur";
static char TEXT_02[] = "FAT";
static char TEXT_03[] = "neues Muster";
static char TEXT_04[] = "Pinsel:";
static char TEXT_05[] = "StÑrke:";
static char TEXT_06[] = "Schiebe:";
static char TEXT_07[] = "lîschen";
static char TEXT_08[] = "ICON1212312121212122";
static char TEXT_09[] = "hinten:";
static char TEXT_10[] = "vorne:";
static char TEXT_11[] = "Y:";
static char TEXT_12[] = "W:";
static char TEXT_13[] = "H:";
static char TEXT_14[] = "Char:";
static char TEXT_15[] = "Icon:";
static char TEXT_16[] = "Text:";
static char TEXT_17[] = " Ikonen-Editor ";
static char TEXT_18[] = "Farbe:";
static char TEXT_19[] = "Edit...";
static char TEXT_20[] = "leeren";
static char TEXT_21[] = "Ausmaûe...";
static char TEXT_22[] = "X:";
static char TEXT_23[] = "\004 Deskicon";
static char TEXT_24[] = " Ausmaûe ";
static char TEXT_25[] = "ICONS";
static char TEXT_27[] = "Ein/Aus";
#endif

#if COUNTRY == COUNTRY_US
#if WITH_FIXES
static char A_NOSTD[] = "[1][ Accepting the graphics is | impossible since it is in | non-standard-format.][ Cancel ]";
#else
static char A_NOSTD[] = "[1][ Accepting the grapic is | impossible since it is in | non-standard-format.][ Cancel ]";
#endif
static char BUBBLE_01[] = "The changes are ignored.";
static char BUBBLE_02[] = "The changes are accepted.";
static char BUBBLE_03[] = "Here you edit the text under the icon.";
static char BUBBLE_04[] = "Here you enter the char (i.e. char of the floppy).";
static char BUBBLE_05[] = "The size of the icon can be edited here.";
static char BUBBLE_06[] = "Here the icon can be constructed and modified.";
#if WITH_FIXES
static char BUBBLE_07[] = "This button changes from the construction window to the icon window.";
#else
static char BUBBLE_07[] = "This button changes from the cunstruction window to the icon window.";
#endif
#if WITH_FIXES
static char BUBBLE_08[] = "Size is adapted to a desktop icon.";
#else
static char BUBBLE_08[] = "The size is adapted to a destop icon.";
#endif
static char TEXT_002[] = "";
static char TEXT_003[] = "OK";
static char TEXT_004[] = "Cancel";
#if WITH_FIXES
static char TEXT_01[] = "THIN";
#else
static char TEXT_01[] = "THINN";
#endif
static char TEXT_019[] = "Structure";
static char TEXT_02[] = "FAT";
static char TEXT_03[] = "new pattern";
static char TEXT_04[] = "Brush:";
static char TEXT_05[] = "Size:";
static char TEXT_06[] = "Move:";
static char TEXT_07[] = "delete";
static char TEXT_08[] = "ICON1212312121212122";
static char TEXT_09[] = "Back:";
static char TEXT_10[] = "front:";
static char TEXT_11[] = "Y:";
static char TEXT_12[] = "W:";
static char TEXT_13[] = "H:";
static char TEXT_14[] = "Char:";
static char TEXT_15[] = "Icon:";
static char TEXT_16[] = "Text:";
static char TEXT_17[] = " Icon-Editor ";
static char TEXT_18[] = "Color:";
static char TEXT_19[] = "Edit...";
static char TEXT_20[] = "empty";
static char TEXT_21[] = "Size...";
static char TEXT_22[] = "X:";
static char TEXT_23[] = "\004 Deskicon";
static char TEXT_24[] = " Size ";
static char TEXT_25[] = "ICONS";
static char TEXT_27[] = "on/off";
#endif


#if !WITH_FIXES
static int16 DATAS_01[] = {
	0x0000, 0x0000, 0x02d8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xc200, 0x007f, 0xc003, 0xd200, 0x007f, 0xc003, 0x8200,
	0x007f, 0xc002, 0x2200, 0x007f, 0xc002, 0x0200, 0x007f, 0xc002,
	0x0200, 0x007f, 0xc003, 0xfe00, 0x0000, 0x0000, 0x0000, 0x03ff,
	0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0007, 0x8001,
	0xfc00, 0x000f, 0x0001, 0xfc00, 0x001e, 0x0001, 0xfc00, 0x001e,
	0x0001, 0xfc00, 0x003c, 0x0001, 0xfc00, 0x003c, 0x0001, 0xfc00,
	0x003c, 0x0001, 0xfc00, 0x0000, 0x0000, 0x0000, 0x03ff, 0xf81f,
	0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x007f, 0xc003,
	0xfe00, 0x007f, 0xc002, 0xc200, 0x006e, 0xc003, 0xd200, 0x0064,
	0xc003, 0x8200, 0x0071, 0xc002, 0x2200, 0x0064, 0xc002, 0x1e00,
	0x006e, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x0000, 0x0000,
	0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0001, 0xc001, 0xfc00, 0x0003, 0x8001, 0x3c00, 0x0007, 0x0001,
	0x1c00, 0x0007, 0x0001, 0x8c00, 0x000e, 0x0001, 0xc400, 0x000e,
	0x0001, 0xe400, 0x000e, 0x0001, 0xfc00, 0x0000, 0x0000, 0x0000,
	0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc002, 0x0200, 0x006e, 0xc002,
	0x0200, 0x0064, 0xc002, 0x0200, 0x0060, 0xc002, 0x0200, 0x0064,
	0xc002, 0x0200, 0x006e, 0xc002, 0x0200, 0x007f, 0xc003, 0xfe00,
	0x0000, 0x0000, 0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x6001, 0xfc00, 0x0000, 0xc001, 0xfc00,
	0x0001, 0x8001, 0xfc00, 0x0001, 0x8001, 0xfc00, 0x0003, 0x0001,
	0xfc00, 0x0003, 0x0001, 0xfc00, 0x0003, 0x0001, 0xfc00, 0x0000,
	0x0000, 0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x007f, 0xc003, 0xfe00, 0x0040, 0x4002, 0x0200,
	0x0051, 0x4002, 0x0200, 0x004a, 0x4002, 0x0200, 0x0044, 0x4002,
	0x0200, 0x004a, 0x4002, 0x0200, 0x0051, 0x4002, 0x3e00, 0x0040,
	0x4003, 0xfe00, 0x0000, 0x0400, 0x0020, 0x0000, 0x0400, 0x0020,
	0x07ff, 0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0003, 0xfe00, 0x0004, 0x0002, 0x0200, 0x0008,
	0x0002, 0x0200, 0x0010, 0x0002, 0x4200, 0x0010, 0x0002, 0x2200,
	0x0020, 0x0002, 0x1200, 0x0020, 0x0002, 0x0200, 0x0020, 0x0002,
	0x0200, 0x0000, 0x0400, 0x0020, 0x0000, 0x0400, 0x0020, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000
};
#endif

#if !WITH_FIXES
static int16 DATAS_02[] = {
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003,
	0xfe00, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0003, 0xfe00, 0x0007, 0xe003, 0xfe00, 0x000f, 0xc003,
	0xfe00, 0x001f, 0x8003, 0xfe00, 0x001f, 0x8003, 0xfe00, 0x003f,
	0x0003, 0xfe00, 0x003f, 0x0003, 0xfe00, 0x003f, 0x0003, 0xfe00,
	0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f,
	0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000
};
#endif

static int16 DATAS_03[] = {
	0x0000, 0x0000, 0x02d8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xc200, 0x007f, 0xc003, 0xd200, 0x007f, 0xc003, 0x8200,
	0x007f, 0xc002, 0x2200, 0x007f, 0xc002, 0x0200, 0x007f, 0xc002,
	0x0200, 0x007f, 0xc003, 0xfe00, 0x0000, 0x0000, 0x0000, 0x03ff,
	0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0007, 0x8001,
	0xfc00, 0x000f, 0x0001, 0xfc00, 0x001e, 0x0001, 0xfc00, 0x001e,
	0x0001, 0xfc00, 0x003c, 0x0001, 0xfc00, 0x003c, 0x0001, 0xfc00,
	0x003c, 0x0001, 0xfc00, 0x0000, 0x0000, 0x0000, 0x03ff, 0xf81f,
	0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x007f, 0xc003,
	0xfe00, 0x007f, 0xc002, 0xc200, 0x006e, 0xc003, 0xd200, 0x0064,
	0xc003, 0x8200, 0x0071, 0xc002, 0x2200, 0x0064, 0xc002, 0x1e00,
	0x006e, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x0000, 0x0000,
	0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0001, 0xc001, 0xfc00, 0x0003, 0x8001, 0x3c00, 0x0007, 0x0001,
	0x1c00, 0x0007, 0x0001, 0x8c00, 0x000e, 0x0001, 0xc400, 0x000e,
	0x0001, 0xe400, 0x000e, 0x0001, 0xfc00, 0x0000, 0x0000, 0x0000,
	0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc002, 0x0200, 0x006e, 0xc002,
	0x0200, 0x0064, 0xc002, 0x0200, 0x0060, 0xc002, 0x0200, 0x0064,
	0xc002, 0x0200, 0x006e, 0xc002, 0x0200, 0x007f, 0xc003, 0xfe00,
	0x0000, 0x0000, 0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x6001, 0xfc00, 0x0000, 0xc001, 0xfc00,
	0x0001, 0x8001, 0xfc00, 0x0001, 0x8001, 0xfc00, 0x0003, 0x0001,
	0xfc00, 0x0003, 0x0001, 0xfc00, 0x0003, 0x0001, 0xfc00, 0x0000,
	0x0000, 0x0000, 0x03ff, 0xf81f, 0xffc0, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x007f, 0xc003, 0xfe00, 0x0040, 0x4002, 0x0200,
	0x0051, 0x4002, 0x0200, 0x004a, 0x4002, 0x0200, 0x0044, 0x4002,
	0x0200, 0x004a, 0x4002, 0x0200, 0x0051, 0x4002, 0x3e00, 0x0040,
	0x4003, 0xfe00, 0x0000, 0x0400, 0x0020, 0x0000, 0x0400, 0x0020,
	0x07ff, 0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0003, 0xfe00, 0x0004, 0x0002, 0x0200, 0x0008,
	0x0002, 0x0200, 0x0010, 0x0002, 0x4200, 0x0010, 0x0002, 0x2200,
	0x0020, 0x0002, 0x1200, 0x0020, 0x0002, 0x0200, 0x0020, 0x0002,
	0x0200, 0x0000, 0x0400, 0x0020, 0x0000, 0x0400, 0x0020, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000
};
static int16 DATAS_04[] = {
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003,
	0xfe00, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0003, 0xfe00, 0x0007, 0xe003, 0xfe00, 0x000f, 0xc003,
	0xfe00, 0x001f, 0x8003, 0xfe00, 0x001f, 0x8003, 0xfe00, 0x003f,
	0x0003, 0xfe00, 0x003f, 0x0003, 0xfe00, 0x003f, 0x0003, 0xfe00,
	0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f,
	0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000
};

#if WITH_FIXES
static TEDINFO TEDINFO_01 = { TEXT_01, TEXT_002, TEXT_002, 5, 6, 2, 0x1180, 0, -1, 5, 1 };
#else
static TEDINFO TEDINFO_01 = { TEXT_01, TEXT_002, TEXT_002, 5, 6, 2, 0x1180, 0, -1, 6, 1 };
#endif
static TEDINFO TEDINFO_02 = { TEXT_02, TEXT_002, TEXT_002, 5, 6, 2, 0x1180, 0, -1, 4, 1 };

static AUSERBLK A_3DBUTTON01 = { A_3Dbutton, 0x29f10178L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON02 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_19, NULL, NULL, BUBBLE_06, NULL };
static AUSERBLK A_3DBUTTON03 = { A_3Dbutton, 0x29f10178L, Auo_string, TEXT_20, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON04 = { A_3Dbutton, 0x20119178L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON05 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_23, NULL, NULL, BUBBLE_08, NULL };
static AUSERBLK A_3DBUTTON06 = { A_3Dbutton, 0x29f10178L, Auo_string, TEXT_07, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON07 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_019, NULL, NULL, BUBBLE_07, NULL };
static AUSERBLK A_3DBUTTON08 = { A_3Dbutton, 0x29f101f8L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON10 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_21, NULL, NULL, BUBBLE_05, NULL };
static AUSERBLK A_3DBUTTON11 = { A_3Dbutton, 0xa02191f8L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON12 = { A_3Dbutton, 0x29f10178L, Auo_string, TEXT_03, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON13 = { A_3Dbutton, 0x202291a8L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON14 = { A_3Dbutton, 0x29f10178L, Auo_string, TEXT_27, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON15 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_003, NULL, NULL, BUBBLE_02, NULL };
static AUSERBLK A_3DBUTTON16 = { A_3Dbutton, 0x21f10178L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_3DBUTTON18 = { A_3Dbutton, 0x29c10178L, Auo_string, TEXT_004, NULL, NULL, BUBBLE_01, NULL };
static AUSERBLK A_3DBUTTON27 = { A_3Dbutton, 0x09f10178L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_ARROWS02 = { A_arrows, 0x13010001L, NULL, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_ARROWS03 = { A_arrows, 0x00010001L, NULL, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_BOXED02 = { A_boxed, 0x90380112L, Auo_boxed, NULL, NULL, NULL, BUBBLE_04, NULL };
static AUSERBLK A_BOXED03 = { A_boxed, 0x90700512L, Auo_boxed, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_BOXED05 = { A_boxed, 0x90381412L, Auo_boxed, NULL, NULL, NULL, BUBBLE_03, NULL };
static AUSERBLK A_BOXED06 = { A_boxed, 0x90780512L, Auo_boxed, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME02 = { A_innerframe, 0x10008f19L, Auo_string, TEXT_18, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME03 = { A_innerframe, 0x10008f19L, Auo_string, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME04 = { A_innerframe, 0x10008f19L, Auo_string, TEXT_15, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME05 = { A_innerframe, 0x10008f19L, Auo_string, TEXT_04, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME06 = { A_innerframe, 0x10008f19L, Auo_string, TEXT_05, NULL, NULL, NULL, NULL };
static AUSERBLK A_INNERFRAME07 = { A_innerframe, 0x10008f19L, Auo_string, TEXT_06, NULL, NULL, NULL, NULL };

static AUSERBLK EDIC_BITMAP01 = { edic_bitmap, 0L, NULL, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK ICNCOL01 = { IcnCol, 0L, NULL, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK PICCOLOR01 = { piccolor, 0L, NULL, NULL, NULL, NULL, NULL, NULL };
static AUSERBLK USER_001 = { user_control, 0L, NULL, NULL, NULL, NULL, NULL, NULL };

static int16 _MSK_ICON_001[] = {
	0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff,
	0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff,
	0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00,
	0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff,
	0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x00ff,
	0xffff, 0xfe00, 0x00ff, 0xffff, 0xfe00, 0x0fff, 0xffff, 0xfff0,
	0x0fff, 0xffff, 0xfff0, 0x0fff, 0xffff, 0xfff0, 0x0fff, 0xffff,
	0xfff0, 0x0fff, 0xffff, 0xfff0, 0x0fff, 0xffff, 0xfff0, 0x0fff,
	0xffff, 0xfff0, 0x0fff, 0xffff, 0xfff0, 0x0000, 0x0000, 0x0000
};
static int16 _DAT_ICON_001[] = {
	0x00ff, 0xffff, 0xfe00, 0x00c0, 0x0000, 0x0600, 0x00c0, 0x7fff,
	0x0600, 0x00c0, 0x8000, 0x8600, 0x00c1, 0x0000, 0x8600, 0x00c2,
	0x0000, 0x8600, 0x00c2, 0x0000, 0x8600, 0x00c2, 0x0000, 0x8600,
	0x00c2, 0x0000, 0x8600, 0x00c2, 0x0000, 0x8600, 0x00c2, 0x0000,
	0x8600, 0x00c2, 0x0000, 0x8600, 0x00c2, 0x0000, 0x8600, 0x00c2,
	0x0000, 0x8600, 0x00c2, 0x0000, 0x8600, 0x0fc3, 0xffff, 0x87f0,
	0x0c00, 0x0000, 0x0030, 0x0c1c, 0xf9f9, 0x8830, 0x0c08, 0x8109,
	0x4830, 0x0c08, 0x8109, 0x2830, 0x0c1c, 0xf9f9, 0x1830, 0x0c00,
	0x0000, 0x0030, 0x0fff, 0xffff, 0xfff0, 0x0000, 0x0000, 0x0000
};
static CICONBLK ICON_001 = { { _MSK_ICON_001, _DAT_ICON_001, TEXT_08, 0x1041, 0x0014, 0x0006, 0x0000, 0x0000, 0x0030, 0x0018, 0x0000, 0x0018, 0x0030, 0x0008 }, NULL };
static CICON _C4_IC_ICON = { 4, &DATAS_03[3], DATAS_04, NULL, NULL, NULL };

static int16 _MSK_IC_ICON[] = {
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003,
	0xfe00, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003,
	0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f,
	0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00, 0x007f, 0xc003, 0xfe00,
	0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f, 0xffe0, 0x07ff, 0xfc3f,
	0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000
};
static int16 _DAT_IC_ICON[] = {
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x007f, 0xc003, 0xfe00, 0x0040, 0x4003, 0xfe00, 0x0051,
	0x4003, 0x0600, 0x005b, 0x4003, 0x0600, 0x005f, 0x4003, 0x0600,
	0x005b, 0x4003, 0x0600, 0x0051, 0x4003, 0x0600, 0x0040, 0x4003,
	0xfe00, 0x07ff, 0xfc3f, 0xffe0, 0x0400, 0x0420, 0x0020, 0x07ff,
	0xfc3f, 0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x007f, 0xc003, 0xfe00, 0x0040, 0x4002, 0x0200, 0x005f, 0x4002,
	0xc200, 0x0051, 0x4002, 0xe200, 0x0051, 0x4002, 0x7200, 0x0051,
	0x4002, 0x3a00, 0x005f, 0x4002, 0x1a00, 0x0040, 0x4002, 0x0200,
	0x07ff, 0xfc3f, 0xffe0, 0x0400, 0x0420, 0x0020, 0x07ff, 0xfc3f,
	0xffe0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000
};
static CICONBLK IC_ICON = { { _MSK_IC_ICON, _DAT_IC_ICON, TEXT_25, 0x1000, 0x0000, 0x0000, 0x000c, 0x0000, 0x0030, 0x001e, 0x0000, 0x0020, 0x0048, 0x0008 }, &_C4_IC_ICON };

static struct {
	OBJECT  root;
	OBJECT  _01_COLOR;
	OBJECT  _02_COLOR;
	OBJECT  _03_COLOR;
	OBJECT  _04_COLOR;
	OBJECT  _05_COLOR;
	OBJECT  _06_COLOR;
	OBJECT  _07_COLOR;
	OBJECT  _08_COLOR;
	OBJECT  _09_COLOR;
	OBJECT  _10_COLOR;
	OBJECT  _11_COLOR;
	OBJECT  _12_COLOR;
	OBJECT  _13_COLOR;
	OBJECT  _14_COLOR;
	OBJECT  _15_COLOR;
	OBJECT  _16_COLOR;
} COLOR = {
	{ -1,  1, 16, G_BOX, 0x0000, 0x0020, C_UNION(0x00ff1100L), 0, 0, 16, 4 },
	{  2, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 0, 4, 1 },
	{  3, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 0, 4, 1 },
	{  4, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 0, 4, 1 },
	{  5, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 0, 4, 1 },
	{  6, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 1, 4, 1 },
	{  7, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 1, 4, 1 },
	{  8, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 1, 4, 1 },
	{  9, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 1, 4, 1 },
	{ 10, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 2, 4, 1 },
	{ 11, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 2, 4, 1 },
	{ 12, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 2, 4, 1 },
	{ 13, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 2, 4, 1 },
	{ 14, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 3, 4, 1 },
	{ 15, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 3, 4, 1 },
	{ 16, -1, -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 3, 4, 1 },
	{  0, -1, -1, G_USERDEF, 0x0021, 0x0000, C_UNION(&PICCOLOR01), 12, 3, 4, 1 }
};

static struct {
	OBJECT  root;
	OBJECT  _01_COLOR256;
	OBJECT  _02_COLOR256;
	OBJECT  _03_COLOR256;
	OBJECT  _04_COLOR256;
	OBJECT  _05_COLOR256;
	OBJECT  _06_COLOR256;
	OBJECT  _07_COLOR256;
	OBJECT  _08_COLOR256;
	OBJECT  _09_COLOR256;
	OBJECT  _10_COLOR256;
	OBJECT  _11_COLOR256;
	OBJECT  _12_COLOR256;
	OBJECT  _13_COLOR256;
	OBJECT  _14_COLOR256;
	OBJECT  _15_COLOR256;
	OBJECT  _16_COLOR256;
	OBJECT  _17_COLOR256;
	OBJECT  _18_COLOR256;
	OBJECT  _19_COLOR256;
	OBJECT  _20_COLOR256;
	OBJECT  _21_COLOR256;
	OBJECT  _22_COLOR256;
	OBJECT  _23_COLOR256;
	OBJECT  _24_COLOR256;
	OBJECT  _25_COLOR256;
	OBJECT  _26_COLOR256;
	OBJECT  _27_COLOR256;
	OBJECT  _28_COLOR256;
	OBJECT  _29_COLOR256;
	OBJECT  _30_COLOR256;
	OBJECT  _31_COLOR256;
	OBJECT  _32_COLOR256;
	OBJECT  _33_COLOR256;
	OBJECT  _34_COLOR256;
	OBJECT  _35_COLOR256;
	OBJECT  _36_COLOR256;
	OBJECT  _37_COLOR256;
	OBJECT  _38_COLOR256;
	OBJECT  _39_COLOR256;
	OBJECT  _40_COLOR256;
	OBJECT  _41_COLOR256;
	OBJECT  _42_COLOR256;
	OBJECT  _43_COLOR256;
	OBJECT  _44_COLOR256;
	OBJECT  _45_COLOR256;
	OBJECT  _46_COLOR256;
	OBJECT  _47_COLOR256;
	OBJECT  _48_COLOR256;
	OBJECT  _49_COLOR256;
	OBJECT  _50_COLOR256;
	OBJECT  _51_COLOR256;
	OBJECT  _52_COLOR256;
	OBJECT  _53_COLOR256;
	OBJECT  _54_COLOR256;
	OBJECT  _55_COLOR256;
	OBJECT  _56_COLOR256;
	OBJECT  _57_COLOR256;
	OBJECT  _58_COLOR256;
	OBJECT  _59_COLOR256;
	OBJECT  _60_COLOR256;
	OBJECT  _61_COLOR256;
	OBJECT  _62_COLOR256;
	OBJECT  _63_COLOR256;
	OBJECT  _64_COLOR256;
	OBJECT  _65_COLOR256;
	OBJECT  _66_COLOR256;
	OBJECT  _67_COLOR256;
	OBJECT  _68_COLOR256;
	OBJECT  _69_COLOR256;
	OBJECT  _70_COLOR256;
	OBJECT  _71_COLOR256;
	OBJECT  _72_COLOR256;
	OBJECT  _73_COLOR256;
	OBJECT  _74_COLOR256;
	OBJECT  _75_COLOR256;
	OBJECT  _76_COLOR256;
	OBJECT  _77_COLOR256;
	OBJECT  _78_COLOR256;
	OBJECT  _79_COLOR256;
	OBJECT  _80_COLOR256;
	OBJECT  _81_COLOR256;
	OBJECT  _82_COLOR256;
	OBJECT  _83_COLOR256;
	OBJECT  _84_COLOR256;
	OBJECT  _85_COLOR256;
	OBJECT  _86_COLOR256;
	OBJECT  _87_COLOR256;
	OBJECT  _88_COLOR256;
	OBJECT  _89_COLOR256;
	OBJECT  _90_COLOR256;
	OBJECT  _91_COLOR256;
	OBJECT  _92_COLOR256;
	OBJECT  _93_COLOR256;
	OBJECT  _94_COLOR256;
	OBJECT  _95_COLOR256;
	OBJECT  _96_COLOR256;
	OBJECT  _97_COLOR256;
	OBJECT  _98_COLOR256;
	OBJECT  _99_COLOR256;
	OBJECT  _100_COLOR256;
	OBJECT  _101_COLOR256;
	OBJECT  _102_COLOR256;
	OBJECT  _103_COLOR256;
	OBJECT  _104_COLOR256;
	OBJECT  _105_COLOR256;
	OBJECT  _106_COLOR256;
	OBJECT  _107_COLOR256;
	OBJECT  _108_COLOR256;
	OBJECT  _109_COLOR256;
	OBJECT  _110_COLOR256;
	OBJECT  _111_COLOR256;
	OBJECT  _112_COLOR256;
	OBJECT  _113_COLOR256;
	OBJECT  _114_COLOR256;
	OBJECT  _115_COLOR256;
	OBJECT  _116_COLOR256;
	OBJECT  _117_COLOR256;
	OBJECT  _118_COLOR256;
	OBJECT  _119_COLOR256;
	OBJECT  _120_COLOR256;
	OBJECT  _121_COLOR256;
	OBJECT  _122_COLOR256;
	OBJECT  _123_COLOR256;
	OBJECT  _124_COLOR256;
	OBJECT  _125_COLOR256;
	OBJECT  _126_COLOR256;
	OBJECT  _127_COLOR256;
	OBJECT  _128_COLOR256;
	OBJECT  _129_COLOR256;
	OBJECT  _130_COLOR256;
	OBJECT  _131_COLOR256;
	OBJECT  _132_COLOR256;
	OBJECT  _133_COLOR256;
	OBJECT  _134_COLOR256;
	OBJECT  _135_COLOR256;
	OBJECT  _136_COLOR256;
	OBJECT  _137_COLOR256;
	OBJECT  _138_COLOR256;
	OBJECT  _139_COLOR256;
	OBJECT  _140_COLOR256;
	OBJECT  _141_COLOR256;
	OBJECT  _142_COLOR256;
	OBJECT  _143_COLOR256;
	OBJECT  _144_COLOR256;
	OBJECT  _145_COLOR256;
	OBJECT  _146_COLOR256;
	OBJECT  _147_COLOR256;
	OBJECT  _148_COLOR256;
	OBJECT  _149_COLOR256;
	OBJECT  _150_COLOR256;
	OBJECT  _151_COLOR256;
	OBJECT  _152_COLOR256;
	OBJECT  _153_COLOR256;
	OBJECT  _154_COLOR256;
	OBJECT  _155_COLOR256;
	OBJECT  _156_COLOR256;
	OBJECT  _157_COLOR256;
	OBJECT  _158_COLOR256;
	OBJECT  _159_COLOR256;
	OBJECT  _160_COLOR256;
	OBJECT  _161_COLOR256;
	OBJECT  _162_COLOR256;
	OBJECT  _163_COLOR256;
	OBJECT  _164_COLOR256;
	OBJECT  _165_COLOR256;
	OBJECT  _166_COLOR256;
	OBJECT  _167_COLOR256;
	OBJECT  _168_COLOR256;
	OBJECT  _169_COLOR256;
	OBJECT  _170_COLOR256;
	OBJECT  _171_COLOR256;
	OBJECT  _172_COLOR256;
	OBJECT  _173_COLOR256;
	OBJECT  _174_COLOR256;
	OBJECT  _175_COLOR256;
	OBJECT  _176_COLOR256;
	OBJECT  _177_COLOR256;
	OBJECT  _178_COLOR256;
	OBJECT  _179_COLOR256;
	OBJECT  _180_COLOR256;
	OBJECT  _181_COLOR256;
	OBJECT  _182_COLOR256;
	OBJECT  _183_COLOR256;
	OBJECT  _184_COLOR256;
	OBJECT  _185_COLOR256;
	OBJECT  _186_COLOR256;
	OBJECT  _187_COLOR256;
	OBJECT  _188_COLOR256;
	OBJECT  _189_COLOR256;
	OBJECT  _190_COLOR256;
	OBJECT  _191_COLOR256;
	OBJECT  _192_COLOR256;
	OBJECT  _193_COLOR256;
	OBJECT  _194_COLOR256;
	OBJECT  _195_COLOR256;
	OBJECT  _196_COLOR256;
	OBJECT  _197_COLOR256;
	OBJECT  _198_COLOR256;
	OBJECT  _199_COLOR256;
	OBJECT  _200_COLOR256;
	OBJECT  _201_COLOR256;
	OBJECT  _202_COLOR256;
	OBJECT  _203_COLOR256;
	OBJECT  _204_COLOR256;
	OBJECT  _205_COLOR256;
	OBJECT  _206_COLOR256;
	OBJECT  _207_COLOR256;
	OBJECT  _208_COLOR256;
	OBJECT  _209_COLOR256;
	OBJECT  _210_COLOR256;
	OBJECT  _211_COLOR256;
	OBJECT  _212_COLOR256;
	OBJECT  _213_COLOR256;
	OBJECT  _214_COLOR256;
	OBJECT  _215_COLOR256;
	OBJECT  _216_COLOR256;
	OBJECT  _217_COLOR256;
	OBJECT  _218_COLOR256;
	OBJECT  _219_COLOR256;
	OBJECT  _220_COLOR256;
	OBJECT  _221_COLOR256;
	OBJECT  _222_COLOR256;
	OBJECT  _223_COLOR256;
	OBJECT  _224_COLOR256;
	OBJECT  _225_COLOR256;
	OBJECT  _226_COLOR256;
	OBJECT  _227_COLOR256;
	OBJECT  _228_COLOR256;
	OBJECT  _229_COLOR256;
	OBJECT  _230_COLOR256;
	OBJECT  _231_COLOR256;
	OBJECT  _232_COLOR256;
	OBJECT  _233_COLOR256;
	OBJECT  _234_COLOR256;
	OBJECT  _235_COLOR256;
	OBJECT  _236_COLOR256;
	OBJECT  _237_COLOR256;
	OBJECT  _238_COLOR256;
	OBJECT  _239_COLOR256;
	OBJECT  _240_COLOR256;
	OBJECT  _241_COLOR256;
	OBJECT  _242_COLOR256;
	OBJECT  _243_COLOR256;
	OBJECT  _244_COLOR256;
	OBJECT  _245_COLOR256;
	OBJECT  _246_COLOR256;
	OBJECT  _247_COLOR256;
	OBJECT  _248_COLOR256;
	OBJECT  _249_COLOR256;
	OBJECT  _250_COLOR256;
	OBJECT  _251_COLOR256;
	OBJECT  _252_COLOR256;
	OBJECT  _253_COLOR256;
	OBJECT  _254_COLOR256;
	OBJECT  _255_COLOR256;
	OBJECT  _256_COLOR256;
} COLOR256 = {
	{  -1,  1, 256, G_BOX, 0x0000, 0x0020, C_UNION(0x00ff1100L), 0, 0, 32, 16 },
	{   2, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 0, 2, 1 },
	{   3, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 0, 2, 1 },
	{   4, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 0, 2, 1 },
	{   5, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 0, 2, 1 },
	{   6, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 0, 2, 1 },
	{   7, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 0, 2, 1 },
	{   8, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 0, 2, 1 },
	{   9, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 0, 2, 1 },
	{  10, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 0, 2, 1 },
	{  11, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 0, 2, 1 },
	{  12, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 0, 2, 1 },
	{  13, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 0, 2, 1 },
	{  14, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 0, 2, 1 },
	{  15, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 0, 2, 1 },
	{  16, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 0, 2, 1 },
	{  17, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 0, 2, 1 },
	{  18, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 1, 2, 1 },
	{  19, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 1, 2, 1 },
	{  20, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 1, 2, 1 },
	{  21, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 1, 2, 1 },
	{  22, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 1, 2, 1 },
	{  23, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 1, 2, 1 },
	{  24, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 1, 2, 1 },
	{  25, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 1, 2, 1 },
	{  26, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 1, 2, 1 },
	{  27, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 1, 2, 1 },
	{  28, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 1, 2, 1 },
	{  29, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 1, 2, 1 },
	{  30, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 1, 2, 1 },
	{  31, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 1, 2, 1 },
	{  32, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 1, 2, 1 },
	{  33, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 1, 2, 1 },
	{  34, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 2, 2, 1 },
	{  35, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 2, 2, 1 },
	{  36, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 2, 2, 1 },
	{  37, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 2, 2, 1 },
	{  38, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 2, 2, 1 },
	{  39, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 2, 2, 1 },
	{  40, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 2, 2, 1 },
	{  41, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 2, 2, 1 },
	{  42, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 2, 2, 1 },
	{  43, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 2, 2, 1 },
	{  44, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 2, 2, 1 },
	{  45, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 2, 2, 1 },
	{  46, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 2, 2, 1 },
	{  47, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 2, 2, 1 },
	{  48, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 2, 2, 1 },
	{  49, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 2, 2, 1 },
	{  50, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 3, 2, 1 },
	{  51, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 3, 2, 1 },
	{  52, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 3, 2, 1 },
	{  53, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 3, 2, 1 },
	{  54, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 3, 2, 1 },
	{  55, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 3, 2, 1 },
	{  56, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 3, 2, 1 },
	{  57, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 3, 2, 1 },
	{  58, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 3, 2, 1 },
	{  59, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 3, 2, 1 },
	{  60, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 3, 2, 1 },
	{  61, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 3, 2, 1 },
	{  62, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 3, 2, 1 },
	{  63, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 3, 2, 1 },
	{  64, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 3, 2, 1 },
	{  65, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 3, 2, 1 },
	{  66, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 4, 2, 1 },
	{  67, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 4, 2, 1 },
	{  68, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 4, 2, 1 },
	{  69, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 4, 2, 1 },
	{  70, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 4, 2, 1 },
	{  71, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 4, 2, 1 },
	{  72, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 4, 2, 1 },
	{  73, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 4, 2, 1 },
	{  74, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 4, 2, 1 },
	{  75, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 4, 2, 1 },
	{  76, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 4, 2, 1 },
	{  77, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 4, 2, 1 },
	{  78, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 4, 2, 1 },
	{  79, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 4, 2, 1 },
	{  80, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 4, 2, 1 },
	{  81, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 4, 2, 1 },
	{  82, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 5, 2, 1 },
	{  83, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 5, 2, 1 },
	{  84, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 5, 2, 1 },
	{  85, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 5, 2, 1 },
	{  86, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 5, 2, 1 },
	{  87, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 5, 2, 1 },
	{  88, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 5, 2, 1 },
	{  89, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 5, 2, 1 },
	{  90, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 5, 2, 1 },
	{  91, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 5, 2, 1 },
	{  92, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 5, 2, 1 },
	{  93, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 5, 2, 1 },
	{  94, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 5, 2, 1 },
	{  95, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 5, 2, 1 },
	{  96, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 5, 2, 1 },
	{  97, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 5, 2, 1 },
	{  98, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 6, 2, 1 },
	{  99, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 6, 2, 1 },
	{ 100, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 6, 2, 1 },
	{ 101, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 6, 2, 1 },
	{ 102, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 6, 2, 1 },
	{ 103, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 6, 2, 1 },
	{ 104, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 6, 2, 1 },
	{ 105, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 6, 2, 1 },
	{ 106, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 6, 2, 1 },
	{ 107, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 6, 2, 1 },
	{ 108, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 6, 2, 1 },
	{ 109, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 6, 2, 1 },
	{ 110, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 6, 2, 1 },
	{ 111, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 6, 2, 1 },
	{ 112, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 6, 2, 1 },
	{ 113, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 6, 2, 1 },
	{ 114, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 7, 2, 1 },
	{ 115, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 7, 2, 1 },
	{ 116, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 7, 2, 1 },
	{ 117, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 7, 2, 1 },
	{ 118, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 7, 2, 1 },
	{ 119, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 7, 2, 1 },
	{ 120, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 7, 2, 1 },
	{ 121, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 7, 2, 1 },
	{ 122, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 7, 2, 1 },
	{ 123, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 7, 2, 1 },
	{ 124, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 7, 2, 1 },
	{ 125, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 7, 2, 1 },
	{ 126, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 7, 2, 1 },
	{ 127, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 7, 2, 1 },
	{ 128, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 7, 2, 1 },
	{ 129, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 7, 2, 1 },
	{ 130, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 8, 2, 1 },
	{ 131, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 8, 2, 1 },
	{ 132, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 8, 2, 1 },
	{ 133, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 8, 2, 1 },
	{ 134, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 8, 2, 1 },
	{ 135, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 8, 2, 1 },
	{ 136, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 8, 2, 1 },
	{ 137, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 8, 2, 1 },
	{ 138, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 8, 2, 1 },
	{ 139, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 8, 2, 1 },
	{ 140, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 8, 2, 1 },
	{ 141, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 8, 2, 1 },
	{ 142, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 8, 2, 1 },
	{ 143, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 8, 2, 1 },
	{ 144, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 8, 2, 1 },
	{ 145, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 8, 2, 1 },
	{ 146, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 9, 2, 1 },
	{ 147, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 9, 2, 1 },
	{ 148, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 9, 2, 1 },
	{ 149, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 9, 2, 1 },
	{ 150, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 9, 2, 1 },
	{ 151, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 9, 2, 1 },
	{ 152, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 9, 2, 1 },
	{ 153, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 9, 2, 1 },
	{ 154, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 9, 2, 1 },
	{ 155, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 9, 2, 1 },
	{ 156, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 9, 2, 1 },
	{ 157, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 9, 2, 1 },
	{ 158, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 9, 2, 1 },
	{ 159, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 9, 2, 1 },
	{ 160, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 9, 2, 1 },
	{ 161, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 9, 2, 1 },
	{ 162, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 10, 2, 1 },
	{ 163, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 10, 2, 1 },
	{ 164, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 10, 2, 1 },
	{ 165, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 10, 2, 1 },
	{ 166, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 10, 2, 1 },
	{ 167, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 10, 2, 1 },
	{ 168, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 10, 2, 1 },
	{ 169, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 10, 2, 1 },
	{ 170, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 10, 2, 1 },
	{ 171, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 10, 2, 1 },
	{ 172, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 10, 2, 1 },
	{ 173, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 10, 2, 1 },
	{ 174, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 10, 2, 1 },
	{ 175, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 10, 2, 1 },
	{ 176, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 10, 2, 1 },
	{ 177, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 10, 2, 1 },
	{ 178, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 11, 2, 1 },
	{ 179, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 11, 2, 1 },
	{ 180, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 11, 2, 1 },
	{ 181, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 11, 2, 1 },
	{ 182, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 11, 2, 1 },
	{ 183, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 11, 2, 1 },
	{ 184, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 11, 2, 1 },
	{ 185, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 11, 2, 1 },
	{ 186, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 11, 2, 1 },
	{ 187, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 11, 2, 1 },
	{ 188, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 11, 2, 1 },
	{ 189, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 11, 2, 1 },
	{ 190, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 11, 2, 1 },
	{ 191, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 11, 2, 1 },
	{ 192, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 11, 2, 1 },
	{ 193, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 11, 2, 1 },
	{ 194, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 12, 2, 1 },
	{ 195, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 12, 2, 1 },
	{ 196, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 12, 2, 1 },
	{ 197, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 12, 2, 1 },
	{ 198, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 12, 2, 1 },
	{ 199, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 12, 2, 1 },
	{ 200, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 12, 2, 1 },
	{ 201, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 12, 2, 1 },
	{ 202, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 12, 2, 1 },
	{ 203, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 12, 2, 1 },
	{ 204, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 12, 2, 1 },
	{ 205, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 12, 2, 1 },
	{ 206, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 12, 2, 1 },
	{ 207, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 12, 2, 1 },
	{ 208, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 12, 2, 1 },
	{ 209, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 12, 2, 1 },
	{ 210, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 13, 2, 1 },
	{ 211, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 13, 2, 1 },
	{ 212, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 13, 2, 1 },
	{ 213, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 13, 2, 1 },
	{ 214, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 13, 2, 1 },
	{ 215, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 13, 2, 1 },
	{ 216, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 13, 2, 1 },
	{ 217, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 13, 2, 1 },
	{ 218, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 13, 2, 1 },
	{ 219, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 13, 2, 1 },
	{ 220, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 13, 2, 1 },
	{ 221, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 13, 2, 1 },
	{ 222, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 13, 2, 1 },
	{ 223, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 13, 2, 1 },
	{ 224, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 13, 2, 1 },
	{ 225, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 13, 2, 1 },
	{ 226, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 14, 2, 1 },
	{ 227, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 14, 2, 1 },
	{ 228, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 14, 2, 1 },
	{ 229, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 14, 2, 1 },
	{ 230, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 14, 2, 1 },
	{ 231, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 14, 2, 1 },
	{ 232, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 14, 2, 1 },
	{ 233, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 14, 2, 1 },
	{ 234, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 14, 2, 1 },
	{ 235, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 14, 2, 1 },
	{ 236, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 14, 2, 1 },
	{ 237, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 14, 2, 1 },
	{ 238, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 14, 2, 1 },
	{ 239, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 14, 2, 1 },
	{ 240, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 14, 2, 1 },
	{ 241, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 30, 14, 2, 1 },
	{ 242, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 0, 15, 2, 1 },
	{ 243, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 2, 15, 2, 1 },
	{ 244, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 4, 15, 2, 1 },
	{ 245, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 6, 15, 2, 1 },
	{ 246, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 8, 15, 2, 1 },
	{ 247, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 10, 15, 2, 1 },
	{ 248, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 12, 15, 2, 1 },
	{ 249, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 14, 15, 2, 1 },
	{ 250, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 16, 15, 2, 1 },
	{ 251, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 18, 15, 2, 1 },
	{ 252, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 20, 15, 2, 1 },
	{ 253, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 22, 15, 2, 1 },
	{ 254, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 24, 15, 2, 1 },
	{ 255, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 26, 15, 2, 1 },
	{ 256, -1,  -1, G_USERDEF, 0x0001, 0x0000, C_UNION(&PICCOLOR01), 28, 15, 2, 1 },
	{   0, -1,  -1, G_USERDEF, 0x0021, 0x0000, C_UNION(&PICCOLOR01), 30, 15, 2, 1 }
};

static struct {
	OBJECT  root;
	OBJECT  _01_EDIT_ICON;
	OBJECT  _02_EDIT_ICON;
	OBJECT  _03_EDIT_ICON;
	OBJECT  _04_EDIT_ICON;
	AOBJECT _04aEDIT_ICON;
	OBJECT  _06_EDIT_ICON;
	OBJECT  _07_EDIT_ICON;
	OBJECT  _08_EDIT_ICON;
	OBJECT  _09_EDIT_ICON;
	OBJECT  _10_EDIT_ICON;
	AOBJECT _10aEDIT_ICON;
	OBJECT  _12_EDIT_ICON;
	OBJECT  _13_EDIT_ICON;
	OBJECT  _14_EDIT_ICON;
	AOBJECT _14aEDIT_ICON;
	OBJECT  _16_EDIT_ICON;
	AOBJECT _16aEDIT_ICON;
	OBJECT  _18_EDIT_ICON;
	OBJECT  _19_EDIT_ICON;
	AOBJECT _19aEDIT_ICON;
	OBJECT  _21_EDIT_ICON;
	OBJECT  _22_EDIT_ICON;
	OBJECT  _23_EDIT_ICON;
	OBJECT  _24_EDIT_ICON;
	OBJECT  _25_EDIT_ICON;
	OBJECT  _26_EDIT_ICON;
	OBJECT  _27_EDIT_ICON;
	OBJECT  _28_EDIT_ICON;
	OBJECT  _29_EDIT_ICON;
	AOBJECT _29aEDIT_ICON;
	OBJECT  _31_EDIT_ICON;
	AOBJECT _31aEDIT_ICON;
	OBJECT  _33_EDIT_ICON;
	AOBJECT _33aEDIT_ICON;
	OBJECT  _35_EDIT_ICON;
	AOBJECT _35aEDIT_ICON;
	OBJECT  _37_EDIT_ICON;
	AOBJECT _37aEDIT_ICON;
	OBJECT  _39_EDIT_ICON;
	AOBJECT _39aEDIT_ICON;
	OBJECT  _41_EDIT_ICON;
	AOBJECT _41aEDIT_ICON;
	OBJECT  _43_EDIT_ICON;
	AOBJECT _43aEDIT_ICON;
} EDIT_ICON = {
	{ -1,  1, 43, G_USERDEF, 0x0040, 0x0010, C_UNION(&A_3DBUTTON16), 0, 0, 56, 17 },
	{ 14,  2, 10, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME02), 27, 0, 29, 5 },
	{  4,  3,  3, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_10), 1, 1, 6, 1 },
	{  2, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS02), 0, 0, 1, 1 },
	{  8,  6,  7, G_BOX, 0x0040, 0x0020, C_UNION(0x00ff1101L), 9, 1, 18, 1 },
	{ edic_frontcol, NULL, AEO, 0x8856, NULL, NULL, 0, 0, },
	{  7, -1, -1, G_BOX, 0x0000, 0x0000, C_UNION(0x00011171L), 16, 0, 2, 1 },
	{  4, -1, -1, G_USERDEF, 0x0000, 0x0000, C_UNION(&A_3DBUTTON27), 0, 0, 16, 1 },
	{ 10,  9,  9, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_09), 1, 3, 7, 1 },
	{  8, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS02), 0, 0, 1, 1 },
	{  1, 12, 13, G_BOX, 0x0040, 0x0020, C_UNION(0x00ff1101L), 9, 3, 18, 1 },
	{ edic_backcol, NULL, AEO, 0x8848, NULL, NULL, 0, 0, },
	{ 13, -1, -1, G_BOX, 0x0000, 0x0000, C_UNION(0x00011171L), 16, 0, 2, 1 },
	{ 10, -1, -1, G_USERDEF, 0x0000, 0x0000, C_UNION(&A_3DBUTTON27), 0, 0, 16, 1 },
	{ 21, 16, 16, G_USERDEF, AO_ACCEPT, 0x0010, C_UNION(&A_3DBUTTON13), 2, 1, 24, 12 },
	{ NULL, edic_accept, AEO, 0x0000, NULL, NULL, 0, 0, },
	{ 14, 18, 19, G_ICON, 0x0040, 0x0000, C_UNION(&ICON_001), 0, 0, 24, 12 },
	{ edic_control, NULL, AEO, 0x0000, NULL, NULL, 0, 0, },
	{ 19, -1, -1, G_USERDEF, 0x0080, 0x0011, C_UNION(&USER_001), 3, 1, 8, 3 },
	{ 16, -1, -1, G_IBOX, AO_DRAGABLE, 0x0000, C_UNION(0x00ff1101L), 0, 0, 4, 1 },
	{ NULL, NULL, AEO, 0x0000, NULL, NULL, 0, AT_MFDB },
	{ 28, 22, 24, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME03), 27, 5, 29, 4 },
	{ 23, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_16), 1, 1, 5, 1 },
	{ 24, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_14), 1, 2, 5, 1 },
	{ 21, 25, 25, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_3DBUTTON04), 7, 1, 20, 2 },
	{ 24, 26, 27, G_BOX, 0x0040, 0x0000, C_UNION(0x00ff0101L), 0, 0, 20, 2 },
	{ 27, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED05), 0, 0, 20, 1 },
	{ 25, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED02), 0, 1, 1, 1 },
	{ 37, 29, 35, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME04), 27, 9, 29, 5 },
	{ 31, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON03), 1, 1, 13, 1 },
	{ edic_newplane, NULL, AEO, 0x884c, NULL, NULL, 0, 0, },
	{ 33, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON14), 1, 3, 13, 1 },
	{ edic_select, NULL, AEO, 0x884b, NULL, NULL, 0, 0, },
	{ 35, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON06), 15, 1, 13, 1 },
	{ edic_delplane, NULL, AEO, 0x8853, NULL, NULL, 0, 0, },
	{ 28, -1, -1, G_USERDEF, 0x0005, 0x0000, C_UNION(&A_3DBUTTON12), 15, 3, 13, 1 },
	{ edic_nextpattern, NULL, AEO, 0x0000, NULL, NULL, 0, 0, },
	{ 39, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON02), 1, 14, 12, 2 },
	{ edic_edit, NULL, AEO, 0x8845, NULL, NULL, 0, 0, },
	{ 41, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON10), 15, 14, 12, 2 },
	{ edic_direct, NULL, AEO, 0x8855, NULL, NULL, 0, 0, },
	{ 43, -1, -1, G_USERDEF, 0x4007, 0x0010, C_UNION(&A_3DBUTTON15), 29, 14, 12, 2 },
	{ edic_ok, NULL, AEO, 0x884f, NULL, NULL, 0, 0, },
	{  0, -1, -1, G_USERDEF, 0x4005, 0x0010, C_UNION(&A_3DBUTTON18), 43, 14, 12, 2 },
	{ edic_abort, NULL, AEO | OF_LASTOB, 0x8841, NULL, NULL, 0, 0, }
};

static struct {
	OBJECT  root;
	OBJECT  _01_EDIT_ICON2;
	OBJECT  _02_EDIT_ICON2;
	OBJECT  _03_EDIT_ICON2;
	OBJECT  _04_EDIT_ICON2;
	AOBJECT _04aEDIT_ICON2;
	OBJECT  _06_EDIT_ICON2;
	AOBJECT _06aEDIT_ICON2;
	OBJECT  _08_EDIT_ICON2;
	AOBJECT _08aEDIT_ICON2;
	OBJECT  _10_EDIT_ICON2;
	OBJECT  _11_EDIT_ICON2;
	AOBJECT _11aEDIT_ICON2;
	OBJECT  _13_EDIT_ICON2;
	AOBJECT _13aEDIT_ICON2;
	OBJECT  _15_EDIT_ICON2;
	OBJECT  _16_EDIT_ICON2;
	AOBJECT _16aEDIT_ICON2;
	OBJECT  _18_EDIT_ICON2;
	AOBJECT _18aEDIT_ICON2;
	OBJECT  _20_EDIT_ICON2;
	AOBJECT _20aEDIT_ICON2;
	OBJECT  _22_EDIT_ICON2;
	AOBJECT _22aEDIT_ICON2;
	OBJECT  _24_EDIT_ICON2;
	AOBJECT _24aEDIT_ICON2;
	OBJECT  _26_EDIT_ICON2;
	OBJECT  _27_EDIT_ICON2;
	AOBJECT _27aEDIT_ICON2;
} EDIT_ICON2 = {
	{ -1,  1, 26, G_USERDEF, 0x0040, 0x0010, C_UNION(&A_3DBUTTON01), 0, 0, 50, 9 },
	{  3,  2,  2, G_USERDEF, 0x0000, 0x0010, C_UNION(&A_3DBUTTON16), 0, 0, 6, 3 },
	{  1, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&ICNCOL01), 2, 1, 2, 1 },
	{ 10,  4,  8, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME05), 6, 0, 10, 3 },
	{  6, -1, -1, G_BOX, 0x0005, 0x0000, C_UNION(0x00011170L), 1, 1, 2, 1 },
	{ edic_white, NULL, AEO, 0x0057, NULL, NULL, 0, 0, },
	{  8, -1, -1, G_BOX, 0x0005, 0x0000, C_UNION(0x00010171L), 4, 1, 2, 1 },
	{ edic_black, NULL, AEO, 0x0053, NULL, NULL, 0, 0, },
	{  3, -1, -1, G_BOX, 0x0005, 0x0000, C_UNION(0x00011141L), 7, 1, 2, 1 },
	{ edic_invisible, NULL, AEO, 0x0054, NULL, NULL, 0, 0, },
	{ 15, 11, 13, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME06), 16, 0, 10, 3 },
	{ 13, -1, -1, 0x0015, 0x0005, 0x0000, C_UNION(&TEDINFO_01), 1, 1, 5, 1 },
	{ edic_thin, NULL, AEO, 0x0044, NULL, NULL, 0, 0, },
	{ 10, -1, -1, 0x0015, 0x0005, 0x0000, C_UNION(&TEDINFO_02), 5, 1, 4, 1 },
	{ edic_thick, NULL, AEO, 0x0046, NULL, NULL, 0, 0, },
	{ 24, 16, 22, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_INNERFRAME07), 26, 0, 10, 3 },
	{ 18, -1, -1, 0x001b, 0x0005, 0x0000, C_UNION(0x04001101L), 1, 1, 2, 1 },
	{ edic_left, NULL, AEO, 0x8004, NULL, NULL, 0, 0, },
	{ 20, -1, -1, 0x001b, 0x0005, 0x0000, C_UNION(0x01001101L), 3, 1, 2, 1 },
	{ edic_up, NULL, AEO, 0x8001, NULL, NULL, 0, 0, },
	{ 22, -1, -1, 0x001b, 0x0005, 0x0000, C_UNION(0x02001101L), 5, 1, 2, 1 },
	{ edic_down, NULL, AEO, 0x8002, NULL, NULL, 0, 0, },
	{ 15, -1, -1, 0x001b, 0x0005, 0x0000, C_UNION(0x03001101L), 7, 1, 2, 1 },
	{ edic_right, NULL, AEO, 0x8003, NULL, NULL, 0, 0, },
	{ 26, -1, -1, G_USERDEF, 0x0007, 0x0010, C_UNION(&A_3DBUTTON07), 37, 1, 12, 2 },
	{ edic_struct, NULL, AEO, 0x8853, NULL, NULL, 0, 0, },
	{  0, 27, 27, G_USERDEF, 0x0000, 0x0010, C_UNION(&A_3DBUTTON11), 2, 4, 14, 4 },
	{ 26, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&EDIC_BITMAP01), 0, 0, 14, 4 },
	{ edic_set, NULL, AEO | OF_LASTOB, 0x0000, NULL, NULL, MOUSE_BRUSH_BLACK, 0, }
};

static struct {
	OBJECT  root;
	OBJECT  _01_IC_POS;
	OBJECT  _02_IC_POS;
	OBJECT  _03_IC_POS;
	OBJECT  _04_IC_POS;
	OBJECT  _05_IC_POS;
	OBJECT  _06_IC_POS;
	OBJECT  _07_IC_POS;
	OBJECT  _08_IC_POS;
	OBJECT  _09_IC_POS;
	OBJECT  _10_IC_POS;
	OBJECT  _11_IC_POS;
	OBJECT  _12_IC_POS;
	OBJECT  _13_IC_POS;
	OBJECT  _14_IC_POS;
	OBJECT  _15_IC_POS;
	OBJECT  _16_IC_POS;
	OBJECT  _17_IC_POS;
	OBJECT  _18_IC_POS;
	OBJECT  _19_IC_POS;
	OBJECT  _20_IC_POS;
	OBJECT  _21_IC_POS;
	OBJECT  _22_IC_POS;
	OBJECT  _23_IC_POS;
	OBJECT  _24_IC_POS;
	OBJECT  _25_IC_POS;
	OBJECT  _26_IC_POS;
	AOBJECT _26aIC_POS;
	OBJECT  _28_IC_POS;
	OBJECT  _29_IC_POS;
	AOBJECT _29aIC_POS;
	OBJECT  _31_IC_POS;
	AOBJECT _31aIC_POS;
} IC_POS = {
	{ -1,  1,  1, G_IBOX, 0x0000, 0x0000, C_UNION(0x00ff1141L), 0, 0, 40, 9 },
	{  0,  2, 31, G_USERDEF, 0x0040, 0x0510, C_UNION(&A_3DBUTTON08), 0, 0, 40, 9 },
	{  3, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_22), 8, 1, 2, 1 },
	{  4, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 11, 1, 1, 1 },
	{  5, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_11), 13, 1, 2, 1 },
	{  6, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 16, 1, 1, 1 },
	{  7, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_12), 18, 1, 2, 1 },
	{  8, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 21, 1, 1, 1 },
	{  9, -1, -1, G_STRING, 0x0040, 0x0000, C_UNION(&TEXT_13), 23, 1, 2, 1 },
	{ 10, -1, -1, G_STRING, 0x0000, 0x0000, C_UNION(&TEXT_14), 1, 2, 5, 1 },
	{ 25, 11, 11, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_3DBUTTON04), 7, 2, 19, 3 },
	{ 10, 12, 24, G_BOX, 0x0040, 0x0000, C_UNION(0x00ff0101L), 0, 0, 19, 3 },
	{ 13, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 0, 0, 4, 1 },
	{ 14, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 4, 0, 1, 3 },
	{ 15, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 5, 0, 4, 1 },
	{ 16, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 9, 0, 1, 3 },
	{ 17, -1, -1, G_USERDEF, 0x0040, 0x0000, C_UNION(&A_ARROWS03), 14, 0, 1, 3 },
	{ 18, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 0, 1, 4, 1 },
	{ 19, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 5, 1, 4, 1 },
	{ 20, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 10, 1, 4, 1 },
	{ 21, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 15, 1, 4, 1 },
	{ 22, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED06), 0, 2, 4, 1 },
	{ 23, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED06), 5, 2, 4, 1 },
	{ 24, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 10, 2, 4, 1 },
	{ 11, -1, -1, G_USERDEF, 0x0008, 0x0000, C_UNION(&A_BOXED03), 15, 2, 4, 1 },
	{ 26, -1, -1, G_STRING, 0x0000, 0x0000, C_UNION(&TEXT_15), 1, 3, 5, 1 },
	{ 28, -1, -1, G_USERDEF, 0x0005, 0x0010, C_UNION(&A_3DBUTTON05), 27, 3, 12, 2 },
	{ edic_deskicon, NULL, AEO, 0x8844, NULL, NULL, 0, 0, },
	{ 29, -1, -1, G_STRING, 0x0000, 0x0000, C_UNION(&TEXT_16), 1, 4, 5, 1 },
	{ 31, -1, -1, G_USERDEF, 0x4007, 0x0010, C_UNION(&A_3DBUTTON15), 7, 6, 12, 2 },
	{ NULL, NULL, AEO, 0x884f, NULL, NULL, 0, 0, },
	{  1, -1, -1, G_USERDEF, 0x4005, 0x0010, C_UNION(&A_3DBUTTON18), 21, 6, 12, 2 },
	{ NULL, NULL, AEO | OF_LASTOB, 0x8841, NULL, NULL, 0, 0, }
};

Awindow WI_ICON = {
	NULL,
	ic_service,
	ic_make,
	Awi_open,
	Awi_init,
	&EDIT_ICON.root,
	NULL,
	0, 0,
	-1,
	0x601f,
	{ 0, 0, 99, 99 },
	{ 0, 0, 0, 0 },
	{ 0, 0, 0, 0 },
	{ -1, -1, -1, -1 },
	0, 0,
	0xfcf8,
	TEXT_17,
	TEXT_002,
	10000,
	AW_TOOLBOX,
	0,
	-1,
	&IC_ICON,
	NULL,
	ic_keys,
	Awi_obchange,
	Awi_redraw,
	Awi_topped,
	Awi_closed,
	Awi_fulled,
	Awi_arrowed,
	Awi_hslid,
	Awi_vslid,
	Awi_sized,
	Awi_moved,
	Awi_iconify,
	Awi_uniconify,
	Awi_gemscript,
	NULL,
	NULL
};

Awindow WI_POS = {
	NULL,
	Awi_service,
	Awi_selfcreate,
	Awi_open,
	Awi_init,
	&IC_POS.root,
	NULL,
	0, 0,
	-1,
	0x200b,
	{ 0, 0, 120, 50 },
	{ 0, 0, 0, 0 },
	{ 0, 0, 0, 0 },
	{ -1, -1, -1, -1 },
	0, 0,
	0xf8f8,
	TEXT_24,
	TEXT_002,
	10000,
	0,
	0,
	-1,
	NULL,
	NULL,
	Awi_keys,
	Awi_obchange,
	Awi_redraw,
	Awi_topped,
	Awi_closed,
	Awi_fulled,
	Awi_arrowed,
	Awi_hslid,
	Awi_vslid,
	Awi_sized,
	Awi_moved,
	Awi_iconify,
	Awi_uniconify,
	Awi_gemscript,
	NULL,
	NULL
};
