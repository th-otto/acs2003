* Object File "acstools.lib"



          .TEXT   

          .MODULE LOCAL

GetMonth:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A4
T000008:   CLR.W     D3
T00000a:   LEA.L     ,A2
T000010:   MOVEQ.L   #$03,D0
T000012:   MOVEA.L   A2,A1
T000014:   MOVEA.L   A3,A0
T000016:   JSR       Ast_incmp
T00001c:   TST.W     D0
T00001e:   BNE.B     T000022
T000020:   MOVEQ.L   #$01,D3
T000022:   MOVEQ.L   #$03,D0
T000024:   LEA.L     $0004(A2),A1
T000028:   MOVEA.L   A3,A0
T00002a:   JSR       Ast_incmp
T000030:   TST.W     D0
T000032:   BNE.B     T000036
T000034:   MOVEQ.L   #$02,D3
T000036:   MOVEQ.L   #$03,D0
T000038:   LEA.L     $0008(A2),A1
T00003c:   MOVEA.L   A3,A0
T00003e:   JSR       Ast_incmp
T000044:   TST.W     D0
T000046:   BNE.B     T00004A
T000048:   MOVEQ.L   #$03,D3
T00004a:   MOVEQ.L   #$03,D0
T00004c:   LEA.L     $000C(A2),A1
T000050:   MOVEA.L   A3,A0
T000052:   JSR       Ast_incmp
T000058:   TST.W     D0
T00005a:   BNE.B     T00005E
T00005c:   MOVEQ.L   #$04,D3
T00005e:   MOVEQ.L   #$03,D0
T000060:   LEA.L     $0010(A2),A1
T000064:   MOVEA.L   A3,A0
T000066:   JSR       Ast_incmp
T00006c:   TST.W     D0
T00006e:   BNE.B     T000072
T000070:   MOVEQ.L   #$05,D3
T000072:   MOVEQ.L   #$03,D0
T000074:   LEA.L     $0014(A2),A1
T000078:   MOVEA.L   A3,A0
T00007a:   JSR       Ast_incmp
T000080:   TST.W     D0
T000082:   BNE.B     T000086
T000084:   MOVEQ.L   #$06,D3
T000086:   MOVEQ.L   #$03,D0
T000088:   LEA.L     $0018(A2),A1
T00008c:   MOVEA.L   A3,A0
T00008e:   JSR       Ast_incmp
T000094:   TST.W     D0
T000096:   BNE.B     T00009A
T000098:   MOVEQ.L   #$07,D3
T00009a:   MOVEQ.L   #$03,D0
T00009c:   LEA.L     $001C(A2),A1
T0000a0:   MOVEA.L   A3,A0
T0000a2:   JSR       Ast_incmp
T0000a8:   TST.W     D0
T0000aa:   BNE.B     T0000AE
T0000ac:   MOVEQ.L   #$08,D3
T0000ae:   MOVEQ.L   #$03,D0
T0000b0:   LEA.L     $0020(A2),A1
T0000b4:   MOVEA.L   A3,A0
T0000b6:   JSR       Ast_incmp
T0000bc:   TST.W     D0
T0000be:   BNE.B     T0000C2
T0000c0:   MOVEQ.L   #$09,D3
T0000c2:   MOVEQ.L   #$03,D0
T0000c4:   LEA.L     $0024(A2),A1
T0000c8:   MOVEA.L   A3,A0
T0000ca:   JSR       Ast_incmp
T0000d0:   TST.W     D0
T0000d2:   BNE.B     T0000D6
T0000d4:   MOVEQ.L   #$0A,D3
T0000d6:   MOVEQ.L   #$03,D0
T0000d8:   LEA.L     $0028(A2),A1
T0000dc:   MOVEA.L   A3,A0
T0000de:   JSR       Ast_incmp
T0000e4:   TST.W     D0
T0000e6:   BNE.B     T0000EA
T0000e8:   MOVEQ.L   #$0B,D3
T0000ea:   MOVEQ.L   #$03,D0
T0000ec:   LEA.L     $002C(A2),A1
T0000f0:   MOVEA.L   A3,A0
T0000f2:   JSR       Ast_incmp
T0000f8:   TST.W     D0
T0000fa:   BNE.B     T0000FE
T0000fc:   MOVEQ.L   #$0C,D3
T0000fe:   MOVE.L    A4,D0
T000100:   BEQ.B     T000112
T000102:   MOVE.W    D3,-(A7)
T000104:   LEA.L     $0030(A2),A1
T000108:   MOVEA.L   A4,A0
T00010a:   JSR       sprintf
T000110:   ADDQ.W    #2,A7
T000112:   MOVE.W    D3,D0
T000114:   MOVEM.L   (A7)+,D3/A2-A4
T000118:   RTS

          .ENDMOD


          .MODULE LOCAL

_ACSaboutme:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   LEA.L     lib_date,A2
T00000a:   MOVE.B    (A2),D0
T00000c:   BNE.B     T000064
T00000e:   LEA.L     -$000C(A2),A3
T000012:   MOVE.B    $0004(A3),D0
T000016:   EXT.W     D0
T000018:   JSR       isspace
T00001e:   TST.W     D0
T000020:   BEQ.B     T000026
T000022:   MOVEQ.L   #$30,D0
T000024:   BRA.B     T00002A
T000026:   MOVE.B    $0004(A3),D0
T00002a:   MOVE.B    D0,(A2)
T00002c:   MOVE.B    $0005(A3),$0001(A2)
T000032:   MOVE.B    #$2E,$0002(A2)
T000038:   LEA.L     $0003(A2),A1
T00003c:   MOVEA.L   A3,A0
T00003e:   BSR       GetMonth
T000042:   MOVE.B    #$2E,$0005(A2)
T000048:   MOVE.B    $0007(A3),$0006(A2)
T00004e:   MOVE.B    $0008(A3),$0007(A2)
T000054:   MOVE.B    $0009(A3),$0008(A2)
T00005a:   MOVE.B    $000A(A3),$0009(A2)
T000060:   CLR.B     $000A(A2)
T000064:   PEA.L     -$0074(A2)
T000068:   PEA.L     (A2)
T00006a:   PEA.L     -$0038(A2)
T00006e:   MOVEA.L   ACSblk,A0
T000074:   PEA.L     $0200(A0)
T000078:   LEA.L     -$0029(A2),A0
T00007c:   JSR       printf
T000082:   LEA.L     $0010(A7),A7
T000086:   MOVEA.L   (A7)+,A3
T000088:   MOVEA.L   (A7)+,A2
T00008a:   RTS

          .ENDMOD


          .MODULE LOCAL

_acs_boot:
T000000:   MOVE.W    $0446.W,D0
T000004:   EXT.L     D0
T000006:   RTS

          .ENDMOD


          .MODULE LOCAL

InitMagiC:
T000000:   MOVEA.L   ACSblk,A0
T000006:   LEA.L     $0A48(A0),A0
T00000a:   MOVE.L    #$4D616758,D0
T000010:   JSR       Ash_getcookie
T000016:   TST.W     D0
T000018:   BNE.B     T000024
T00001a:   MOVEA.L   ACSblk,A0
T000020:   CLR.L     $0A48(A0)
T000024:   CLR.W     D0
T000026:   RTS

          .ENDMOD


          .MODULE LOCAL

InitNAES:
T000000:   MOVEA.L   ACSblk,A0
T000006:   LEA.L     $0A4C(A0),A0
T00000a:   MOVE.L    #$6E414553,D0
T000010:   JSR       Ash_getcookie
T000016:   TST.W     D0
T000018:   BNE.B     T000024
T00001a:   MOVEA.L   ACSblk,A0
T000020:   CLR.L     $0A4C(A0)
T000024:   CLR.W     D0
T000026:   RTS

          .ENDMOD


          .MODULE LOCAL

InitScrap:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   LEA.L     ACSblk,A2
T00000a:   MOVEA.L   _globl,A1
T000010:   MOVEA.L   (A2),A0
T000012:   LEA.L     $0294(A0),A0
T000016:   JSR       mt_scrp_read
T00001c:   LEA.L     ,A3
T000022:   MOVEA.L   (A2),A0
T000024:   MOVE.B    $0294(A0),D0
T000028:   BNE.B     T00008E
T00002a:   LEA.L     $0035(A3),A0
T00002e:   JSR       Ash_getenv
T000034:   MOVEA.L   A0,A4
T000036:   MOVE.L    A4,D0
T000038:   BNE.B     T00005A
T00003a:   LEA.L     $003F(A3),A0
T00003e:   JSR       Ash_getenv
T000044:   MOVEA.L   A0,A4
T000046:   MOVE.L    A4,D0
T000048:   BNE.B     T00005A
T00004a:   LEA.L     $0047(A3),A0
T00004e:   JSR       Ash_getenv
T000054:   MOVEA.L   A0,A4
T000056:   MOVE.L    A4,D0
T000058:   BEQ.B     T00006A
T00005a:   MOVEA.L   A4,A1
T00005c:   MOVEA.L   (A2),A0
T00005e:   LEA.L     $0294(A0),A0
T000062:   JSR       strcpy
T000068:   BRA.B     T00008E
T00006a:   LEA.L     $0050(A3),A1
T00006e:   MOVEA.L   (A2),A0
T000070:   LEA.L     $0294(A0),A0
T000074:   JSR       strcpy
T00007a:   LEA.L     _acs_boot(PC),A0
T00007e:   JSR       Supexec
T000084:   ADD.B     #$41,D0
T000088:   MOVEA.L   (A2),A0
T00008a:   MOVE.B    D0,$0294(A0)
T00008e:   MOVEA.L   (A2),A0
T000090:   MOVE.B    $0294(A0),D0
T000094:   EXT.W     D0
T000096:   JSR       toupper
T00009c:   CMP.W     #$0043,D0
T0000a0:   BLT.B     T000102
T0000a2:   MOVEA.L   (A2),A0
T0000a4:   LEA.L     $0294(A0),A0
T0000a8:   JSR       strlen
T0000ae:   MOVE.L    D0,D3
T0000b0:   TST.L     D3
T0000b2:   BLE.B     T000102
T0000b4:   SUBQ.L    #1,D3
T0000b6:   MOVEA.L   (A2),A0
T0000b8:   ADDA.L    D3,A0
T0000ba:   CMPI.B    #$5C,$0294(A0)
T0000c0:   BNE.B     T0000C6
T0000c2:   CLR.B     $0294(A0)
T0000c6:   MOVEA.L   (A2),A0
T0000c8:   LEA.L     $0294(A0),A0
T0000cc:   JSR       Dcreate
T0000d2:   MOVE.L    D0,D3
T0000d4:   LEA.L     $005B(A3),A1
T0000d8:   MOVEA.L   (A2),A0
T0000da:   LEA.L     $0294(A0),A0
T0000de:   JSR       strcat
T0000e4:   TST.L     D3
T0000e6:   BPL.B     T0000EE
T0000e8:   MOVEQ.L   #-$24,D0
T0000ea:   CMP.L     D3,D0
T0000ec:   BNE.B     T000112
T0000ee:   MOVEA.L   _globl,A1
T0000f4:   MOVEA.L   (A2),A0
T0000f6:   LEA.L     $0294(A0),A0
T0000fa:   JSR       mt_scrp_write
T000100:   BRA.B     T000112
T000102:   MOVEA.L   _globl,A1
T000108:   LEA.L     $0003(A3),A0
T00010c:   JSR       mt_scrp_write
T000112:   CLR.W     D0
T000114:   MOVEM.L   (A7)+,D3/A2-A4
T000118:   RTS

          .ENDMOD


          .MODULE LOCAL

InitPaths:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   LEA.L     ACSblk,A2
T00000a:   CLR.B     D0
T00000c:   MOVEA.L   (A2),A0
T00000e:   MOVE.B    D0,$0200(A0)
T000012:   MOVEA.L   (A2),A0
T000014:   MOVE.B    D0,$0180(A0)
T000018:   MOVEA.L   (A2),A0
T00001a:   MOVE.B    D0,(A0)
T00001c:   MOVEA.L   (A2),A0
T00001e:   MOVE.B    D0,$0080(A0)
T000022:   MOVEA.L   (A2),A0
T000024:   MOVE.B    D0,$0100(A0)
T000028:   MOVE.L    _globl,-(A7)
T00002e:   MOVEA.L   (A2),A1
T000030:   LEA.L     $0100(A1),A1
T000034:   MOVEA.L   (A2),A0
T000036:   JSR       mt_shel_read
T00003c:   ADDQ.W    #4,A7
T00003e:   TST.W     D0
T000040:   BNE.B     T000048
T000042:   MOVEQ.L   #-$01,D0
T000044:   BRA       T000244
T000048:   MOVEA.L   (A2),A0
T00004a:   MOVE.B    $0100(A0),D0
T00004e:   BEQ.B     T00006C
T000050:   EXT.W     D0
T000052:   ADDA.W    D0,A0
T000054:   CLR.B     $0101(A0)
T000058:   MOVEA.L   (A2),A1
T00005a:   LEA.L     $0101(A1),A1
T00005e:   MOVEA.L   (A2),A0
T000060:   LEA.L     $0100(A0),A0
T000064:   JSR       strcpy
T00006a:   BRA.B     T000090
T00006c:   MOVEA.L   (A2),A0
T00006e:   CMPI.W    #$0001,$0414(A0)
T000074:   BLE.B     T000090
T000076:   MOVEA.L   $0416(A0),A1
T00007a:   MOVEA.L   $0004(A1),A0
T00007e:   MOVE.B    (A0),D0
T000080:   BEQ.B     T000090
T000082:   MOVEA.L   A0,A1
T000084:   MOVEA.L   (A2),A0
T000086:   LEA.L     $0100(A0),A0
T00008a:   JSR       strcpy
T000090:   MOVEQ.L   #$2F,D0
T000092:   MOVEA.L   (A2),A0
T000094:   LEA.L     $0100(A0),A0
T000098:   JSR       strrchr
T00009e:   MOVEA.L   A0,A3
T0000a0:   MOVE.L    A3,D0
T0000a2:   BEQ.B     T0000B8
T0000a4:   LEA.L     $0001(A3),A1
T0000a8:   MOVEA.L   (A2),A0
T0000aa:   LEA.L     $0180(A0),A0
T0000ae:   JSR       strcpy
T0000b4:   CLR.B     (A3)
T0000b6:   BRA.B     T0000BE
T0000b8:   MOVEA.L   (A2),A0
T0000ba:   CLR.B     $0180(A0)
T0000be:   MOVEA.L   (A2),A1
T0000c0:   MOVEA.L   (A2),A0
T0000c2:   LEA.L     $0080(A0),A0
T0000c6:   JSR       strcpy
T0000cc:   MOVEQ.L   #$5C,D0
T0000ce:   MOVEA.L   (A2),A0
T0000d0:   LEA.L     $0080(A0),A0
T0000d4:   JSR       strrchr
T0000da:   MOVEA.L   A0,A3
T0000dc:   LEA.L     ,A4
T0000e2:   MOVE.L    A3,D0
T0000e4:   BNE.B     T000132
T0000e6:   MOVEA.L   (A2),A0
T0000e8:   MOVE.B    $0080(A0),D1
T0000ec:   BEQ.B     T00010E
T0000ee:   CMPI.B    #$3A,$0081(A0)
T0000f4:   BNE.B     T00010E
T0000f6:   MOVEA.L   A0,A1
T0000f8:   LEA.L     $0082(A1),A1
T0000fc:   LEA.L     $0202(A0),A0
T000100:   JSR       strcpy
T000106:   MOVEA.L   (A2),A0
T000108:   CLR.B     $0082(A0)
T00010c:   BRA.B     T000144
T00010e:   MOVEA.L   (A2),A1
T000110:   LEA.L     $0080(A1),A1
T000114:   MOVEA.L   (A2),A0
T000116:   LEA.L     $0200(A0),A0
T00011a:   JSR       strcpy
T000120:   LEA.L     $005B(A4),A1
T000124:   MOVEA.L   (A2),A0
T000126:   LEA.L     $0080(A0),A0
T00012a:   JSR       strcpy
T000130:   BRA.B     T000144
T000132:   ADDQ.W    #1,A3
T000134:   MOVEA.L   A3,A1
T000136:   MOVEA.L   (A2),A0
T000138:   LEA.L     $0200(A0),A0
T00013c:   JSR       strcpy
T000142:   CLR.B     (A3)
T000144:   MOVEQ.L   #$2E,D0
T000146:   MOVEA.L   (A2),A0
T000148:   LEA.L     $0200(A0),A0
T00014c:   JSR       strrchr
T000152:   MOVEA.L   A0,A3
T000154:   MOVE.L    A3,D0
T000156:   BEQ.B     T00015A
T000158:   CLR.B     (A0)
T00015a:   MOVEA.L   (A2),A0
T00015c:   CLR.B     $0214(A0)
T000160:   LEA.L     $005D(A4),A0
T000164:   JSR       Ash_getenv
T00016a:   MOVEA.L   A0,A3
T00016c:   MOVE.L    A3,D0
T00016e:   BNE.B     T000190
T000170:   LEA.L     $0062(A4),A0
T000174:   JSR       Ash_getenv
T00017a:   MOVEA.L   A0,A3
T00017c:   MOVE.L    A3,D0
T00017e:   BNE.B     T000190
T000180:   LEA.L     $0069(A4),A0
T000184:   JSR       Ash_getenv
T00018a:   MOVEA.L   A0,A3
T00018c:   MOVE.L    A3,D0
T00018e:   BEQ.B     T0001F8
T000190:   MOVEA.L   A3,A1
T000192:   MOVEA.L   (A2),A0
T000194:   LEA.L     $0214(A0),A0
T000198:   JSR       strcpy
T00019e:   MOVEQ.L   #$5C,D0
T0001a0:   MOVEA.L   (A2),A0
T0001a2:   LEA.L     $0214(A0),A0
T0001a6:   JSR       strrchr
T0001ac:   MOVEA.L   A0,A3
T0001ae:   MOVE.L    A3,D0
T0001b0:   BEQ.B     T0001BA
T0001b2:   MOVE.B    $0001(A3),D1
T0001b6:   BNE.B     T0001BA
T0001b8:   CLR.B     (A0)
T0001ba:   MOVEA.L   (A2),A0
T0001bc:   MOVE.B    $0214(A0),D0
T0001c0:   EXT.W     D0
T0001c2:   JSR       toupper
T0001c8:   CMP.W     #$0043,D0
T0001cc:   BLT.B     T0001E0
T0001ce:   MOVEA.L   (A2),A0
T0001d0:   LEA.L     $0214(A0),A0
T0001d4:   JSR       Af_length
T0001da:   MOVEQ.L   #-$01,D1
T0001dc:   CMP.L     D0,D1
T0001de:   BEQ.B     T0001E8
T0001e0:   MOVEA.L   (A2),A0
T0001e2:   CLR.B     $0214(A0)
T0001e6:   BRA.B     T0001F8
T0001e8:   LEA.L     $005B(A4),A1
T0001ec:   MOVEA.L   (A2),A0
T0001ee:   LEA.L     $0214(A0),A0
T0001f2:   JSR       strcat
T0001f8:   MOVEA.L   (A2),A0
T0001fa:   MOVE.B    $0214(A0),D0
T0001fe:   BNE.B     T000210
T000200:   MOVEA.L   A0,A1
T000202:   LEA.L     $0080(A1),A1
T000206:   LEA.L     $0214(A0),A0
T00020a:   JSR       strcpy
T000210:   MOVEA.L   (A2),A0
T000212:   MOVE.B    $0214(A0),D0
T000216:   BNE.B     T000242
T000218:   LEA.L     $006D(A4),A1
T00021c:   LEA.L     $0214(A0),A0
T000220:   JSR       strcpy
T000226:   JSR       Dgetdrv
T00022c:   JSR       Dsetdrv
T000232:   AND.L     #$00000004,D0
T000238:   BEQ.B     T000242
T00023a:   MOVEA.L   (A2),A0
T00023c:   MOVE.B    #$43,$0214(A0)
T000242:   CLR.W     D0
T000244:   MOVEM.L   (A7)+,A2-A4
T000248:   RTS

          .ENDMOD


          .MODULE LOCAL

InitCfg:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     ACSconfig,A2
T000008:   MOVEA.L   (A2),A0
T00000a:   JSR       Ast_isEmpty
T000010:   TST.W     D0
T000012:   BEQ.B     T000026
T000014:   MOVEA.L   ACSblk,A0
T00001a:   LEA.L     $0200(A0),A0
T00001e:   JSR       Af_cfgfile
T000024:   MOVE.L    A0,(A2)
T000026:   MOVEA.L   ACSblk,A0
T00002c:   MOVE.L    $042E(A0),D0
T000030:   BNE.B     T000046
T000032:   MOVEA.L   A2,A0
T000034:   MOVEQ.L   #$01,D0
T000036:   JSR       Acfg_create
T00003c:   MOVEA.L   ACSblk,A1
T000042:   MOVE.L    A0,$042E(A1)
T000046:   CLR.W     D0
T000048:   MOVEA.L   (A7)+,A2
T00004a:   RTS

          .ENDMOD


          .MODULE GLOBAL

ACSinitialize:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   LEA.L     ACSblk,A2
T00000a:   JSR       INmemory
T000010:   ADDQ.W    #1,D0
T000012:   BEQ       T00011E
T000016:   MOVEA.L   (A2),A0
T000018:   MOVEA.L   $0426(A0),A0
T00001c:   JSR       (A0)
T00001e:   TST.W     D0
T000020:   BNE       T000118
T000024:   BSR       InitMagiC
T000028:   TST.W     D0
T00002a:   BNE       T000118
T00002e:   BSR       InitNAES
T000032:   TST.W     D0
T000034:   BNE       T000118
T000038:   BSR       InitScrap
T00003c:   TST.W     D0
T00003e:   BNE       T000118
T000042:   LEA.L     +$00000071,A0
T000048:   JSR       Ash_getenv
T00004e:   MOVEA.L   A0,A3
T000050:   MOVE.L    A3,D0
T000052:   BEQ.B     T000058
T000054:   MOVE.B    (A0),D0
T000056:   BNE.B     T00006E
T000058:   LEA.L     +$00000074,A0
T00005e:   JSR       Ash_getenv
T000064:   MOVEA.L   A0,A3
T000066:   MOVE.L    A3,D0
T000068:   BEQ.B     T00007C
T00006a:   MOVE.B    (A0),D0
T00006c:   BEQ.B     T00007C
T00006e:   MOVEA.L   A3,A1
T000070:   MOVEA.L   (A2),A0
T000072:   LEA.L     $0314(A0),A0
T000076:   JSR       strcpy
T00007c:   MOVEQ.L   #$01,D0
T00007e:   JSR       Pdomain
T000084:   BSR       InitPaths
T000088:   TST.W     D0
T00008a:   BNE       T000118
T00008e:   MOVEA.L   ACSconfig+$00000012,A0
T000094:   JSR       Ast_isEmpty
T00009a:   TST.W     D0
T00009c:   BNE.B     T0000B0
T00009e:   MOVEA.L   ACSconfig+$00000012,A1
T0000a4:   MOVEA.L   (A2),A0
T0000a6:   LEA.L     $0200(A0),A0
T0000aa:   JSR       strcpy
T0000b0:   BSR       InitCfg
T0000b4:   JSR       Alu_create
T0000ba:   MOVEA.L   (A2),A1
T0000bc:   MOVE.L    A0,$0A44(A1)
T0000c0:   MOVE.L    A0,D0
T0000c2:   BEQ.B     T000118
T0000c4:   MOVE.L    D0,-(A7)
T0000c6:   MOVEA.L   (A2),A1
T0000c8:   MOVE.L    $0436(A1),-(A7)
T0000cc:   PEA.L     $0544(A1)
T0000d0:   PEA.L     $0444(A1)
T0000d4:   PEA.L     $043A(A1)
T0000d8:   MOVEA.L   $0416(A1),A1
T0000dc:   MOVEA.L   (A2),A3
T0000de:   MOVE.W    $0414(A3),D0
T0000e2:   MOVEA.L   A3,A0
T0000e4:   LEA.L     $0644(A0),A0
T0000e8:   JSR       Ash_cmdParsen
T0000ee:   LEA.L     $0014(A7),A7
T0000f2:   MOVE.W    D0,D3
T0000f4:   TST.W     D0
T0000f6:   BNE.B     T000122
T0000f8:   MOVEA.L   (A2),A0
T0000fa:   MOVE.L    $0432(A0),D1
T0000fe:   BEQ.B     T000122
T000100:   MOVEA.L   D1,A0
T000102:   JSR       (A0)
T000104:   TST.W     D0
T000106:   BEQ.B     T000122
T000108:   MOVEA.L   (A2),A0
T00010a:   MOVE.L    $042E(A0),D0
T00010e:   BEQ.B     T000118
T000110:   MOVEA.L   D0,A0
T000112:   JSR       Acfg_delete
T000118:   JSR       TRmemory
T00011e:   MOVEQ.L   #-$01,D0
T000120:   BRA.B     T00012C
T000122:   MOVEA.L   (A2),A0
T000124:   MOVEA.L   $042A(A0),A0
T000128:   JSR       (A0)
T00012a:   MOVE.W    D0,D3
T00012c:   MOVEM.L   (A7)+,D3/A2-A3
T000130:   RTS

          .ENDMOD


          .MODULE LOCAL

dummy:
T000000:   RTS

          .ENDMOD


          .MODULE LOCAL

ok:
T000000:   CLR.W     D0
T000002:   RTS

          .ENDMOD


          .MODULE LOCAL

_ACScmderror:
T000000:   MOVEQ.L   #$01,D0
T000002:   RTS

          .ENDMOD


          .MODULE LOCAL

_ACSwrgOpt:
T000000:   EXT.W     D0
T000002:   MOVE.W    D0,-(A7)
T000004:   LEA.L     +$00000078,A0
T00000a:   JSR       printf
T000010:   ADDQ.W    #2,A7
T000012:   MOVEQ.L   #$01,D0
T000014:   RTS

          .ENDMOD


          .MODULE GLOBAL

acs_call:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEQ.L   #-$01,D3
T000006:   LEA.L     ACSblk,A2
T00000c:   MOVEA.L   (A2),A3
T00000e:   MOVE.W    D0,$0414(A3)
T000012:   MOVEA.L   (A2),A3
T000014:   MOVE.L    A0,$0416(A3)
T000018:   MOVEA.L   (A2),A3
T00001a:   MOVE.L    A1,$041A(A3)
T00001e:   BSR       ACSinitialize
T000022:   TST.W     D0
T000024:   BNE.B     T000040
T000026:   MOVEA.L   (A2),A0
T000028:   MOVEA.L   $0422(A0),A0
T00002c:   JSR       (A0)
T00002e:   MOVE.L    ACSconfig+$00000030,D0
T000034:   BEQ.B     T00003E
T000036:   MOVEA.L   D0,A0
T000038:   JSR       (A0)
T00003a:   MOVE.W    D0,D3
T00003c:   BRA.B     T000040
T00003e:   CLR.W     D3
T000040:   MOVEA.L   (A2),A0
T000042:   MOVE.L    $042E(A0),D0
T000046:   BEQ.B     T000050
T000048:   MOVEA.L   D0,A0
T00004a:   JSR       Acfg_delete
T000050:   JSR       TRmemory
T000056:   MOVE.W    D3,D0
T000058:   MOVEM.L   (A7)+,D3/A2-A3
T00005c:   RTS

          .ENDMOD


          .MODULE GLOBAL

get_acsblk:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   LEA.L     ACSblk,A2
T00000a:   MOVE.L    #_ACSblk,(A2)
T000010:   MOVE.L    #$00000A50,D1
T000016:   CLR.W     D0
T000018:   MOVEA.L   (A2),A0
T00001a:   JSR       memset
T000020:   MOVEA.L   (A2),A0
T000022:   CLR.L     $042E(A0)
T000026:   MOVEA.L   (A2),A0
T000028:   CLR.W     $0414(A0)
T00002c:   MOVEA.L   (A2),A0
T00002e:   CLR.L     $0416(A0)
T000032:   MOVEA.L   (A2),A0
T000034:   CLR.L     $041A(A0)
T000038:   MOVEA.L   (A2),A0
T00003a:   MOVE.L    #Ash_error,$041E(A0)
T000042:   MOVEA.L   (A2),A0
T000044:   MOVE.L    #_ACScmderror,$0432(A0)
T00004c:   LEA.L     ACSconfig,A3
T000052:   MOVE.L    $0034(A3),D0
T000056:   BEQ.B     T00005C
T000058:   MOVEA.L   D0,A0
T00005a:   BRA.B     T000060
T00005c:   LEA.L     _ACSaboutme(PC),A0
T000060:   MOVEA.L   (A2),A1
T000062:   MOVE.L    A0,$0422(A1)
T000066:   MOVE.L    $0028(A3),D0
T00006a:   BEQ.B     T000070
T00006c:   MOVEA.L   D0,A1
T00006e:   BRA.B     T000074
T000070:   LEA.L     ok(PC),A1
T000074:   MOVEA.L   (A2),A0
T000076:   MOVE.L    A1,$0426(A0)
T00007a:   MOVE.L    $002C(A3),D0
T00007e:   BEQ.B     T000084
T000080:   MOVEA.L   D0,A0
T000082:   BRA.B     T000088
T000084:   LEA.L     ok(PC),A0
T000088:   MOVEA.L   (A2),A1
T00008a:   MOVE.L    A0,$042A(A1)
T00008e:   MOVE.L    $0016(A3),D0
T000092:   BEQ.B     T000098
T000094:   MOVEA.L   D0,A1
T000096:   BRA.B     T00009C
T000098:   LEA.L     _ACSwrgOpt(PC),A1
T00009c:   MOVEA.L   (A2),A0
T00009e:   MOVE.L    A1,$0436(A0)
T0000a2:   LEA.L     ,A4
T0000a8:   LEA.L     $008F(A4),A1
T0000ac:   MOVEA.L   (A2),A0
T0000ae:   LEA.L     $0314(A0),A0
T0000b2:   JSR       strcpy
T0000b8:   LEA.L     $00B2(A4),A1
T0000bc:   MOVEA.L   (A2),A0
T0000be:   LEA.L     $043A(A0),A0
T0000c2:   JSR       strcpy
T0000c8:   MOVEA.L   $001C(A3),A0
T0000cc:   JSR       Ast_isEmpty
T0000d2:   TST.W     D0
T0000d4:   BNE.B     T0000E8
T0000d6:   MOVEA.L   $001C(A3),A1
T0000da:   MOVEA.L   (A2),A0
T0000dc:   LEA.L     $043A(A0),A0
T0000e0:   JSR       strcpy
T0000e6:   BRA.B     T0000F8
T0000e8:   LEA.L     $0003(A4),A1
T0000ec:   MOVEA.L   (A2),A0
T0000ee:   LEA.L     $043A(A0),A0
T0000f2:   JSR       strcpy
T0000f8:   MOVEA.L   $0020(A3),A0
T0000fc:   JSR       Ast_isEmpty
T000102:   TST.W     D0
T000104:   BNE.B     T000118
T000106:   MOVEA.L   $0020(A3),A1
T00010a:   MOVEA.L   (A2),A0
T00010c:   LEA.L     $0444(A0),A0
T000110:   JSR       strcpy
T000116:   BRA.B     T000128
T000118:   LEA.L     $0003(A4),A1
T00011c:   MOVEA.L   (A2),A0
T00011e:   LEA.L     $0444(A0),A0
T000122:   JSR       strcpy
T000128:   MOVEA.L   $0024(A3),A0
T00012c:   JSR       Ast_isEmpty
T000132:   TST.W     D0
T000134:   BNE.B     T000148
T000136:   MOVEA.L   $0024(A3),A1
T00013a:   MOVEA.L   (A2),A0
T00013c:   LEA.L     $0544(A0),A0
T000140:   JSR       strcpy
T000146:   BRA.B     T000158
T000148:   LEA.L     $0003(A4),A1
T00014c:   MOVEA.L   (A2),A0
T00014e:   LEA.L     $0544(A0),A0
T000152:   JSR       strcpy
T000158:   MOVEA.L   (A2),A0
T00015a:   MOVEM.L   (A7)+,A2-A4
T00015e:   RTS

          .ENDMOD


          .MODULE GLOBAL

main:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   MOVEA.L   A0,A3
T000008:   MOVEA.L   A1,A2
T00000a:   BSR       get_acsblk
T00000e:   MOVEA.L   A2,A1
T000010:   MOVEA.L   A3,A0
T000012:   MOVE.W    D3,D0
T000014:   BSR       acs_call
T000018:   MOVEM.L   (A7)+,D3/A2-A3
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

INmemory:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   LEA.L     freeBlockList,A2
T00000a:   MOVE.W    -$0066(A2),D0
T00000e:   ADDQ.W    #1,-$0066(A2)
T000012:   TST.W     D0
T000014:   BNE.B     T00005E
T000016:   CLR.W     D3
T000018:   BRA.B     T000040
T00001a:   MOVE.W    D3,D1
T00001c:   EXT.L     D1
T00001e:   MOVE.L    D1,D0
T000020:   LSL.L     #2,D0
T000022:   ADD.L     D1,D0
T000024:   LSL.L     #2,D0
T000026:   MOVEA.L   (A2),A0
T000028:   CLR.W     $0A(A0,D0.L)
T00002c:   MOVEA.L   (A2),A0
T00002e:   CLR.W     $0C(A0,D0.L)
T000032:   MOVEA.L   (A2),A0
T000034:   CLR.W     $0E(A0,D0.L)
T000038:   MOVEA.L   (A2),A0
T00003a:   CLR.L     $10(A0,D0.L)
T00003e:   ADDQ.W    #1,D3
T000040:   CMP.W     $0004(A2),D3
T000044:   BLT.B     T00001A
T000046:   MOVE.W    $0004(A2),D0
T00004a:   BLE.B     T00005E
T00004c:   LEA.L     sortFreeMemList,A1
T000052:   MOVEQ.L   #$14,D1
T000054:   EXT.L     D0
T000056:   MOVEA.L   (A2),A0
T000058:   JSR       qsort
T00005e:   CLR.W     D0
T000060:   MOVEA.L   (A7)+,A2
T000062:   MOVE.W    (A7)+,D3
T000064:   RTS

          .ENDMOD


          .MODULE GLOBAL

TRmemory:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   LEA.L     freeBlockList,A2
T00000a:   SUBQ.W    #1,-$0066(A2)
T00000e:   BNE.B     T000066
T000010:   CLR.W     D3
T000012:   BRA.B     T000042
T000014:   MOVE.W    D3,D1
T000016:   EXT.L     D1
T000018:   MOVE.L    D1,D0
T00001a:   LSL.L     #2,D0
T00001c:   ADD.L     D1,D0
T00001e:   LSL.L     #2,D0
T000020:   MOVEA.L   (A2),A3
T000022:   ADDA.L    D0,A3
T000024:   BRA.B     T00003A
T000026:   MOVEA.L   $0010(A3),A4
T00002a:   MOVEA.L   $0010(A3),A0
T00002e:   MOVE.L    (A0),$0010(A3)
T000032:   MOVEA.L   A4,A0
T000034:   JSR       Ax_free
T00003a:   MOVE.L    $0010(A3),D0
T00003e:   BNE.B     T000026
T000040:   ADDQ.W    #1,D3
T000042:   CMP.W     $0004(A2),D3
T000046:   BLT.B     T000014
T000048:   MOVEA.L   (A2),A0
T00004a:   CMPA.L    #_freeBlockList,A0
T000050:   BEQ.B     T000058
T000052:   JSR       Ax_free
T000058:   MOVE.L    $0006(A2),D0
T00005c:   BEQ.B     T000066
T00005e:   MOVEA.L   D0,A0
T000060:   JSR       Ax_free
T000066:   MOVEM.L   (A7)+,D3/A2-A4
T00006a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_malloc:
T000000:   MOVE.L    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.L    D0,D3
T000006:   JSR       RecycleFreeBlocks
T00000c:   MOVEA.L   A0,A2
T00000e:   MOVE.L    A2,D0
T000010:   BNE.B     T00001C
T000012:   MOVE.L    D3,D0
T000014:   JSR       _malloc
T00001a:   MOVEA.L   A0,A2
T00001c:   MOVEA.L   A2,A0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   MOVE.L    (A7)+,D3
T000022:   RTS

          .ENDMOD


          .MODULE LOCAL

_malloc:
T000000:   JSR       malloc
T000006:   MOVE.L    A0,D0
T000008:   BNE.B     T00000E
T00000a:   SUBA.L    A0,A0
T00000c:   NOP
T00000e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_free:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   MOVE.L    A2,D0
T000006:   BEQ.B     T000016
T000008:   CMP.L     #null_string,D0
T00000e:   BEQ.B     T000016
T000010:   JSR       free
T000016:   MOVEA.L   (A7)+,A2
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_glmalloc:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVE.L    D0,D4
T000006:   JSR       Mxmask
T00000c:   MOVE.W    D0,D3
T00000e:   TST.W     D0
T000010:   BEQ.B     T000022
T000012:   MOVEQ.L   #$23,D1
T000014:   AND.W     D0,D1
T000016:   MOVE.L    D4,D0
T000018:   JSR       Mxalloc
T00001e:   MOVEA.L   A0,A2
T000020:   BRA.B     T00002C
T000022:   MOVE.L    D4,D0
T000024:   JSR       Malloc
T00002a:   MOVEA.L   A0,A2
T00002c:   MOVEA.L   A2,A0
T00002e:   MOVEM.L   (A7)+,D3-D4/A2
T000032:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_glfree:
T000000:   JSR       Mfree
T000006:   RTS

          .ENDMOD


          .MODULE LOCAL

handle_sigbus:
T000000:   MOVE.L    D2,-(A7)
T000002:   JSR       Psigreturn
T000008:   MOVEQ.L   #$01,D0
T00000a:   LEA.L     check,A0
T000010:   JSR       longjmp
T000016:   MOVE.L    (A7)+,D2
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_memCheck:
T000000:   MOVEM.L   D3-D7/A2,-(A7)
T000004:   SUBQ.W    #4,A7
T000006:   MOVE.L    D0,D6
T000008:   MOVE.W    D1,D7
T00000a:   MOVEA.L   A0,A2
T00000c:   LEA.L     handle_sigbus(PC),A0
T000010:   MOVEQ.L   #$0A,D0
T000012:   JSR       Psignal
T000018:   MOVE.L    D0,D3
T00001a:   MOVEQ.L   #-$20,D1
T00001c:   CMP.L     D0,D1
T00001e:   BEQ.B     T00003E
T000020:   LEA.L     handle_sigbus(PC),A0
T000024:   MOVEQ.L   #$0B,D0
T000026:   JSR       Psignal
T00002c:   MOVE.L    D0,(A7)
T00002e:   MOVEQ.L   #-$20,D1
T000030:   CMP.L     D0,D1
T000032:   BNE.B     T000044
T000034:   MOVEA.L   D3,A0
T000036:   MOVEQ.L   #$0A,D0
T000038:   JSR       Psignal
T00003e:   MOVEQ.L   #$01,D0
T000040:   BRA       T0000C0
T000044:   MOVEQ.L   #$01,D5
T000046:   LEA.L     check,A0
T00004c:   JSR       setjmp
T000052:   TST.W     D0
T000054:   BEQ.B     T00005A
T000056:   CLR.W     D5
T000058:   BRA.B     T0000AA
T00005a:   MOVEQ.L   #-$01,D1
T00005c:   AND.W     D6,D1
T00005e:   ADDQ.W    #2,D1
T000060:   BEQ.B     T00007C
T000062:   SUBQ.W    #1,D1
T000064:   BEQ.B     T000068
T000066:   BRA.B     T000096
T000068:   MOVEQ.L   #$41,D0
T00006a:   BRA.B     T000076
T00006c:   MOVE.B    (A2),D0
T00006e:   TST.W     D7
T000070:   BEQ.B     T000074
T000072:   MOVE.B    D0,(A2)
T000074:   ADDQ.W    #1,A2
T000076:   TST.B     D0
T000078:   BNE.B     T00006C
T00007a:   BRA.B     T0000AA
T00007c:   MOVEQ.L   #$41,D0
T00007e:   BRA.B     T00008A
T000080:   MOVE.B    (A2),D0
T000082:   TST.W     D7
T000084:   BEQ.B     T000088
T000086:   MOVE.B    D0,(A2)
T000088:   ADDQ.W    #1,A2
T00008a:   TST.B     D0
T00008c:   BNE.B     T000080
T00008e:   MOVE.B    -$0001(A2),D1
T000092:   BNE.B     T000080
T000094:   BRA.B     T0000AA
T000096:   MOVEQ.L   #$00,D4
T000098:   BRA.B     T0000A6
T00009a:   MOVE.B    (A2),D0
T00009c:   TST.W     D7
T00009e:   BEQ.B     T0000A2
T0000a0:   MOVE.B    D0,(A2)
T0000a2:   ADDQ.L    #1,D4
T0000a4:   ADDQ.W    #1,A2
T0000a6:   CMP.L     D4,D6
T0000a8:   BGT.B     T00009A
T0000aa:   MOVEA.L   D3,A0
T0000ac:   MOVEQ.L   #$0A,D0
T0000ae:   JSR       Psignal
T0000b4:   MOVEA.L   (A7),A0
T0000b6:   MOVEQ.L   #$0B,D0
T0000b8:   JSR       Psignal
T0000be:   MOVE.W    D5,D0
T0000c0:   ADDQ.W    #4,A7
T0000c2:   MOVEM.L   (A7)+,D3-D7/A2
T0000c6:   RTS

          .ENDMOD


          .MODULE LOCAL

sortFreeMemList:
T000000:   MOVE.L    (A0),D0
T000002:   CMP.L     (A1),D0
T000004:   BEQ.B     T000010
T000006:   MOVE.W    $0002(A0),D0
T00000a:   SUB.W     $0002(A1),D0
T00000e:   RTS
T000010:   MOVE.W    $0008(A1),D0
T000014:   SUB.W     $0008(A0),D0
T000018:   RTS

          .ENDMOD


          .MODULE LOCAL

searchFreeMemList:
T000000:   MOVE.W    $0002(A0),D0
T000004:   SUB.W     $0002(A1),D0
T000008:   RTS

          .ENDMOD


          .MODULE LOCAL

RecycleFreeBlocks:
T000000:   MOVE.L    A2,-(A7)
T000002:   SUBQ.W    #4,A7
T000004:   MOVE.L    D0,(A7)
T000006:   SUBA.L    A2,A2
T000008:   MOVE.W    freeBlockListAnz,D1
T00000e:   BLE.B     T00002E
T000010:   PEA.L     searchFreeMemList(PC)
T000014:   MOVE.W    D1,D0
T000016:   EXT.L     D0
T000018:   MOVEA.L   freeBlockList,A1
T00001e:   LEA.L     $0004(A7),A0
T000022:   MOVEQ.L   #$14,D1
T000024:   JSR       bsearch
T00002a:   ADDQ.W    #4,A7
T00002c:   MOVEA.L   A0,A2
T00002e:   MOVE.L    A2,D0
T000030:   BEQ.B     T000054
T000032:   MOVE.L    $0010(A2),D1
T000036:   BEQ.B     T000054
T000038:   MOVEA.L   D1,A0
T00003a:   MOVE.L    (A0),$0010(A2)
T00003e:   MOVE.W    $000A(A2),D2
T000042:   BLE.B     T000048
T000044:   SUBQ.W    #1,$000A(A2)
T000048:   MOVE.W    $000E(A2),D0
T00004c:   BLE.B     T000052
T00004e:   SUBQ.W    #1,$000E(A2)
T000052:   BRA.B     T000056
T000054:   SUBA.L    A0,A0
T000056:   ADDQ.W    #4,A7
T000058:   MOVEA.L   (A7)+,A2
T00005a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_recycle:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   SUBQ.W    #4,A7
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    D0,(A7)
T00000a:   CLR.W     D3
T00000c:   MOVEA.L   A0,A3
T00000e:   SUBA.L    A4,A4
T000010:   MOVE.L    A2,D1
T000012:   BEQ.B     T00007A
T000014:   CMP.L     #null_string,D1
T00001a:   BEQ.B     T00007A
T00001c:   MOVE.W    freeBlockListAnz,D2
T000022:   BLE.B     T000042
T000024:   PEA.L     searchFreeMemList(PC)
T000028:   MOVE.W    D2,D0
T00002a:   EXT.L     D0
T00002c:   MOVEA.L   freeBlockList,A1
T000032:   LEA.L     $0004(A7),A0
T000036:   MOVEQ.L   #$14,D1
T000038:   JSR       bsearch
T00003e:   ADDQ.W    #4,A7
T000040:   MOVEA.L   A0,A4
T000042:   MOVE.L    A4,D0
T000044:   BEQ.B     T000070
T000046:   MOVE.W    $000A(A4),D1
T00004a:   CMP.W     $0008(A4),D1
T00004e:   BGE.B     T00006C
T000050:   MOVE.L    $0010(A4),(A3)
T000054:   MOVE.L    A3,$0010(A4)
T000058:   MOVEQ.L   #$01,D3
T00005a:   ADD.W     D3,$000A(A4)
T00005e:   MOVE.W    $000A(A4),D1
T000062:   CMP.W     $000C(A4),D1
T000066:   BLE.B     T00006C
T000068:   MOVE.W    D1,$000C(A4)
T00006c:   ADDQ.W    #1,$000E(A4)
T000070:   TST.W     D3
T000072:   BNE.B     T00007A
T000074:   MOVEA.L   A2,A0
T000076:   BSR       Ax_free
T00007a:   ADDQ.W    #4,A7
T00007c:   MOVEM.L   (A7)+,D3/A2-A4
T000080:   RTS

          .ENDMOD


          .MODULE LOCAL

createNewList:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVE.L    D0,D3
T000006:   MOVE.W    D1,D4
T000008:   MOVEA.L   A0,A4
T00000a:   SUBA.L    A2,A2
T00000c:   LEA.L     freeBlockListAnz,A3
T000012:   MOVEQ.L   #$01,D1
T000014:   ADD.W     (A3),D1
T000016:   EXT.L     D1
T000018:   MOVE.L    D1,D0
T00001a:   LSL.L     #2,D0
T00001c:   ADD.L     D1,D0
T00001e:   LSL.L     #2,D0
T000020:   BSR       _malloc
T000024:   MOVEA.L   A0,A2
T000026:   MOVE.L    A2,D0
T000028:   BNE.B     T00002E
T00002a:   CLR.W     D0
T00002c:   BRA.B     T0000A2
T00002e:   MOVE.W    (A3),D1
T000030:   EXT.L     D1
T000032:   MOVE.L    D1,D0
T000034:   LSL.L     #2,D0
T000036:   ADD.L     D1,D0
T000038:   LSL.L     #2,D0
T00003a:   MOVEA.L   -$0004(A3),A1
T00003e:   MOVEA.L   A2,A0
T000040:   JSR       memcpy
T000046:   MOVEA.L   -$0004(A3),A0
T00004a:   CMPA.L    #_freeBlockList,A0
T000050:   BEQ.B     T000056
T000052:   BSR       Ax_free
T000056:   MOVE.L    A2,-$0004(A3)
T00005a:   ADDQ.W    #1,(A3)
T00005c:   MOVE.W    (A3),D1
T00005e:   EXT.L     D1
T000060:   MOVE.L    D1,D0
T000062:   LSL.L     #2,D0
T000064:   ADD.L     D1,D0
T000066:   LSL.L     #2,D0
T000068:   MOVEA.L   -$0004(A3),A2
T00006c:   LEA.L     -$14(A2,D0.L),A2
T000070:   MOVE.L    D3,(A2)
T000072:   MOVE.L    A4,$0004(A2)
T000076:   CLR.L     $0010(A2)
T00007a:   MOVE.W    D4,$0008(A2)
T00007e:   CLR.W     $000A(A2)
T000082:   CLR.W     $000C(A2)
T000086:   CLR.W     $000E(A2)
T00008a:   MOVE.W    (A3),D0
T00008c:   BLE.B     T0000A0
T00008e:   LEA.L     sortFreeMemList(PC),A1
T000092:   MOVEQ.L   #$14,D1
T000094:   EXT.L     D0
T000096:   MOVEA.L   -$0004(A3),A0
T00009a:   JSR       qsort
T0000a0:   MOVEQ.L   #$01,D0
T0000a2:   MOVEM.L   (A7)+,D3-D4/A2-A4
T0000a6:   RTS

          .ENDMOD


          .MODULE LOCAL

deleteOldList:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   SUBA.L    A2,A2
T000008:   BRA.B     T000018
T00000a:   MOVEA.L   $0010(A3),A4
T00000e:   MOVE.L    (A4),$0010(A3)
T000012:   MOVEA.L   A4,A0
T000014:   BSR       Ax_free
T000018:   MOVE.L    $0010(A3),D0
T00001c:   BNE.B     T00000A
T00001e:   LEA.L     freeBlockListAnz,A4
T000024:   LEA.L     freeBlockList,A5
T00002a:   CMPI.W    #$0001,(A4)
T00002e:   BLE.B     T000044
T000030:   MOVEQ.L   #-$01,D1
T000032:   ADD.W     (A4),D1
T000034:   EXT.L     D1
T000036:   MOVE.L    D1,D0
T000038:   LSL.L     #2,D0
T00003a:   ADD.L     D1,D0
T00003c:   LSL.L     #2,D0
T00003e:   BSR       _malloc
T000042:   MOVEA.L   A0,A2
T000044:   MOVE.L    A2,D0
T000046:   BEQ.B     T000096
T000048:   CLR.W     D4
T00004a:   MOVE.W    D4,D3
T00004c:   BRA.B     T000080
T00004e:   MOVE.W    D3,D1
T000050:   EXT.L     D1
T000052:   MOVE.L    D1,D0
T000054:   LSL.L     #2,D0
T000056:   ADD.L     D1,D0
T000058:   LSL.L     #2,D0
T00005a:   MOVEA.L   (A5),A0
T00005c:   ADDA.L    D0,A0
T00005e:   CMPA.L    A0,A3
T000060:   BEQ.B     T00007E
T000062:   MOVEA.L   A0,A1
T000064:   MOVE.W    D4,D0
T000066:   ADDQ.W    #1,D4
T000068:   EXT.L     D0
T00006a:   MOVE.L    D0,D2
T00006c:   LSL.L     #2,D2
T00006e:   ADD.L     D0,D2
T000070:   LSL.L     #2,D2
T000072:   LEA.L     (A2,D2.L),A0
T000076:   MOVEQ.L   #$14,D0
T000078:   JSR       memcpy
T00007e:   ADDQ.W    #1,D3
T000080:   CMP.W     (A4),D3
T000082:   BLT.B     T00004E
T000084:   MOVEA.L   (A5),A0
T000086:   CMPA.L    #_freeBlockList,A0
T00008c:   BEQ.B     T000092
T00008e:   BSR       Ax_free
T000092:   MOVE.L    A2,(A5)
T000094:   SUBQ.W    #1,(A4)
T000096:   MOVE.W    (A4),D0
T000098:   BLE.B     T0000AA
T00009a:   LEA.L     sortFreeMemList(PC),A1
T00009e:   MOVEQ.L   #$14,D1
T0000a0:   EXT.L     D0
T0000a2:   MOVEA.L   (A5),A0
T0000a4:   JSR       qsort
T0000aa:   MOVEM.L   (A7)+,D3-D4/A2-A5
T0000ae:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_setRecycleSize:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   SUBQ.W    #4,A7
T000006:   MOVE.L    D0,(A7)
T000008:   MOVE.W    D1,D4
T00000a:   MOVEA.L   A0,A4
T00000c:   SUBA.L    A2,A2
T00000e:   CLR.W     D3
T000010:   MOVEQ.L   #$08,D2
T000012:   CMP.L     D0,D2
T000014:   BLE.B     T000020
T000016:   TST.L     D0
T000018:   BEQ.B     T000020
T00001a:   MOVE.W    D3,D0
T00001c:   BRA       T0000AA
T000020:   LEA.L     freeBlockStat,A3
T000026:   MOVE.L    (A3),D0
T000028:   BEQ.B     T000030
T00002a:   MOVEA.L   D0,A0
T00002c:   BSR       Ax_free
T000030:   CLR.L     (A3)
T000032:   MOVE.W    -$0002(A3),D0
T000036:   BLE.B     T000052
T000038:   PEA.L     searchFreeMemList(PC)
T00003c:   MOVEQ.L   #$14,D1
T00003e:   EXT.L     D0
T000040:   MOVEA.L   -$0006(A3),A1
T000044:   LEA.L     $0004(A7),A0
T000048:   JSR       bsearch
T00004e:   ADDQ.W    #4,A7
T000050:   MOVEA.L   A0,A2
T000052:   MOVE.L    A2,D0
T000054:   BNE.B     T000068
T000056:   TST.W     D4
T000058:   BLE.B     T0000A8
T00005a:   MOVEA.L   A4,A0
T00005c:   MOVE.W    D4,D1
T00005e:   MOVE.L    (A7),D0
T000060:   BSR       createNewList
T000064:   MOVE.W    D0,D3
T000066:   BRA.B     T0000A8
T000068:   MOVE.W    D4,D5
T00006a:   BRA.B     T00007C
T00006c:   MOVEA.L   $0010(A2),A4
T000070:   MOVE.L    (A4),$0010(A2)
T000074:   MOVEA.L   A4,A0
T000076:   BSR       Ax_free
T00007a:   ADDQ.W    #1,D5
T00007c:   MOVE.L    $0010(A2),D0
T000080:   BEQ.B     T00008E
T000082:   CMP.W     $0008(A2),D5
T000086:   BGE.B     T00008E
T000088:   CMP.W     $000A(A2),D5
T00008c:   BLT.B     T00006C
T00008e:   MOVE.W    D4,$0008(A2)
T000092:   CMP.W     $000A(A2),D4
T000096:   BGE.B     T00009C
T000098:   MOVE.W    D4,$000A(A2)
T00009c:   TST.W     D4
T00009e:   BGT.B     T0000A6
T0000a0:   MOVEA.L   A2,A0
T0000a2:   BSR       deleteOldList
T0000a6:   MOVEQ.L   #$01,D3
T0000a8:   MOVE.W    D3,D0
T0000aa:   ADDQ.W    #4,A7
T0000ac:   MOVEM.L   (A7)+,D3-D5/A2-A4
T0000b0:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ax_getRecycleStat:
T000000:   MOVEM.L   D3/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A5
T000006:   SUBA.L    A2,A2
T000008:   MOVEA.L   A2,A3
T00000a:   LEA.L     freeBlockStat,A4
T000010:   MOVE.L    (A4),D0
T000012:   BNE.B     T00002A
T000014:   MOVE.W    -$0002(A4),D0
T000018:   EXT.L     D0
T00001a:   LSL.L     #4,D0
T00001c:   BSR       Ax_malloc
T000020:   MOVE.L    A0,(A4)
T000022:   MOVE.L    A0,D0
T000024:   BNE.B     T00002A
T000026:   SUBA.L    A0,A0
T000028:   BRA.B     T000078
T00002a:   CLR.W     D3
T00002c:   BRA.B     T000068
T00002e:   MOVE.W    D3,D1
T000030:   EXT.L     D1
T000032:   MOVE.L    D1,D0
T000034:   LSL.L     #2,D0
T000036:   ADD.L     D1,D0
T000038:   LSL.L     #2,D0
T00003a:   MOVEA.L   -$0006(A4),A2
T00003e:   ADDA.L    D0,A2
T000040:   LSL.L     #4,D1
T000042:   MOVEA.L   (A4),A3
T000044:   ADDA.L    D1,A3
T000046:   MOVE.L    (A2),(A3)
T000048:   MOVE.L    $0004(A2),$0004(A3)
T00004e:   MOVE.W    $0008(A2),$0008(A3)
T000054:   MOVE.W    $000A(A2),$000A(A3)
T00005a:   MOVE.W    $000C(A2),$000C(A3)
T000060:   MOVE.W    $000E(A2),$000E(A3)
T000066:   ADDQ.W    #1,D3
T000068:   CMP.W     -$0002(A4),D3
T00006c:   BLT.B     T00002E
T00006e:   MOVE.L    A5,D0
T000070:   BEQ.B     T000076
T000072:   MOVE.W    -$0002(A4),(A5)
T000076:   MOVEA.L   (A4),A0
T000078:   MOVEM.L   (A7)+,D3/A2-A5
T00007c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_create:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BEQ.B     T00003A
T00000a:   MOVE.B    (A0),D1
T00000c:   BEQ.B     T00003A
T00000e:   JSR       strlen
T000014:   MOVE.L    D0,D3
T000016:   ADDQ.L    #1,D3
T000018:   MOVE.L    D3,D0
T00001a:   JSR       Ax_malloc
T000020:   MOVEA.L   A0,A3
T000022:   MOVE.L    A3,D0
T000024:   BNE.B     T00002A
T000026:   SUBA.L    A0,A0
T000028:   BRA.B     T000040
T00002a:   MOVE.L    D3,D0
T00002c:   MOVEA.L   A2,A1
T00002e:   MOVEA.L   A3,A0
T000030:   JSR       memcpy
T000036:   MOVEA.L   A3,A0
T000038:   BRA.B     T000040
T00003a:   LEA.L     null_string,A0
T000040:   MOVEM.L   (A7)+,D3/A2-A3
T000044:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_delete:
T000000:   CMPA.L    #null_string,A0
T000006:   BEQ.B     T00000E
T000008:   JSR       Ax_free
T00000e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ach_toupper:
T000000:   EXT.W     D0
T000002:   JSR       nkc_toupper
T000008:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ach_tolower:
T000000:   EXT.W     D0
T000002:   JSR       nkc_tolower
T000008:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_toupper:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BNE.B     T000010
T00000a:   LEA.L     null_string,A2
T000010:   MOVE.L    A2,D0
T000012:   BEQ.B     T00002A
T000014:   MOVEA.L   A2,A3
T000016:   BRA.B     T000026
T000018:   MOVE.B    (A3),D0
T00001a:   EXT.W     D0
T00001c:   JSR       nkc_toupper
T000022:   MOVE.B    D0,(A3)
T000024:   ADDQ.W    #1,A3
T000026:   MOVE.B    (A3),D0
T000028:   BNE.B     T000018
T00002a:   MOVEA.L   A2,A0
T00002c:   MOVEA.L   (A7)+,A3
T00002e:   MOVEA.L   (A7)+,A2
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_tolower:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BNE.B     T000010
T00000a:   LEA.L     null_string,A2
T000010:   MOVE.L    A2,D0
T000012:   BEQ.B     T00002A
T000014:   MOVEA.L   A2,A3
T000016:   BRA.B     T000026
T000018:   MOVE.B    (A3),D0
T00001a:   EXT.W     D0
T00001c:   JSR       nkc_tolower
T000022:   MOVE.B    D0,(A3)
T000024:   ADDQ.W    #1,A3
T000026:   MOVE.B    (A3),D0
T000028:   BNE.B     T000018
T00002a:   MOVEA.L   A2,A0
T00002c:   MOVEA.L   (A7)+,A3
T00002e:   MOVEA.L   (A7)+,A2
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_ltrim:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BNE.B     T000010
T00000a:   LEA.L     null_string,A2
T000010:   MOVEA.L   A2,A3
T000012:   BRA.B     T000016
T000014:   ADDQ.W    #1,A3
T000016:   MOVE.B    (A3),D0
T000018:   BEQ.B     T000024
T00001a:   JSR       Ach_isWhite
T000020:   TST.W     D0
T000022:   BNE.B     T000014
T000024:   MOVE.B    (A3),D0
T000026:   BEQ.B     T00003C
T000028:   CMPA.L    A3,A2
T00002a:   BCC.B     T00003C
T00002c:   MOVEA.L   A2,A0
T00002e:   BRA.B     T000036
T000030:   MOVE.B    (A3),(A0)
T000032:   ADDQ.W    #1,A3
T000034:   ADDQ.W    #1,A0
T000036:   MOVE.B    (A3),D0
T000038:   BNE.B     T000030
T00003a:   CLR.B     (A0)
T00003c:   MOVEA.L   A2,A0
T00003e:   MOVEA.L   (A7)+,A3
T000040:   MOVEA.L   (A7)+,A2
T000042:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_rtrim:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BNE.B     T000010
T00000a:   LEA.L     null_string,A2
T000010:   MOVEA.L   A2,A3
T000012:   BRA.B     T000016
T000014:   ADDQ.W    #1,A3
T000016:   MOVE.B    (A3),D0
T000018:   BNE.B     T000014
T00001a:   SUBQ.W    #1,A3
T00001c:   CMPA.L    A3,A2
T00001e:   BCC.B     T00002C
T000020:   MOVE.B    (A3),D0
T000022:   JSR       Ach_isWhite
T000028:   TST.W     D0
T00002a:   BNE.B     T00001A
T00002c:   CMPA.L    A3,A2
T00002e:   BHI.B     T000048
T000030:   MOVE.B    (A3),D0
T000032:   BEQ.B     T000044
T000034:   JSR       Ach_isWhite
T00003a:   TST.W     D0
T00003c:   BNE.B     T000044
T00003e:   ADDQ.W    #1,A3
T000040:   CLR.B     (A3)
T000042:   BRA.B     T00004A
T000044:   CLR.B     (A3)
T000046:   BRA.B     T00004A
T000048:   CLR.B     (A2)
T00004a:   MOVEA.L   A2,A0
T00004c:   MOVEA.L   (A7)+,A3
T00004e:   MOVEA.L   (A7)+,A2
T000050:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_alltrim:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   MOVE.L    A2,D0
T000006:   BEQ.B     T000012
T000008:   BSR       Ast_ltrim
T00000c:   BSR       Ast_rtrim
T000010:   BRA.B     T000018
T000012:   LEA.L     null_string,A0
T000018:   MOVEA.L   (A7)+,A2
T00001a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_cmp:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   LEA.L     null_string,A2
T00000a:   MOVE.L    A0,D0
T00000c:   BNE.B     T000010
T00000e:   MOVEA.L   A2,A0
T000010:   MOVE.L    A1,D0
T000012:   BNE.B     T000016
T000014:   MOVEA.L   A2,A1
T000016:   MOVEA.L   A0,A3
T000018:   MOVEA.L   A1,A2
T00001a:   BRA.B     T000032
T00001c:   MOVE.B    (A3),D0
T00001e:   CMP.B     (A2),D0
T000020:   BEQ.B     T00002E
T000022:   CMP.B     (A2),D0
T000024:   BLE.B     T00002A
T000026:   MOVEQ.L   #$01,D0
T000028:   BRA.B     T00002C
T00002a:   MOVEQ.L   #-$01,D0
T00002c:   BRA.B     T000050
T00002e:   ADDQ.W    #1,A3
T000030:   ADDQ.W    #1,A2
T000032:   MOVE.B    (A3),D0
T000034:   BEQ.B     T00003A
T000036:   MOVE.B    (A2),D1
T000038:   BNE.B     T00001C
T00003a:   MOVE.B    (A3),D0
T00003c:   CMP.B     (A2),D0
T00003e:   BLE.B     T000044
T000040:   MOVEQ.L   #$01,D0
T000042:   BRA.B     T000050
T000044:   MOVE.B    (A3),D0
T000046:   CMP.B     (A2),D0
T000048:   BGE.B     T00004E
T00004a:   MOVEQ.L   #-$01,D0
T00004c:   BRA.B     T000050
T00004e:   CLR.W     D0
T000050:   MOVEA.L   (A7)+,A3
T000052:   MOVEA.L   (A7)+,A2
T000054:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_icmp:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   LEA.L     null_string,A2
T00000a:   MOVE.L    A0,D0
T00000c:   BNE.B     T000010
T00000e:   MOVEA.L   A2,A0
T000010:   MOVE.L    A1,D0
T000012:   BNE.B     T000016
T000014:   MOVEA.L   A2,A1
T000016:   MOVEA.L   A0,A4
T000018:   MOVEA.L   A1,A3
T00001a:   BRA.B     T000048
T00001c:   MOVE.B    (A4),D0
T00001e:   EXT.W     D0
T000020:   JSR       nkc_toupper
T000026:   MOVE.W    D0,D3
T000028:   MOVE.B    (A3),D0
T00002a:   EXT.W     D0
T00002c:   JSR       nkc_toupper
T000032:   CMP.B     D3,D0
T000034:   BEQ.B     T000044
T000036:   CMP.B     D3,D0
T000038:   BGE.B     T00003E
T00003a:   MOVEQ.L   #$01,D1
T00003c:   BRA.B     T000040
T00003e:   MOVEQ.L   #-$01,D1
T000040:   MOVE.W    D1,D0
T000042:   BRA.B     T000066
T000044:   ADDQ.W    #1,A4
T000046:   ADDQ.W    #1,A3
T000048:   MOVE.B    (A4),D0
T00004a:   BEQ.B     T000050
T00004c:   MOVE.B    (A3),D1
T00004e:   BNE.B     T00001C
T000050:   MOVE.B    (A4),D0
T000052:   CMP.B     (A3),D0
T000054:   BLE.B     T00005A
T000056:   MOVEQ.L   #$01,D0
T000058:   BRA.B     T000066
T00005a:   MOVE.B    (A4),D0
T00005c:   CMP.B     (A3),D0
T00005e:   BGE.B     T000064
T000060:   MOVEQ.L   #-$01,D0
T000062:   BRA.B     T000066
T000064:   CLR.W     D0
T000066:   MOVEM.L   (A7)+,D3/A2-A4
T00006a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_ncmp:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   LEA.L     null_string,A2
T00000a:   MOVE.L    A0,D1
T00000c:   BNE.B     T000010
T00000e:   MOVEA.L   A2,A0
T000010:   MOVE.L    A1,D1
T000012:   BNE.B     T000016
T000014:   MOVEA.L   A2,A1
T000016:   CLR.W     D1
T000018:   MOVEA.L   A0,A3
T00001a:   MOVEA.L   A1,A2
T00001c:   BRA.B     T000036
T00001e:   MOVE.B    (A3),D2
T000020:   CMP.B     (A2),D2
T000022:   BEQ.B     T000030
T000024:   CMP.B     (A2),D2
T000026:   BLE.B     T00002C
T000028:   MOVEQ.L   #$01,D0
T00002a:   BRA.B     T00002E
T00002c:   MOVEQ.L   #-$01,D0
T00002e:   BRA.B     T000062
T000030:   ADDQ.W    #1,A3
T000032:   ADDQ.W    #1,A2
T000034:   ADDQ.W    #1,D1
T000036:   MOVE.B    (A3),D2
T000038:   BEQ.B     T000042
T00003a:   MOVE.B    (A2),D2
T00003c:   BEQ.B     T000042
T00003e:   CMP.W     D1,D0
T000040:   BGT.B     T00001E
T000042:   CMP.W     D1,D0
T000044:   BGT.B     T00004A
T000046:   CLR.W     D2
T000048:   BRA.B     T000060
T00004a:   MOVE.B    (A3),D2
T00004c:   CMP.B     (A2),D2
T00004e:   BLE.B     T000054
T000050:   MOVEQ.L   #$01,D2
T000052:   BRA.B     T000060
T000054:   MOVE.B    (A3),D2
T000056:   CMP.B     (A2),D2
T000058:   BGE.B     T00005E
T00005a:   MOVEQ.L   #-$01,D2
T00005c:   BRA.B     T000060
T00005e:   CLR.W     D2
T000060:   MOVE.W    D2,D0
T000062:   MOVEA.L   (A7)+,A3
T000064:   MOVEA.L   (A7)+,A2
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_incmp:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   MOVE.W    D0,D5
T000006:   LEA.L     null_string,A2
T00000c:   MOVE.L    A0,D0
T00000e:   BNE.B     T000012
T000010:   MOVEA.L   A2,A0
T000012:   MOVE.L    A1,D0
T000014:   BNE.B     T000018
T000016:   MOVEA.L   A2,A1
T000018:   CLR.W     D3
T00001a:   MOVEA.L   A0,A4
T00001c:   MOVEA.L   A1,A3
T00001e:   BRA.B     T00004E
T000020:   MOVE.B    (A4),D0
T000022:   EXT.W     D0
T000024:   JSR       nkc_toupper
T00002a:   MOVE.W    D0,D4
T00002c:   MOVE.B    (A3),D0
T00002e:   EXT.W     D0
T000030:   JSR       nkc_toupper
T000036:   CMP.B     D4,D0
T000038:   BEQ.B     T000048
T00003a:   CMP.B     D4,D0
T00003c:   BGE.B     T000042
T00003e:   MOVEQ.L   #$01,D1
T000040:   BRA.B     T000044
T000042:   MOVEQ.L   #-$01,D1
T000044:   MOVE.W    D1,D0
T000046:   BRA.B     T000078
T000048:   ADDQ.W    #1,A4
T00004a:   ADDQ.W    #1,A3
T00004c:   ADDQ.W    #1,D3
T00004e:   MOVE.B    (A4),D0
T000050:   BEQ.B     T00005A
T000052:   MOVE.B    (A3),D1
T000054:   BEQ.B     T00005A
T000056:   CMP.W     D3,D5
T000058:   BGT.B     T000020
T00005a:   CMP.W     D3,D5
T00005c:   BGT.B     T000062
T00005e:   CLR.W     D0
T000060:   BRA.B     T000078
T000062:   MOVE.B    (A4),D0
T000064:   CMP.B     (A3),D0
T000066:   BLE.B     T00006C
T000068:   MOVEQ.L   #$01,D0
T00006a:   BRA.B     T000078
T00006c:   MOVE.B    (A4),D0
T00006e:   CMP.B     (A3),D0
T000070:   BGE.B     T000076
T000072:   MOVEQ.L   #-$01,D0
T000074:   BRA.B     T000078
T000076:   CLR.W     D0
T000078:   MOVEM.L   (A7)+,D3-D5/A2-A4
T00007c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_istr:
T000000:   MOVEM.L   D3-D6/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A3
T000008:   LEA.L     null_string,A0
T00000e:   MOVE.L    A2,D0
T000010:   BNE.B     T000014
T000012:   MOVEA.L   A0,A2
T000014:   MOVE.L    A3,D0
T000016:   BNE.B     T00001A
T000018:   MOVEA.L   A0,A3
T00001a:   MOVEA.L   A3,A0
T00001c:   JSR       strlen
T000022:   MOVE.L    D0,D3
T000024:   MOVEA.L   A2,A0
T000026:   JSR       strlen
T00002c:   MOVE.L    D0,D4
T00002e:   MOVEA.L   A3,A0
T000030:   JSR       strlen
T000036:   SUB.W     D0,D4
T000038:   ADDQ.W    #1,D4
T00003a:   MOVEA.L   A2,A4
T00003c:   CLR.W     D6
T00003e:   MOVE.W    D6,D5
T000040:   BRA.B     T00005A
T000042:   MOVE.W    D3,D0
T000044:   MOVEA.L   A3,A1
T000046:   MOVEA.L   A4,A0
T000048:   BSR       Ast_incmp
T00004c:   TST.W     D0
T00004e:   BNE.B     T000054
T000050:   MOVEQ.L   #$01,D6
T000052:   BRA.B     T000056
T000054:   CLR.W     D6
T000056:   ADDQ.W    #1,A4
T000058:   ADDQ.W    #1,D5
T00005a:   TST.W     D6
T00005c:   BNE.B     T000066
T00005e:   CMP.W     D5,D4
T000060:   BLE.B     T000066
T000062:   MOVE.B    (A4),D0
T000064:   BNE.B     T000042
T000066:   TST.W     D6
T000068:   BEQ.B     T00006E
T00006a:   MOVEA.L   A4,A0
T00006c:   BRA.B     T000070
T00006e:   SUBA.L    A0,A0
T000070:   MOVEM.L   (A7)+,D3-D6/A2-A4
T000074:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ach_isWhite:
T000000:   TST.B     D0
T000002:   BEQ.B     T00001A
T000004:   EXT.W     D0
T000006:   LEA.L     ,A0
T00000c:   JSR       strchr
T000012:   MOVE.L    A0,D0
T000014:   BEQ.B     T00001A
T000016:   MOVEQ.L   #$01,D0
T000018:   RTS
T00001a:   CLR.W     D0
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_isEmpty:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   BRA.B     T000008
T000006:   ADDQ.W    #1,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T00001A
T00000c:   MOVE.B    (A2),D1
T00000e:   BEQ.B     T00001A
T000010:   MOVE.B    D1,D0
T000012:   BSR       Ach_isWhite
T000016:   TST.W     D0
T000018:   BNE.B     T000006
T00001a:   MOVE.L    A2,D0
T00001c:   BEQ.B     T00002C
T00001e:   MOVE.B    (A2),D1
T000020:   BEQ.B     T00002C
T000022:   MOVE.B    D1,D0
T000024:   BSR       Ach_isWhite
T000028:   TST.W     D0
T00002a:   BEQ.B     T000030
T00002c:   MOVEQ.L   #$01,D0
T00002e:   BRA.B     T000032
T000030:   CLR.W     D0
T000032:   MOVEA.L   (A7)+,A2
T000034:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_add:
T000000:   MOVEM.L   D3-D6/A2-A5,-(A7)
T000004:   MOVE.W    D0,D6
T000006:   MOVEA.L   A0,A3
T000008:   SUBA.L    A2,A2
T00000a:   MOVEQ.L   #-$01,D3
T00000c:   MOVE.L    A3,D1
T00000e:   BNE.B     T00001A
T000010:   LEA.L     null_string,A0
T000016:   BRA       T000090
T00001a:   LEA.L     $0024(A7),A4
T00001e:   CLR.B     (A3)
T000020:   CLR.W     D4
T000022:   BRA.B     T00007A
T000024:   MOVEA.L   (A4)+,A5
T000026:   MOVE.L    A5,D0
T000028:   BEQ.B     T000078
T00002a:   MOVE.B    (A5),D1
T00002c:   BEQ.B     T000078
T00002e:   MOVEA.L   A5,A0
T000030:   JSR       strlen
T000036:   MOVE.L    D0,D5
T000038:   CMP.L     D5,D3
T00003a:   BGE.B     T00005E
T00003c:   MOVE.L    A2,D0
T00003e:   BEQ.B     T000048
T000040:   MOVEA.L   A2,A0
T000042:   JSR       Ax_free
T000048:   MOVEQ.L   #$01,D0
T00004a:   ADD.L     D5,D0
T00004c:   JSR       Ax_malloc
T000052:   MOVEA.L   A0,A2
T000054:   MOVE.L    D5,D3
T000056:   MOVE.L    A2,D0
T000058:   BNE.B     T00005E
T00005a:   MOVEA.L   A3,A0
T00005c:   BRA.B     T000090
T00005e:   MOVEA.L   A5,A1
T000060:   MOVEA.L   A2,A0
T000062:   JSR       strcpy
T000068:   MOVEA.L   A2,A0
T00006a:   BSR       Ast_alltrim
T00006e:   MOVEA.L   A2,A1
T000070:   MOVEA.L   A3,A0
T000072:   JSR       strcat
T000078:   ADDQ.W    #1,D4
T00007a:   CMP.W     D4,D6
T00007c:   BGT.B     T000024
T00007e:   MOVE.L    A2,D0
T000080:   BEQ.B     T00008A
T000082:   MOVEA.L   A2,A0
T000084:   JSR       Ax_free
T00008a:   MOVEA.L   A3,A0
T00008c:   BSR       Ast_alltrim
T000090:   MOVEM.L   (A7)+,D3-D6/A2-A5
T000094:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_adl:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    D0,D4
T000008:   JSR       strlen
T00000e:   MOVE.L    D0,D3
T000010:   MOVE.L    A2,D0
T000012:   BNE.B     T000018
T000014:   SUBA.L    A0,A0
T000016:   BRA.B     T000032
T000018:   CMP.L     D3,D4
T00001a:   BLE.B     T00002C
T00001c:   MOVE.L    D4,D1
T00001e:   SUB.L     D3,D1
T000020:   MOVEQ.L   #$20,D0
T000022:   LEA.L     (A2,D3.L),A0
T000026:   JSR       memset
T00002c:   CLR.B     (A2,D4.L)
T000030:   MOVEA.L   A2,A0
T000032:   MOVEM.L   (A7)+,D3-D4/A2
T000036:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_adr:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    D0,D4
T000008:   JSR       strlen
T00000e:   MOVE.L    D0,D3
T000010:   MOVE.L    A2,D0
T000012:   BNE.B     T000018
T000014:   SUBA.L    A0,A0
T000016:   BRA.B     T000042
T000018:   CMP.L     D3,D4
T00001a:   BLE.B     T00003C
T00001c:   MOVE.L    D3,D0
T00001e:   MOVEA.L   A2,A1
T000020:   MOVE.L    D4,D1
T000022:   SUB.L     D3,D1
T000024:   LEA.L     (A2,D1.L),A0
T000028:   JSR       memcpy
T00002e:   MOVE.L    D4,D1
T000030:   SUB.L     D3,D1
T000032:   MOVEQ.L   #$20,D0
T000034:   MOVEA.L   A2,A0
T000036:   JSR       memset
T00003c:   CLR.B     (A2,D4.L)
T000040:   MOVEA.L   A2,A0
T000042:   MOVEM.L   (A7)+,D3-D4/A2
T000046:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_adc:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    D0,D3
T000008:   MOVE.L    A2,D1
T00000a:   BNE.B     T000010
T00000c:   SUBA.L    A0,A0
T00000e:   BRA.B     T000040
T000010:   MOVEA.L   A2,A0
T000012:   JSR       strlen
T000018:   MOVE.L    D3,D4
T00001a:   SUB.L     D0,D4
T00001c:   TST.L     D4
T00001e:   BLE.B     T00003A
T000020:   MOVE.L    D4,D0
T000022:   ASR.L     #1,D0
T000024:   MOVEA.L   A2,A0
T000026:   BSR       Ast_adl
T00002a:   MOVE.L    D4,D0
T00002c:   ASR.L     #1,D0
T00002e:   MOVEQ.L   #$01,D1
T000030:   AND.L     D4,D1
T000032:   ADD.L     D1,D0
T000034:   MOVEA.L   A2,A0
T000036:   BSR       Ast_adr
T00003a:   CLR.B     (A2,D3.L)
T00003e:   MOVEA.L   A2,A0
T000040:   MOVEM.L   (A7)+,D3-D4/A2
T000044:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_filter:
T000000:   MOVEM.L   A2-A6,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A3
T000008:   MOVEA.L   $0018(A7),A4
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000018
T000010:   MOVE.L    A3,D1
T000012:   BNE.B     T00001C
T000014:   MOVE.L    A4,D2
T000016:   BNE.B     T00001C
T000018:   SUBA.L    A0,A0
T00001a:   BRA.B     T00006E
T00001c:   MOVEA.L   A2,A5
T00001e:   MOVEA.L   A5,A6
T000020:   BRA.B     T000062
T000022:   ADDQ.W    #1,A6
T000024:   MOVE.L    A3,D0
T000026:   BEQ.B     T000040
T000028:   MOVE.B    (A6),D1
T00002a:   BEQ.B     T000040
T00002c:   MOVE.B    D1,D0
T00002e:   EXT.W     D0
T000030:   MOVEA.L   A3,A0
T000032:   JSR       strchr
T000038:   MOVE.L    A0,D0
T00003a:   BNE.B     T000022
T00003c:   BRA.B     T000040
T00003e:   ADDQ.W    #1,A6
T000040:   MOVE.L    A4,D0
T000042:   BEQ.B     T000058
T000044:   MOVE.B    (A6),D1
T000046:   BEQ.B     T000058
T000048:   MOVE.B    D1,D0
T00004a:   EXT.W     D0
T00004c:   MOVEA.L   A4,A0
T00004e:   JSR       strchr
T000054:   MOVE.L    A0,D0
T000056:   BEQ.B     T00003E
T000058:   CMPA.L    A6,A5
T00005a:   BEQ.B     T00005E
T00005c:   MOVE.B    (A6),(A5)
T00005e:   ADDQ.W    #1,A6
T000060:   ADDQ.W    #1,A5
T000062:   MOVE.B    (A6),D0
T000064:   BEQ.B     T00006A
T000066:   MOVE.B    (A5),D1
T000068:   BNE.B     T000024
T00006a:   CLR.B     (A5)
T00006c:   MOVEA.L   A2,A0
T00006e:   MOVEM.L   (A7)+,A2-A6
T000072:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_count:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A1,A3
T000006:   MOVE.L    A0,D0
T000008:   BNE.B     T000010
T00000a:   LEA.L     null_string,A0
T000010:   MOVEQ.L   #$00,D3
T000012:   MOVEA.L   A0,A2
T000014:   BRA.B     T00002A
T000016:   MOVE.B    (A2),D0
T000018:   EXT.W     D0
T00001a:   MOVEA.L   A3,A0
T00001c:   JSR       strchr
T000022:   MOVE.L    A0,D0
T000024:   BEQ.B     T000028
T000026:   ADDQ.L    #1,D3
T000028:   ADDQ.W    #1,A2
T00002a:   MOVE.B    (A2),D0
T00002c:   BNE.B     T000016
T00002e:   MOVE.L    D3,D0
T000030:   MOVEM.L   (A7)+,D3/A2-A3
T000034:   RTS

          .ENDMOD


          .MODULE LOCAL

strfsearchafterwc:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A2
T000008:   MOVEA.L   $001C(A7),A5
T00000c:   MOVEA.L   $0020(A7),A3
T000010:   MOVEA.L   (A1),A0
T000012:   MOVE.B    (A0),D0
T000014:   EXT.W     D0
T000016:   MOVEA.L   A3,A0
T000018:   JSR       strchr
T00001e:   MOVE.L    A0,D0
T000020:   BEQ.B     T00002C
T000022:   ADDQ.L    #1,(A2)
T000024:   ADDQ.L    #1,(A4)
T000026:   BRA       T000098
T00002a:   ADDQ.L    #1,(A2)
T00002c:   MOVEA.L   (A2),A0
T00002e:   MOVE.B    (A0),D0
T000030:   BEQ.B     T000040
T000032:   EXT.W     D0
T000034:   MOVEA.L   A5,A0
T000036:   JSR       strchr
T00003c:   MOVE.L    A0,D0
T00003e:   BNE.B     T00002A
T000040:   MOVEA.L   (A2),A0
T000042:   MOVE.B    (A0),D0
T000044:   BNE.B     T000052
T000046:   BRA.B     T00004A
T000048:   ADDQ.L    #1,(A4)
T00004a:   MOVEA.L   (A4),A0
T00004c:   MOVE.B    (A0),D0
T00004e:   BNE.B     T000048
T000050:   BRA.B     T000098
T000052:   MOVEA.L   A5,A1
T000054:   MOVEA.L   (A2),A0
T000056:   JSR       strcspn
T00005c:   MOVE.L    D0,D3
T00005e:   MOVEA.L   A3,A1
T000060:   MOVEA.L   (A2),A0
T000062:   JSR       strcspn
T000068:   CMP.L     D3,D0
T00006a:   BLS.B     T000070
T00006c:   MOVE.L    D3,D1
T00006e:   BRA.B     T000072
T000070:   MOVE.L    D0,D1
T000072:   MOVE.L    D1,D3
T000074:   MOVEA.L   (A2),A5
T000076:   ADDA.L    D1,A5
T000078:   MOVE.B    (A5),D4
T00007a:   CLR.B     (A5)
T00007c:   MOVEA.L   (A2),A1
T00007e:   MOVEA.L   (A4),A0
T000080:   JSR       strstr
T000086:   MOVE.B    D4,(A5)
T000088:   MOVE.L    A5,(A2)
T00008a:   MOVE.L    A0,D0
T00008c:   BNE.B     T000092
T00008e:   CLR.W     D0
T000090:   BRA.B     T00009A
T000092:   MOVEA.L   (A4),A0
T000094:   ADDA.L    D3,A0
T000096:   MOVE.L    A0,(A4)
T000098:   MOVEQ.L   #$01,D0
T00009a:   MOVEM.L   (A7)+,D3-D4/A2-A5
T00009e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_fcmp:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   LEA.L     -$0028(A7),A7
T000008:   MOVE.L    A0,$0024(A7)
T00000c:   MOVE.L    A1,$0020(A7)
T000010:   LEA.L     $001E(A7),A2
T000014:   LEA.L     +$00000001,A0
T00001a:   MOVEA.L   A2,A1
T00001c:   MOVE.B    (A0)+,(A1)+
T00001e:   MOVE.B    (A0)+,(A1)+
T000020:   LEA.L     $001C(A7),A3
T000024:   LEA.L     +$00000003,A0
T00002a:   MOVEA.L   A3,A1
T00002c:   MOVE.B    (A0)+,(A1)+
T00002e:   MOVE.B    (A0)+,(A1)+
T000030:   LEA.L     $0004(A7),A4
T000034:   LEA.L     $0010(A7),A5
T000038:   MOVEA.L   $0024(A7),A0
T00003c:   BSR       Ast_isEmpty
T000040:   TST.W     D0
T000042:   BNE       T0001EA
T000046:   MOVEA.L   $0020(A7),A0
T00004a:   BSR       Ast_isEmpty
T00004e:   TST.W     D0
T000050:   BNE       T0001EA
T000054:   MOVEA.L   $0024(A7),A0
T000058:   JSR       strlen
T00005e:   MOVE.L    D0,D3
T000060:   MOVEA.L   $0020(A7),A0
T000064:   JSR       strlen
T00006a:   MOVE.L    D0,D4
T00006c:   MOVEA.L   A2,A1
T00006e:   MOVEA.L   $0024(A7),A0
T000072:   JSR       strcspn
T000078:   CMP.L     D0,D3
T00007a:   BEQ.B     T000080
T00007c:   MOVEQ.L   #$01,D0
T00007e:   BRA.B     T000082
T000080:   CLR.W     D0
T000082:   MOVE.W    D0,$0018(A7)
T000086:   MOVEA.L   A2,A1
T000088:   MOVEA.L   $0020(A7),A0
T00008c:   JSR       strcspn
T000092:   CMP.L     D0,D4
T000094:   BEQ.B     T00009A
T000096:   MOVEQ.L   #$01,D0
T000098:   BRA.B     T00009C
T00009a:   CLR.W     D0
T00009c:   MOVE.W    D0,$001A(A7)
T0000a0:   MOVEA.L   A3,A1
T0000a2:   MOVEA.L   $0024(A7),A0
T0000a6:   JSR       strcspn
T0000ac:   CMP.L     D0,D3
T0000ae:   BEQ.B     T0000B4
T0000b0:   MOVEQ.L   #$01,D0
T0000b2:   BRA.B     T0000B6
T0000b4:   CLR.W     D0
T0000b6:   MOVE.W    D0,$0014(A7)
T0000ba:   MOVEA.L   A3,A1
T0000bc:   MOVEA.L   $0020(A7),A0
T0000c0:   JSR       strcspn
T0000c6:   CMP.L     D0,D4
T0000c8:   BEQ.B     T0000CE
T0000ca:   MOVEQ.L   #$01,D0
T0000cc:   BRA.B     T0000D0
T0000ce:   CLR.W     D0
T0000d0:   MOVE.W    D0,$0016(A7)
T0000d4:   MOVE.W    $001A(A7),D1
T0000d8:   BNE       T0001EA
T0000dc:   TST.W     D0
T0000de:   BNE       T0001EA
T0000e2:   MOVE.L    $0024(A7),(A4)
T0000e6:   MOVE.L    $0020(A7),(A7)
T0000ea:   BRA       T0001EE
T0000ee:   MOVEA.L   (A4),A0
T0000f0:   MOVE.B    (A0),D0
T0000f2:   EXT.W     D0
T0000f4:   MOVEA.L   A2,A0
T0000f6:   JSR       strchr
T0000fc:   MOVE.L    A0,D0
T0000fe:   BEQ.B     T000104
T000100:   MOVEQ.L   #$01,D0
T000102:   BRA.B     T000106
T000104:   CLR.W     D0
T000106:   MOVE.W    D0,$000C(A7)
T00010a:   MOVEA.L   (A7),A0
T00010c:   MOVE.B    (A0),D0
T00010e:   EXT.W     D0
T000110:   MOVEA.L   A2,A0
T000112:   JSR       strchr
T000118:   MOVE.L    A0,D0
T00011a:   BEQ.B     T000120
T00011c:   MOVEQ.L   #$01,D0
T00011e:   BRA.B     T000122
T000120:   CLR.W     D0
T000122:   MOVE.W    D0,$000E(A7)
T000126:   MOVEA.L   (A4),A0
T000128:   MOVE.B    (A0),D0
T00012a:   EXT.W     D0
T00012c:   MOVEA.L   A3,A0
T00012e:   JSR       strchr
T000134:   MOVE.L    A0,D0
T000136:   BEQ.B     T00013C
T000138:   MOVEQ.L   #$01,D0
T00013a:   BRA.B     T00013E
T00013c:   CLR.W     D0
T00013e:   MOVE.W    D0,$0008(A7)
T000142:   MOVEA.L   (A7),A0
T000144:   MOVE.B    (A0),D0
T000146:   EXT.W     D0
T000148:   MOVEA.L   A3,A0
T00014a:   JSR       strchr
T000150:   MOVE.L    A0,D0
T000152:   BEQ.B     T000158
T000154:   MOVEQ.L   #$01,D0
T000156:   BRA.B     T00015A
T000158:   CLR.W     D0
T00015a:   MOVE.W    D0,$000A(A7)
T00015e:   MOVE.W    $000C(A7),D1
T000162:   BNE.B     T00016A
T000164:   MOVE.W    $0008(A7),D2
T000168:   BEQ.B     T00016E
T00016a:   MOVEQ.L   #$01,D0
T00016c:   BRA.B     T000170
T00016e:   CLR.W     D0
T000170:   MOVE.W    D0,(A5)
T000172:   MOVE.W    $000E(A7),D1
T000176:   BNE.B     T00017E
T000178:   MOVE.W    $000A(A7),D2
T00017c:   BEQ.B     T000182
T00017e:   MOVEQ.L   #$01,D0
T000180:   BRA.B     T000184
T000182:   CLR.W     D0
T000184:   MOVE.W    D0,$0002(A5)
T000188:   MOVE.W    (A5),D1
T00018a:   BNE.B     T00019C
T00018c:   TST.W     D0
T00018e:   BNE.B     T00019C
T000190:   MOVEA.L   (A4),A0
T000192:   MOVE.B    (A0),D2
T000194:   MOVEA.L   (A7),A1
T000196:   CMP.B     (A1),D2
T000198:   BNE.B     T0001EA
T00019a:   BRA.B     T0001A8
T00019c:   MOVE.W    $0008(A7),D0
T0001a0:   BEQ.B     T0001AE
T0001a2:   MOVE.W    $000A(A7),D1
T0001a6:   BEQ.B     T0001AE
T0001a8:   ADDQ.L    #1,(A4)
T0001aa:   ADDQ.L    #1,(A7)
T0001ac:   BRA.B     T0001EE
T0001ae:   MOVE.W    (A5),D0
T0001b0:   BEQ.B     T0001CC
T0001b2:   MOVE.W    $0002(A5),D1
T0001b6:   BNE.B     T0001CC
T0001b8:   PEA.L     (A3)
T0001ba:   PEA.L     (A2)
T0001bc:   MOVEA.L   A4,A1
T0001be:   LEA.L     $0008(A7),A0
T0001c2:   BSR       strfsearchafterwc
T0001c6:   ADDQ.W    #8,A7
T0001c8:   TST.W     D0
T0001ca:   BEQ.B     T0001EA
T0001cc:   MOVE.W    $0002(A5),D0
T0001d0:   BEQ.B     T0001EE
T0001d2:   MOVE.W    (A5),D1
T0001d4:   BNE.B     T0001EE
T0001d6:   PEA.L     (A3)
T0001d8:   PEA.L     (A2)
T0001da:   LEA.L     $0008(A7),A1
T0001de:   MOVEA.L   A4,A0
T0001e0:   BSR       strfsearchafterwc
T0001e4:   ADDQ.W    #8,A7
T0001e6:   TST.W     D0
T0001e8:   BNE.B     T0001EE
T0001ea:   CLR.W     D0
T0001ec:   BRA.B     T00020C
T0001ee:   MOVEA.L   (A4),A0
T0001f0:   MOVE.B    (A0),D0
T0001f2:   BEQ.B     T0001FC
T0001f4:   MOVEA.L   (A7),A1
T0001f6:   MOVE.B    (A1),D1
T0001f8:   BNE       T0100EE
T0001fc:   MOVEA.L   (A4),A0
T0001fe:   MOVE.B    (A0),D0
T000200:   MOVEA.L   (A7),A1
T000202:   CMP.B     (A1),D0
T000204:   BNE.B     T00020A
T000206:   MOVEQ.L   #$01,D0
T000208:   BRA.B     T00020C
T00020a:   CLR.W     D0
T00020c:   LEA.L     $0028(A7),A7
T000210:   MOVEM.L   (A7)+,D3-D4/A2-A5
T000214:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_countASCIZZ:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   CLR.W     D3
T000008:   ADDQ.W    #1,D3
T00000a:   MOVEA.L   A2,A0
T00000c:   JSR       strlen
T000012:   ADDQ.L    #1,D0
T000014:   ADDA.L    D0,A2
T000016:   MOVE.B    (A2),D0
T000018:   BNE.B     T000008
T00001a:   MOVE.W    D3,D0
T00001c:   MOVEA.L   (A7)+,A2
T00001e:   MOVE.W    (A7)+,D3
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_splitASCIIZZ:
T000000:   MOVEM.L   D3/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A5
T000008:   MOVEA.L   $0018(A7),A3
T00000c:   BSR       Ast_countASCIZZ
T000010:   MOVE.W    D0,(A3)
T000012:   EXT.L     D0
T000014:   LSL.L     #2,D0
T000016:   JSR       Ax_malloc
T00001c:   MOVEA.L   A0,A4
T00001e:   MOVE.L    A0,(A5)
T000020:   MOVE.L    A4,D0
T000022:   BNE.B     T000028
T000024:   CLR.W     D0
T000026:   BRA.B     T00004C
T000028:   MOVEA.L   A2,A5
T00002a:   CLR.W     D3
T00002c:   BRA.B     T000046
T00002e:   MOVEA.L   A5,A0
T000030:   BSR       Ast_create
T000034:   MOVE.L    A0,(A4)
T000036:   MOVEA.L   A5,A0
T000038:   JSR       strlen
T00003e:   ADDQ.L    #1,D0
T000040:   ADDA.L    D0,A5
T000042:   ADDQ.W    #1,D3
T000044:   ADDQ.W    #4,A4
T000046:   CMP.W     (A3),D3
T000048:   BLT.B     T00002E
T00004a:   MOVEQ.L   #$01,D0
T00004c:   MOVEM.L   (A7)+,D3/A2-A5
T000050:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_mergeASCIIZZ:
T000000:   MOVEM.L   D3-D6/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.W    D0,D5
T000008:   MOVE.W    D1,D6
T00000a:   MOVEQ.L   #$02,D4
T00000c:   CLR.W     D3
T00000e:   LEA.L     ,A3
T000014:   BRA.B     T000084
T000016:   MOVE.W    D3,D0
T000018:   EXT.L     D0
T00001a:   LSL.L     #2,D0
T00001c:   MOVE.L    (A2,D0.L),D1
T000020:   BEQ.B     T000082
T000022:   MOVEA.L   D1,A0
T000024:   MOVE.B    (A0),D2
T000026:   BEQ.B     T000080
T000028:   MOVE.B    D2,D0
T00002a:   EXT.W     D0
T00002c:   LEA.L     $0005(A3),A0
T000030:   JSR       strchr
T000036:   MOVE.L    A0,D0
T000038:   BNE.B     T000050
T00003a:   MOVE.W    D3,D0
T00003c:   EXT.L     D0
T00003e:   LSL.L     #2,D0
T000040:   MOVEA.L   (A2,D0.L),A0
T000044:   JSR       strlen
T00004a:   ADDQ.L    #1,D0
T00004c:   ADD.L     D0,D4
T00004e:   BRA.B     T000082
T000050:   MOVE.W    D3,D0
T000052:   EXT.L     D0
T000054:   LSL.L     #2,D0
T000056:   MOVEA.L   (A2,D0.L),A0
T00005a:   MOVE.B    (A0),D1
T00005c:   EXT.W     D1
T00005e:   SUBQ.W    #1,D1
T000060:   BEQ.B     T000068
T000062:   SUBQ.W    #1,D1
T000064:   BEQ.B     T000068
T000066:   BRA.B     T000080
T000068:   MOVE.W    D3,D0
T00006a:   EXT.L     D0
T00006c:   LSL.L     #2,D0
T00006e:   MOVEA.L   (A2,D0.L),A0
T000072:   JSR       strlen
T000078:   ADD.L     D0,D0
T00007a:   ADDQ.L    #2,D0
T00007c:   ADD.L     D0,D4
T00007e:   BRA.B     T000082
T000080:   ADDQ.L    #2,D4
T000082:   ADDQ.W    #1,D3
T000084:   CMP.W     D3,D5
T000086:   BGT       T010016
T00008a:   TST.W     D6
T00008c:   BEQ.B     T00009A
T00008e:   MOVE.L    D4,D0
T000090:   JSR       Ax_glmalloc
T000096:   MOVEA.L   A0,A4
T000098:   BRA.B     T0000A4
T00009a:   MOVE.L    D4,D0
T00009c:   JSR       Ax_malloc
T0000a2:   MOVEA.L   A0,A4
T0000a4:   MOVE.L    A4,D0
T0000a6:   BNE.B     T0000AE
T0000a8:   SUBA.L    A0,A0
T0000aa:   BRA       T00018C
T0000ae:   MOVE.L    D4,D1
T0000b0:   CLR.W     D0
T0000b2:   MOVEA.L   A4,A0
T0000b4:   JSR       memset
T0000ba:   CLR.W     D3
T0000bc:   MOVEA.L   A4,A5
T0000be:   BRA       T000184
T0000c2:   MOVE.W    D3,D0
T0000c4:   EXT.L     D0
T0000c6:   LSL.L     #2,D0
T0000c8:   MOVE.L    (A2,D0.L),D1
T0000cc:   BEQ       T000176
T0000d0:   MOVEA.L   D1,A0
T0000d2:   MOVE.B    (A0),D2
T0000d4:   BNE.B     T0000E6
T0000d6:   LEA.L     $000C(A3),A1
T0000da:   MOVEA.L   A5,A0
T0000dc:   JSR       strcpy
T0000e2:   BRA       T000176
T0000e6:   MOVE.W    D3,D1
T0000e8:   EXT.L     D1
T0000ea:   LSL.L     #2,D1
T0000ec:   MOVEA.L   (A2,D1.L),A0
T0000f0:   MOVE.B    (A0),D0
T0000f2:   EXT.W     D0
T0000f4:   LEA.L     $0005(A3),A0
T0000f8:   JSR       strchr
T0000fe:   MOVE.L    A0,D0
T000100:   BNE.B     T000116
T000102:   MOVE.W    D3,D0
T000104:   EXT.L     D0
T000106:   LSL.L     #2,D0
T000108:   MOVEA.L   (A2,D0.L),A1
T00010c:   MOVEA.L   A5,A0
T00010e:   JSR       strcpy
T000114:   BRA.B     T000176
T000116:   MOVE.W    D3,D0
T000118:   EXT.L     D0
T00011a:   LSL.L     #2,D0
T00011c:   MOVEA.L   (A2,D0.L),A0
T000120:   MOVE.B    (A0),D1
T000122:   EXT.W     D1
T000124:   SUBQ.W    #1,D1
T000126:   BEQ.B     T00012E
T000128:   SUBQ.W    #1,D1
T00012a:   BEQ.B     T00012E
T00012c:   BRA.B     T000176
T00012e:   MOVE.B    #$02,(A5)+
T000132:   MOVE.W    D3,D0
T000134:   EXT.L     D0
T000136:   LSL.L     #2,D0
T000138:   MOVEA.L   (A2,D0.L),A0
T00013c:   BRA.B     T000172
T00013e:   MOVE.B    (A0),D0
T000140:   EXT.W     D0
T000142:   ASR.W     #4,D0
T000144:   CMP.B     #$09,D0
T000148:   BLE.B     T000152
T00014a:   MOVEQ.L   #$30,D1
T00014c:   ADD.B     D0,D1
T00014e:   MOVE.B    D1,(A5)+
T000150:   BRA.B     T000158
T000152:   MOVEQ.L   #$41,D1
T000154:   ADD.B     D0,D1
T000156:   MOVE.B    D1,(A5)+
T000158:   MOVEQ.L   #$0F,D0
T00015a:   AND.B     (A0),D0
T00015c:   CMP.B     #$09,D0
T000160:   BLE.B     T00016A
T000162:   MOVEQ.L   #$30,D1
T000164:   ADD.B     D0,D1
T000166:   MOVE.B    D1,(A5)+
T000168:   BRA.B     T000170
T00016a:   MOVEQ.L   #$41,D1
T00016c:   ADD.B     D0,D1
T00016e:   MOVE.B    D1,(A5)+
T000170:   ADDQ.W    #1,A0
T000172:   MOVE.B    (A0),D0
T000174:   BNE.B     T00013E
T000176:   ADDQ.W    #1,D3
T000178:   MOVEA.L   A5,A0
T00017a:   JSR       strlen
T000180:   ADDQ.L    #1,D0
T000182:   ADDA.L    D0,A5
T000184:   CMP.W     D3,D5
T000186:   BGT       T0100C2
T00018a:   MOVEA.L   A4,A0
T00018c:   MOVEM.L   (A7)+,D3-D6/A2-A5
T000190:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_deleteAry:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.W    D0,D4
T000008:   CLR.W     D3
T00000a:   MOVEA.L   A0,A3
T00000c:   BRA.B     T000018
T00000e:   MOVEA.L   (A3),A0
T000010:   BSR       Ast_delete
T000014:   ADDQ.W    #1,D3
T000016:   ADDQ.W    #4,A3
T000018:   CMP.W     D3,D4
T00001a:   BGT.B     T00000E
T00001c:   MOVEA.L   A2,A0
T00001e:   JSR       Ax_free
T000024:   MOVEM.L   (A7)+,D3-D4/A2-A3
T000028:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_copy:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.W    D0,D4
T000008:   MOVE.L    A2,D1
T00000a:   BNE.B     T000012
T00000c:   LEA.L     null_string,A2
T000012:   MOVEA.L   A2,A0
T000014:   JSR       strlen
T00001a:   MOVE.L    D0,D3
T00001c:   TST.W     D4
T00001e:   BEQ.B     T00002E
T000020:   MOVEQ.L   #$01,D0
T000022:   ADD.L     D3,D0
T000024:   JSR       Ax_glmalloc
T00002a:   MOVEA.L   A0,A3
T00002c:   BRA.B     T00003A
T00002e:   MOVEQ.L   #$01,D0
T000030:   ADD.L     D3,D0
T000032:   JSR       Ax_malloc
T000038:   MOVEA.L   A0,A3
T00003a:   MOVE.L    A3,D0
T00003c:   BNE.B     T000042
T00003e:   SUBA.L    A0,A0
T000040:   BRA.B     T000058
T000042:   MOVE.L    A2,D0
T000044:   BNE.B     T00004E
T000046:   LEA.L     +$00000004,A1
T00004c:   BRA.B     T000050
T00004e:   MOVEA.L   A2,A1
T000050:   MOVEA.L   A3,A0
T000052:   JSR       strcpy
T000058:   MOVEM.L   (A7)+,D3-D4/A2-A3
T00005c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ast_reverse:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVE.L    A1,D0
T000006:   BNE.B     T00000E
T000008:   LEA.L     null_string,A1
T00000e:   MOVEA.L   A1,A2
T000010:   BRA.B     T000014
T000012:   ADDQ.W    #1,A2
T000014:   MOVE.B    (A2),D0
T000016:   BNE.B     T000012
T000018:   MOVEA.L   A0,A3
T00001a:   SUBQ.W    #1,A2
T00001c:   BRA.B     T000024
T00001e:   MOVE.B    (A2),(A3)
T000020:   SUBQ.W    #1,A2
T000022:   ADDQ.W    #1,A3
T000024:   CMPA.L    A2,A1
T000026:   BLS.B     T00001E
T000028:   CLR.B     (A3)
T00002a:   MOVEA.L   (A7)+,A3
T00002c:   MOVEA.L   (A7)+,A2
T00002e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_create:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D3
T000008:   MOVEQ.L   #$22,D0
T00000a:   JSR       Ax_malloc
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BNE.B     T00001A
T000016:   SUBA.L    A0,A0
T000018:   BRA.B     T00004C
T00001a:   MOVEQ.L   #$22,D1
T00001c:   CLR.W     D0
T00001e:   MOVEA.L   A2,A0
T000020:   JSR       memset
T000026:   MOVEA.L   A3,A1
T000028:   MOVEA.L   A2,A0
T00002a:   JSR       InitConfigStruct
T000030:   MOVEA.L   (A3),A0
T000032:   JSR       Ast_isEmpty
T000038:   TST.W     D0
T00003a:   BNE.B     T00004A
T00003c:   TST.W     D3
T00003e:   BEQ.B     T00004A
T000040:   SUBA.L    A1,A1
T000042:   MOVEA.L   A2,A0
T000044:   JSR       Acfg_load
T00004a:   MOVEA.L   A2,A0
T00004c:   MOVEM.L   (A7)+,D3/A2-A3
T000050:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_delete:
T000000:   MOVE.L    A3,-(A7)
T000002:   MOVEA.L   A0,A3
T000004:   MOVE.L    A3,D0
T000006:   BEQ.B     T000032
T000008:   MOVEQ.L   #$01,D1
T00000a:   AND.W     $001A(A3),D1
T00000e:   BEQ.B     T00001E
T000010:   MOVE.W    $0012(A3),D2
T000014:   BEQ.B     T00001E
T000016:   SUBA.L    A1,A1
T000018:   JSR       Acfg_save
T00001e:   SUBA.L    A1,A1
T000020:   MOVEA.L   A3,A0
T000022:   JSR       Acfg_clear
T000028:   MOVEQ.L   #$22,D0
T00002a:   MOVEA.L   A3,A0
T00002c:   JSR       Ax_recycle
T000032:   MOVEA.L   (A7)+,A3
T000034:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_flags:
T000000:   TST.W     D1
T000002:   BLE.B     T00000A
T000004:   OR.W      D0,$001A(A0)
T000008:   BRA.B     T000016
T00000a:   TST.W     D1
T00000c:   BNE.B     T000016
T00000e:   MOVE.W    D0,D1
T000010:   NOT.W     D1
T000012:   AND.W     D1,$001A(A0)
T000016:   MOVE.W    $001A(A0),D0
T00001a:   RTS

          .ENDMOD


          .MODULE LOCAL

InitConfigStruct:
T000000:   MOVE.L    A3,-(A7)
T000002:   MOVEA.L   A0,A3
T000004:   JSR       Acfg_copyInfo
T00000a:   CLR.W     $0014(A3)
T00000e:   CLR.L     $0016(A3)
T000012:   CLR.W     $001C(A3)
T000016:   CLR.L     $001E(A3)
T00001a:   MOVEA.L   (A7)+,A3
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_createInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEQ.L   #$12,D0
T000004:   JSR       Ax_malloc
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BNE.B     T000014
T000010:   SUBA.L    A0,A0
T000012:   BRA.B     T000030
T000014:   MOVEQ.L   #$12,D1
T000016:   CLR.W     D0
T000018:   MOVEA.L   A2,A0
T00001a:   JSR       memset
T000020:   LEA.L     +$00000001,A1
T000026:   MOVEA.L   A2,A0
T000028:   JSR       Acfg_initInfo
T00002e:   MOVEA.L   A2,A0
T000030:   MOVEA.L   (A7)+,A2
T000032:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_deleteInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   LEA.L     ,A1
T00000a:   JSR       Acfg_initInfo
T000010:   MOVEQ.L   #$12,D0
T000012:   MOVEA.L   A2,A0
T000014:   JSR       Ax_recycle
T00001a:   MOVEA.L   (A7)+,A2
T00001c:   RTS

          .ENDMOD


          .MODULE LOCAL

Acfg_initInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.L    (A0),D0
T00000a:   BEQ.B     T00001A
T00000c:   MOVEA.L   D0,A1
T00000e:   MOVE.B    (A1),D1
T000010:   BEQ.B     T00001A
T000012:   MOVEA.L   D0,A0
T000014:   JSR       Ast_delete
T00001a:   LEA.L     ,A0
T000020:   JSR       Ast_create
T000026:   MOVE.L    A0,(A2)
T000028:   MOVE.L    $0004(A2),D0
T00002c:   BEQ.B     T00003C
T00002e:   MOVEA.L   D0,A1
T000030:   MOVE.B    (A1),D1
T000032:   BEQ.B     T00003C
T000034:   MOVEA.L   D0,A0
T000036:   JSR       Ast_delete
T00003c:   MOVEA.L   A3,A0
T00003e:   JSR       Ast_create
T000044:   MOVE.L    A0,$0004(A2)
T000048:   MOVE.L    $0008(A2),D0
T00004c:   BEQ.B     T00005C
T00004e:   MOVEA.L   D0,A1
T000050:   MOVE.B    (A1),D1
T000052:   BEQ.B     T00005C
T000054:   MOVEA.L   D0,A0
T000056:   JSR       Ast_delete
T00005c:   LEA.L     ,A0
T000062:   JSR       Ast_create
T000068:   MOVE.L    A0,$0008(A2)
T00006c:   CLR.W     $000C(A2)
T000070:   CLR.W     $000E(A2)
T000074:   MOVE.W    #$0020,$0010(A2)
T00007a:   MOVEA.L   (A7)+,A3
T00007c:   MOVEA.L   (A7)+,A2
T00007e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_copyInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   MOVE.L    A2,D0
T00000a:   BNE.B     T000012
T00000c:   LEA.L     default_info,A2
T000012:   MOVEA.L   $0004(A2),A1
T000016:   MOVEA.L   A3,A0
T000018:   BSR       Acfg_initInfo
T00001c:   MOVEA.L   (A2),A0
T00001e:   JSR       Ast_create
T000024:   MOVE.L    A0,(A3)
T000026:   MOVE.L    $0008(A2),D0
T00002a:   BEQ.B     T000036
T00002c:   MOVEA.L   D0,A0
T00002e:   JSR       Ast_create
T000034:   BRA.B     T000038
T000036:   SUBA.L    A0,A0
T000038:   MOVE.L    A0,$0008(A3)
T00003c:   MOVE.W    $000C(A2),$000C(A3)
T000042:   MOVE.W    $000E(A2),$000E(A3)
T000048:   MOVE.W    $0010(A2),$0010(A3)
T00004e:   MOVEA.L   A3,A0
T000050:   MOVEA.L   (A7)+,A3
T000052:   MOVEA.L   (A7)+,A2
T000054:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A1,A3
T000006:   MOVEA.L   A0,A2
T000008:   BSR       Acfg_copyInfo
T00000c:   MOVEA.L   A3,A0
T00000e:   MOVEA.L   (A7)+,A3
T000010:   MOVEA.L   (A7)+,A2
T000012:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getInfo:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   MOVEA.L   A1,A0
T000006:   MOVEA.L   A2,A1
T000008:   BSR       Acfg_copyInfo
T00000c:   MOVEA.L   (A7)+,A2
T00000e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_clear:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   BSR       Acfg_copyInfo
T000008:   MOVEA.L   A2,A0
T00000a:   JSR       Acfg_clearAllGroups
T000010:   MOVEA.L   A2,A0
T000012:   JSR       Acfg_clearHeader
T000018:   MOVEA.L   (A7)+,A2
T00001a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_clearAllGroups:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.L    A2,D0
T000008:   BEQ       T0000BE
T00000c:   MOVE.W    $0014(A2),D1
T000010:   BLE       T0000BE
T000014:   MOVE.L    $0016(A2),D2
T000018:   BEQ       T0000BE
T00001c:   CLR.W     D3
T00001e:   BRA       T00009E
T000022:   MOVE.W    D3,D0
T000024:   EXT.L     D0
T000026:   LSL.L     #2,D0
T000028:   MOVEA.L   $0016(A2),A0
T00002c:   MOVEA.L   (A0,D0.L),A3
T000030:   MOVE.L    A3,D1
T000032:   BEQ.B     T00009C
T000034:   MOVE.W    $0004(A3),D2
T000038:   BLE.B     T00007C
T00003a:   MOVE.L    $0006(A3),D0
T00003e:   BEQ.B     T00007C
T000040:   CLR.W     D4
T000042:   BRA.B     T000064
T000044:   MOVE.W    D4,D0
T000046:   EXT.L     D0
T000048:   LSL.L     #2,D0
T00004a:   MOVEA.L   $0006(A3),A0
T00004e:   MOVE.L    (A0,D0.L),D1
T000052:   BEQ.B     T000062
T000054:   MOVEA.L   D1,A1
T000056:   MOVE.B    (A1),D2
T000058:   BEQ.B     T000062
T00005a:   MOVEA.L   D1,A0
T00005c:   JSR       Ast_delete
T000062:   ADDQ.W    #1,D4
T000064:   CMP.W     $0004(A3),D4
T000068:   BLT.B     T000044
T00006a:   MOVEA.L   $0006(A3),A0
T00006e:   JSR       Ax_free
T000074:   CLR.L     $0006(A3)
T000078:   CLR.W     $0004(A3)
T00007c:   MOVEA.L   (A3),A0
T00007e:   JSR       Ast_delete
T000084:   MOVEQ.L   #$0A,D0
T000086:   MOVEA.L   A3,A0
T000088:   JSR       Ax_recycle
T00008e:   MOVE.W    D3,D0
T000090:   EXT.L     D0
T000092:   LSL.L     #2,D0
T000094:   MOVEA.L   $0016(A2),A0
T000098:   CLR.L     (A0,D0.L)
T00009c:   ADDQ.W    #1,D3
T00009e:   CMP.W     $0014(A2),D3
T0000a2:   BLT       T010022
T0000a6:   MOVEA.L   $0016(A2),A0
T0000aa:   JSR       Ax_free
T0000b0:   CLR.L     $0016(A2)
T0000b4:   CLR.W     $0014(A2)
T0000b8:   MOVE.W    #$0001,$0012(A2)
T0000be:   MOVEM.L   (A7)+,D3-D4/A2-A3
T0000c2:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_clearGroup:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   LEA.L     -$0012(A7),A7
T000008:   MOVEA.L   A1,A3
T00000a:   MOVEA.L   A0,A2
T00000c:   CLR.L     -(A7)
T00000e:   LEA.L     $0004(A7),A0
T000012:   JSR       InitCfgSearch
T000018:   ADDQ.W    #4,A7
T00001a:   LEA.L     (A7),A1
T00001c:   MOVEA.L   A2,A0
T00001e:   JSR       SearchGruppe
T000024:   MOVEA.L   A0,A3
T000026:   MOVE.L    A3,D0
T000028:   BEQ       T0000E2
T00002c:   CLR.W     D3
T00002e:   BRA.B     T000046
T000030:   MOVE.W    D3,D0
T000032:   EXT.L     D0
T000034:   LSL.L     #2,D0
T000036:   MOVEA.L   $0006(A3),A0
T00003a:   MOVEA.L   (A0,D0.L),A0
T00003e:   JSR       Ast_delete
T000044:   ADDQ.W    #1,D3
T000046:   CMP.W     $0004(A3),D3
T00004a:   BLT.B     T000030
T00004c:   MOVEA.L   $0006(A3),A0
T000050:   JSR       Ax_free
T000056:   MOVEA.L   (A3),A0
T000058:   JSR       Ast_delete
T00005e:   CMPI.W    #$0001,$0014(A2)
T000064:   BLE.B     T0000C6
T000066:   MOVEQ.L   #-$01,D0
T000068:   ADD.W     $0014(A2),D0
T00006c:   EXT.L     D0
T00006e:   LSL.L     #2,D0
T000070:   JSR       Ax_malloc
T000076:   MOVEA.L   A0,A4
T000078:   CLR.W     D3
T00007a:   MOVE.W    D3,D0
T00007c:   BRA.B     T0000AC
T00007e:   MOVE.W    D3,D1
T000080:   EXT.L     D1
T000082:   LSL.L     #2,D1
T000084:   MOVEA.L   $0016(A2),A0
T000088:   CMPA.L    (A0,D1.L),A3
T00008c:   BNE.B     T000092
T00008e:   ADDQ.W    #1,D3
T000090:   BRA.B     T0000A8
T000092:   MOVE.W    D3,D1
T000094:   EXT.L     D1
T000096:   LSL.L     #2,D1
T000098:   MOVEA.L   $0016(A2),A0
T00009c:   MOVE.W    D0,D2
T00009e:   EXT.L     D2
T0000a0:   LSL.L     #2,D2
T0000a2:   MOVE.L    (A0,D1.L),(A4,D2.L)
T0000a8:   ADDQ.W    #1,D3
T0000aa:   ADDQ.W    #1,D0
T0000ac:   CMP.W     $0014(A2),D3
T0000b0:   BLT.B     T00007E
T0000b2:   MOVEA.L   $0016(A2),A0
T0000b6:   JSR       Ax_free
T0000bc:   MOVE.L    A4,$0016(A2)
T0000c0:   SUBQ.W    #1,$0014(A2)
T0000c4:   BRA.B     T0000D8
T0000c6:   MOVEA.L   $0016(A2),A0
T0000ca:   JSR       Ax_free
T0000d0:   CLR.L     $0016(A2)
T0000d4:   CLR.W     $0014(A2)
T0000d8:   MOVEQ.L   #$0A,D0
T0000da:   MOVEA.L   A3,A0
T0000dc:   JSR       Ax_recycle
T0000e2:   LEA.L     $0012(A7),A7
T0000e6:   MOVEM.L   (A7)+,D3/A2-A4
T0000ea:   RTS

          .ENDMOD


          .MODULE LOCAL

Acfg_makeName:
T000000:   MOVEM.L   D3/A2-A3/A5-A6,-(A7)
T000004:   SUBQ.W    #4,A7
T000006:   MOVEA.L   A0,A6
T000008:   MOVEA.L   A1,A2
T00000a:   MOVEA.L   $001C(A7),A5
T00000e:   MOVEA.L   $0020(A7),A3
T000012:   MOVEA.L   A1,A0
T000014:   JSR       Ast_isEmpty
T00001a:   TST.W     D0
T00001c:   BNE       T0000DA
T000020:   MOVEA.L   A2,A1
T000022:   MOVEA.L   A3,A0
T000024:   JSR       Af_2name
T00002a:   JSR       Ast_alltrim
T000030:   JSR       Ast_isEmpty
T000036:   TST.W     D0
T000038:   BNE       T0000DA
T00003c:   MOVEA.L   A2,A1
T00003e:   LEA.L     (A7),A0
T000040:   JSR       Af_2ext
T000046:   JSR       Ast_isEmpty
T00004c:   TST.W     D0
T00004e:   BEQ.B     T00005E
T000050:   LEA.L     +$00000004,A1
T000056:   LEA.L     (A7),A0
T000058:   JSR       strcpy
T00005e:   MOVEA.L   A2,A0
T000060:   JSR       Af_2drv
T000066:   MOVE.W    D0,D3
T000068:   MOVEA.L   A2,A1
T00006a:   MOVEA.L   A5,A0
T00006c:   JSR       Af_2path
T000072:   LEA.L     +$00000008,A1
T000078:   MOVEA.L   A5,A0
T00007a:   JSR       Ast_cmp
T000080:   TST.W     D0
T000082:   BNE.B     T0000C8
T000084:   MOVEQ.L   #$5C,D0
T000086:   MOVEA.L   A2,A0
T000088:   JSR       strrchr
T00008e:   MOVE.L    A0,D0
T000090:   BNE.B     T0000C8
T000092:   MOVEQ.L   #$3A,D0
T000094:   MOVEA.L   A2,A0
T000096:   JSR       strrchr
T00009c:   MOVE.L    A0,D0
T00009e:   BNE.B     T0000C6
T0000a0:   MOVEA.L   ACSblk,A1
T0000a6:   LEA.L     $0214(A1),A1
T0000aa:   MOVEA.L   A5,A0
T0000ac:   JSR       Af_2path
T0000b2:   MOVEA.L   ACSblk,A0
T0000b8:   LEA.L     $0214(A0),A0
T0000bc:   JSR       Af_2drv
T0000c2:   MOVE.W    D0,D3
T0000c4:   BRA.B     T0000C8
T0000c6:   CLR.B     (A5)
T0000c8:   MOVE.L    #$00002000,D0
T0000ce:   JSR       Ax_malloc
T0000d4:   MOVE.L    A0,(A6)
T0000d6:   MOVE.L    A0,D0
T0000d8:   BNE.B     T0000DE
T0000da:   CLR.W     D0
T0000dc:   BRA.B     T0000F2
T0000de:   PEA.L     (A7)
T0000e0:   MOVE.L    A3,-(A7)
T0000e2:   MOVEA.L   A5,A1
T0000e4:   MOVE.W    D3,D0
T0000e6:   MOVEA.L   (A6),A0
T0000e8:   JSR       Af_buildname
T0000ee:   ADDQ.W    #8,A7
T0000f0:   MOVEQ.L   #$01,D0
T0000f2:   ADDQ.W    #4,A7
T0000f4:   MOVEM.L   (A7)+,D3/A2-A3/A5-A6
T0000f8:   RTS

          .ENDMOD


          .MODULE LOCAL

IsNewGroup:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   JSR       strlen
T00000a:   MOVEQ.L   #$02,D1
T00000c:   CMP.L     D0,D1
T00000e:   BGE.B     T000022
T000010:   CMPI.B    #$5B,(A2)
T000014:   BNE.B     T000022
T000016:   CMPI.B    #$5D,-$01(A2,D0.L)
T00001c:   BNE.B     T000022
T00001e:   MOVEQ.L   #$01,D2
T000020:   BRA.B     T000024
T000022:   CLR.W     D2
T000024:   MOVE.W    D2,D0
T000026:   MOVEA.L   (A7)+,A2
T000028:   RTS

          .ENDMOD


          .MODULE LOCAL

FoundNextGroup:
T000000:   MOVEM.L   D3/A2-A6,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVEA.L   $001C(A7),A2
T00000c:   MOVEA.L   $0020(A7),A6
T000010:   MOVEA.L   $0024(A7),A5
T000014:   CLR.W     D0
T000016:   MOVE.W    D0,(A2)
T000018:   MOVE.W    D0,(A1)
T00001a:   CLR.W     D3
T00001c:   BRA.B     T000070
T00001e:   MOVEA.L   A4,A1
T000020:   MOVE.W    #$2000,D0
T000024:   MOVEA.L   A5,A0
T000026:   JSR       fgets
T00002c:   MOVE.L    A0,D0
T00002e:   BEQ.B     T000070
T000030:   MOVEA.L   A5,A0
T000032:   JSR       Ast_alltrim
T000038:   MOVEA.L   A5,A0
T00003a:   BSR       IsNewGroup
T00003e:   TST.W     D0
T000040:   BEQ.B     T000060
T000042:   LEA.L     $0001(A5),A1
T000046:   MOVEA.L   A6,A0
T000048:   JSR       strcpy
T00004e:   MOVEA.L   A6,A0
T000050:   JSR       strlen
T000056:   SUBQ.L    #1,D0
T000058:   CLR.B     (A6,D0.L)
T00005c:   MOVEQ.L   #$01,D3
T00005e:   BRA.B     T000070
T000060:   ADDQ.W    #1,(A3)
T000062:   MOVEA.L   A5,A0
T000064:   JSR       Ast_isEmpty
T00006a:   TST.W     D0
T00006c:   BEQ.B     T000070
T00006e:   ADDQ.W    #1,(A2)
T000070:   MOVEA.L   A4,A0
T000072:   JSR       feof
T000078:   TST.W     D0
T00007a:   BNE.B     T000080
T00007c:   TST.W     D3
T00007e:   BEQ.B     T00001E
T000080:   MOVEM.L   (A7)+,D3/A2-A6
T000084:   RTS

          .ENDMOD


          .MODULE LOCAL

ReadUntilNextGroup:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A5
T000006:   MOVEA.L   A1,A3
T000008:   MOVEA.L   $001C(A7),A4
T00000c:   MOVE.W    D0,D3
T00000e:   SUB.W     D1,D3
T000010:   TST.W     D3
T000012:   BLE.B     T000032
T000014:   MOVE.W    D3,D0
T000016:   EXT.L     D0
T000018:   LSL.L     #2,D0
T00001a:   JSR       Ax_malloc
T000020:   MOVEA.L   A0,A2
T000022:   MOVE.L    A2,D0
T000024:   BNE.B     T00002A
T000026:   CLR.W     D0
T000028:   BRA.B     T000096
T00002a:   MOVE.L    A2,$0006(A3)
T00002e:   MOVE.W    D3,$0004(A3)
T000032:   CLR.W     D4
T000034:   BRA.B     T00005C
T000036:   MOVEA.L   A4,A0
T000038:   JSR       Ast_isEmpty
T00003e:   TST.W     D0
T000040:   BNE.B     T00005A
T000042:   CMP.W     D4,D3
T000044:   BLE.B     T00005A
T000046:   MOVEA.L   A4,A0
T000048:   JSR       Ast_create
T00004e:   MOVE.W    D4,D0
T000050:   EXT.L     D0
T000052:   LSL.L     #2,D0
T000054:   MOVE.L    A0,(A2,D0.L)
T000058:   ADDQ.W    #1,D4
T00005a:   CLR.B     (A4)
T00005c:   MOVEA.L   A5,A1
T00005e:   MOVE.W    #$2000,D0
T000062:   MOVEA.L   A4,A0
T000064:   JSR       fgets
T00006a:   MOVEA.L   A4,A0
T00006c:   JSR       Ast_alltrim
T000072:   MOVEA.L   A5,A0
T000074:   JSR       feof
T00007a:   TST.W     D0
T00007c:   BEQ.B     T00008A
T00007e:   MOVEA.L   A4,A0
T000080:   JSR       Ast_isEmpty
T000086:   TST.W     D0
T000088:   BNE.B     T000094
T00008a:   MOVEA.L   A4,A0
T00008c:   BSR       IsNewGroup
T000090:   TST.W     D0
T000092:   BEQ.B     T000036
T000094:   MOVEQ.L   #$01,D0
T000096:   MOVEM.L   (A7)+,D3-D4/A2-A5
T00009a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_load:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   LEA.L     -$0014(A7),A7
T000008:   MOVEA.L   A0,A2
T00000a:   MOVE.L    A1,D0
T00000c:   BEQ.B     T000012
T00000e:   MOVEA.L   A1,A0
T000010:   BRA.B     T000014
T000012:   MOVEA.L   (A2),A0
T000014:   MOVE.L    A0,$0010(A7)
T000018:   MOVEA.L   A2,A0
T00001a:   BSR       Acfg_clearAllGroups
T00001e:   MOVEA.L   A2,A0
T000020:   JSR       Acfg_clearHeader
T000026:   CLR.W     $0012(A2)
T00002a:   MOVE.L    #$00004004,D0
T000030:   JSR       Ax_malloc
T000036:   MOVEA.L   A0,A4
T000038:   MOVE.L    A4,D0
T00003a:   BEQ       T00015A
T00003e:   LEA.L     $2003(A4),A1
T000042:   MOVE.L    A1,$0008(A7)
T000046:   MOVE.L    A1,-(A7)
T000048:   MOVE.L    D0,-(A7)
T00004a:   LEA.L     $0014(A7),A0
T00004e:   MOVEA.L   $0018(A7),A1
T000052:   BSR       Acfg_makeName
T000056:   ADDQ.W    #8,A7
T000058:   TST.W     D0
T00005a:   BEQ       T0000F0
T00005e:   LEA.L     +$0000000A,A1
T000064:   MOVEA.L   $000C(A7),A0
T000068:   JSR       fopen
T00006e:   MOVEA.L   A0,A3
T000070:   MOVE.L    A3,D0
T000072:   BEQ.B     T0000E6
T000074:   MOVE.W    $0010(A2),D1
T000078:   BLE.B     T00008A
T00007a:   EXT.L     D1
T00007c:   MOVEQ.L   #$0A,D2
T00007e:   LSL.L     D2,D1
T000080:   SUBA.L    A1,A1
T000082:   CLR.W     D0
T000084:   JSR       setvbuf
T00008a:   MOVEQ.L   #$01,D3
T00008c:   CLR.W     D1
T00008e:   MOVEQ.L   #$00,D0
T000090:   MOVEA.L   A3,A0
T000092:   JSR       fseek
T000098:   BRA.B     T0000BE
T00009a:   MOVEA.L   A3,A1
T00009c:   MOVE.W    #$2000,D0
T0000a0:   MOVEA.L   A4,A0
T0000a2:   JSR       fgets
T0000a8:   MOVE.L    A0,D0
T0000aa:   BEQ.B     T0000BE
T0000ac:   MOVEA.L   A4,A0
T0000ae:   JSR       Ast_alltrim
T0000b4:   BSR       IsNewGroup
T0000b8:   TST.W     D0
T0000ba:   BEQ.B     T0000BE
T0000bc:   ADDQ.W    #1,D3
T0000be:   MOVEA.L   A3,A0
T0000c0:   JSR       feof
T0000c6:   TST.W     D0
T0000c8:   BEQ.B     T00009A
T0000ca:   MOVE.W    D3,D0
T0000cc:   EXT.L     D0
T0000ce:   LSL.L     #2,D0
T0000d0:   JSR       Ax_malloc
T0000d6:   MOVE.L    A0,$0016(A2)
T0000da:   MOVE.L    A0,D0
T0000dc:   BNE.B     T0000FA
T0000de:   MOVEA.L   A3,A0
T0000e0:   JSR       fclose
T0000e6:   MOVEA.L   $000C(A7),A0
T0000ea:   JSR       Ax_free
T0000f0:   MOVEA.L   A4,A0
T0000f2:   JSR       Ax_free
T0000f8:   BRA.B     T00015A
T0000fa:   MOVE.W    D3,$0014(A2)
T0000fe:   MOVE.W    D3,D1
T000100:   EXT.L     D1
T000102:   LSL.L     #2,D1
T000104:   CLR.W     D0
T000106:   MOVEA.L   $0016(A2),A0
T00010a:   JSR       memset
T000110:   MOVEA.L   $0008(A7),A0
T000114:   CLR.B     (A0)
T000116:   CLR.W     D1
T000118:   MOVEQ.L   #$00,D0
T00011a:   MOVEA.L   A3,A0
T00011c:   JSR       fseek
T000122:   CLR.W     D4
T000124:   BRA       T000210
T000128:   MOVEQ.L   #$0A,D0
T00012a:   JSR       Ax_malloc
T000130:   MOVE.L    A0,(A7)
T000132:   MOVE.L    A0,D0
T000134:   BNE.B     T000160
T000136:   MOVEA.L   A3,A0
T000138:   JSR       fclose
T00013e:   MOVEA.L   A2,A0
T000140:   BSR       Acfg_clearAllGroups
T000144:   MOVEA.L   $000C(A7),A0
T000148:   JSR       Ax_free
T00014e:   MOVEA.L   A4,A0
T000150:   JSR       Ax_free
T000156:   CLR.W     $0012(A2)
T00015a:   CLR.W     D0
T00015c:   BRA       T000252
T000160:   MOVEQ.L   #$0A,D1
T000162:   CLR.W     D0
T000164:   MOVEA.L   (A7),A0
T000166:   JSR       memset
T00016c:   CLR.L     -(A7)
T00016e:   LEA.L     +$0000000C,A1
T000174:   MOVE.L    A1,-(A7)
T000176:   MOVEA.L   $0010(A7),A0
T00017a:   JSR       Ast_create
T000180:   JSR       Ast_alltrim
T000186:   MOVEA.L   (A7)+,A1
T000188:   JSR       Ast_filter
T00018e:   ADDQ.W    #4,A7
T000190:   MOVEA.L   (A7),A1
T000192:   MOVE.L    A0,(A1)
T000194:   MOVE.W    D4,D0
T000196:   EXT.L     D0
T000198:   LSL.L     #2,D0
T00019a:   MOVEA.L   $0016(A2),A0
T00019e:   MOVE.L    A1,(A0,D0.L)
T0001a2:   MOVEA.L   A3,A0
T0001a4:   JSR       ftell
T0001aa:   MOVE.L    D0,D5
T0001ac:   MOVE.L    A4,-(A7)
T0001ae:   MOVE.L    $000C(A7),-(A7)
T0001b2:   PEA.L     $000C(A7)
T0001b6:   LEA.L     $0012(A7),A1
T0001ba:   MOVEA.L   A3,A0
T0001bc:   BSR       FoundNextGroup
T0001c0:   LEA.L     $000C(A7),A7
T0001c4:   CLR.W     D1
T0001c6:   MOVE.L    D5,D0
T0001c8:   MOVEA.L   A3,A0
T0001ca:   JSR       fseek
T0001d0:   MOVE.L    A4,-(A7)
T0001d2:   MOVE.W    $0008(A7),D1
T0001d6:   MOVE.W    $000A(A7),D0
T0001da:   MOVEA.L   $0004(A7),A1
T0001de:   MOVEA.L   A3,A0
T0001e0:   BSR       ReadUntilNextGroup
T0001e4:   ADDQ.W    #4,A7
T0001e6:   TST.W     D0
T0001e8:   BNE.B     T00020E
T0001ea:   MOVEA.L   A3,A0
T0001ec:   JSR       fclose
T0001f2:   MOVEA.L   A2,A0
T0001f4:   BSR       Acfg_clearAllGroups
T0001f8:   MOVEA.L   $000C(A7),A0
T0001fc:   JSR       Ax_free
T000202:   MOVEA.L   A4,A0
T000204:   JSR       Ax_free
T00020a:   CLR.W     $0012(A2)
T00020e:   ADDQ.W    #1,D4
T000210:   CMP.W     D4,D3
T000212:   BGT       T010128
T000216:   MOVEA.L   (A2),A0
T000218:   JSR       Ast_isEmpty
T00021e:   TST.W     D0
T000220:   BNE.B     T00022A
T000222:   MOVEA.L   (A2),A0
T000224:   JSR       Ast_delete
T00022a:   MOVEA.L   $000C(A7),A0
T00022e:   JSR       Ast_create
T000234:   MOVE.L    A0,(A2)
T000236:   MOVEA.L   A3,A0
T000238:   JSR       fclose
T00023e:   MOVEA.L   $000C(A7),A0
T000242:   JSR       Ax_free
T000248:   MOVEA.L   A4,A0
T00024a:   JSR       Ax_free
T000250:   MOVEQ.L   #$01,D0
T000252:   LEA.L     $0014(A7),A7
T000256:   MOVEM.L   (A7)+,D3-D5/A2-A4
T00025a:   RTS

          .ENDMOD


          .MODULE LOCAL

WriteString:
T000000:   MOVEM.L   D3/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A5
T000006:   MOVEA.L   A1,A4
T000008:   MOVEA.L   $0018(A7),A2
T00000c:   MOVEA.L   $0020(A7),A3
T000010:   MOVE.W    (A2),D0
T000012:   BNE.B     T000080
T000014:   MOVEA.L   A3,A0
T000016:   JSR       Ast_alltrim
T00001c:   MOVE.B    (A0),D0
T00001e:   EXT.W     D0
T000020:   MOVEA.L   $0004(A4),A0
T000024:   JSR       strchr
T00002a:   MOVE.L    A0,D0
T00002c:   BNE.B     T00007C
T00002e:   CLR.W     D3
T000030:   BRA.B     T00005C
T000032:   MOVE.W    D3,D0
T000034:   EXT.L     D0
T000036:   LSL.L     #2,D0
T000038:   MOVEA.L   $001E(A4),A0
T00003c:   MOVE.L    (A0,D0.L),-(A7)
T000040:   MOVEA.L   $0004(A4),A1
T000044:   MOVE.B    (A1),D1
T000046:   EXT.W     D1
T000048:   MOVE.W    D1,-(A7)
T00004a:   LEA.L     +$0000000F,A1
T000050:   MOVEA.L   A5,A0
T000052:   JSR       fprintf
T000058:   ADDQ.W    #6,A7
T00005a:   ADDQ.W    #1,D3
T00005c:   CMP.W     $001C(A4),D3
T000060:   BLT.B     T000032
T000062:   MOVEA.L   $0004(A4),A0
T000066:   MOVE.B    (A0),D0
T000068:   EXT.W     D0
T00006a:   MOVE.W    D0,-(A7)
T00006c:   LEA.L     +$00000016,A1
T000072:   MOVEA.L   A5,A0
T000074:   JSR       fprintf
T00007a:   ADDQ.W    #2,A7
T00007c:   MOVE.W    #$0001,(A2)
T000080:   MOVE.L    A3,-(A7)
T000082:   MOVEA.L   $0020(A7),A1
T000086:   MOVEA.L   A5,A0
T000088:   JSR       fprintf
T00008e:   ADDQ.W    #4,A7
T000090:   MOVEM.L   (A7)+,D3/A2-A5
T000094:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_save:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   LEA.L     -$000E(A7),A7
T000008:   MOVEA.L   A1,A4
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVEA.L   A1,A0
T00000e:   JSR       Ast_isEmpty
T000014:   TST.W     D0
T000016:   BNE.B     T00001C
T000018:   MOVEA.L   A4,A0
T00001a:   BRA.B     T00001E
T00001c:   MOVEA.L   (A2),A0
T00001e:   MOVEA.L   A0,A4
T000020:   MOVE.L    #$00004004,D0
T000026:   JSR       Ax_malloc
T00002c:   MOVE.L    A0,$0006(A7)
T000030:   MOVE.L    A0,D0
T000032:   BEQ.B     T00007A
T000034:   LEA.L     $2003(A0),A0
T000038:   MOVE.L    A0,$0002(A7)
T00003c:   MOVE.L    A0,-(A7)
T00003e:   MOVE.L    D0,-(A7)
T000040:   MOVEA.L   A4,A1
T000042:   LEA.L     $0012(A7),A0
T000046:   BSR       Acfg_makeName
T00004a:   ADDQ.W    #8,A7
T00004c:   TST.W     D0
T00004e:   BEQ.B     T000066
T000050:   LEA.L     +$0000001A,A1
T000056:   MOVEA.L   $000A(A7),A0
T00005a:   JSR       fopen
T000060:   MOVEA.L   A0,A5
T000062:   MOVE.L    A5,D0
T000064:   BNE.B     T000080
T000066:   MOVEA.L   $000A(A7),A0
T00006a:   JSR       Ax_free
T000070:   MOVEA.L   $0006(A7),A0
T000074:   JSR       Ax_free
T00007a:   CLR.W     D0
T00007c:   BRA       T00017E
T000080:   MOVE.W    $0010(A2),D0
T000084:   BLE.B     T00009A
T000086:   MOVE.W    D0,D1
T000088:   EXT.L     D1
T00008a:   MOVEQ.L   #$0A,D2
T00008c:   LSL.L     D2,D1
T00008e:   SUBA.L    A1,A1
T000090:   MOVEA.L   A5,A0
T000092:   CLR.W     D0
T000094:   JSR       setvbuf
T00009a:   CMPI.W    #$0001,$001C(A2)
T0000a0:   BLT.B     T0000A8
T0000a2:   MOVE.L    $001E(A2),D0
T0000a6:   BNE.B     T0000AC
T0000a8:   MOVEQ.L   #$01,D0
T0000aa:   BRA.B     T0000AE
T0000ac:   CLR.W     D0
T0000ae:   MOVE.W    D0,(A7)
T0000b0:   CLR.W     D3
T0000b2:   BRA       T000134
T0000b6:   MOVE.W    D3,D0
T0000b8:   EXT.L     D0
T0000ba:   LSL.L     #2,D0
T0000bc:   MOVEA.L   $0016(A2),A0
T0000c0:   MOVEA.L   (A0,D0.L),A4
T0000c4:   MOVEA.L   (A4),A0
T0000c6:   JSR       Ast_isEmpty
T0000cc:   TST.W     D0
T0000ce:   BNE.B     T0000E8
T0000d0:   MOVE.L    (A4),-(A7)
T0000d2:   PEA.L     +$0000001C
T0000d8:   PEA.L     $0008(A7)
T0000dc:   MOVEA.L   A2,A1
T0000de:   MOVEA.L   A5,A0
T0000e0:   BSR       WriteString
T0000e4:   LEA.L     $000C(A7),A7
T0000e8:   CLR.W     D4
T0000ea:   MOVEA.L   $0006(A4),A3
T0000ee:   BRA.B     T00010C
T0000f0:   MOVE.L    (A3),-(A7)
T0000f2:   PEA.L     +$00000012
T0000f8:   PEA.L     $0008(A7)
T0000fc:   MOVEA.L   A2,A1
T0000fe:   MOVEA.L   A5,A0
T000100:   BSR       WriteString
T000104:   LEA.L     $000C(A7),A7
T000108:   ADDQ.W    #1,D4
T00010a:   ADDQ.W    #4,A3
T00010c:   CMP.W     $0004(A4),D4
T000110:   BLT.B     T0000F0
T000112:   MOVEA.L   (A4),A0
T000114:   JSR       Ast_isEmpty
T00011a:   TST.W     D0
T00011c:   BEQ.B     T000124
T00011e:   MOVE.W    $0004(A4),D0
T000122:   BLE.B     T000132
T000124:   LEA.L     +$00000014,A1
T00012a:   MOVEA.L   A5,A0
T00012c:   JSR       fprintf
T000132:   ADDQ.W    #1,D3
T000134:   CMP.W     $0014(A2),D3
T000138:   BLT       T0100B6
T00013c:   MOVE.W    (A7),D0
T00013e:   BNE.B     T00015C
T000140:   PEA.L     +$00000022
T000146:   PEA.L     +$00000014
T00014c:   PEA.L     $0008(A7)
T000150:   MOVEA.L   A2,A1
T000152:   MOVEA.L   A5,A0
T000154:   BSR       WriteString
T000158:   LEA.L     $000C(A7),A7
T00015c:   MOVEA.L   A5,A0
T00015e:   JSR       fclose
T000164:   CLR.W     $0012(A2)
T000168:   MOVEA.L   $000A(A7),A0
T00016c:   JSR       Ax_free
T000172:   MOVEA.L   $0006(A7),A0
T000176:   JSR       Ax_free
T00017c:   MOVEQ.L   #$01,D0
T00017e:   LEA.L     $000E(A7),A7
T000182:   MOVEM.L   (A7)+,D3-D4/A2-A5
T000186:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getValue:
T000000:   MOVEM.L   D3-D4/A2-A3/A5,-(A7)
T000004:   LEA.L     -$0012(A7),A7
T000008:   MOVEA.L   A1,A5
T00000a:   MOVEA.L   $002E(A7),A3
T00000e:   MOVEA.L   A0,A2
T000010:   CLR.W     D3
T000012:   CLR.B     (A3)
T000014:   MOVE.L    $002A(A7),-(A7)
T000018:   LEA.L     $0004(A7),A0
T00001c:   JSR       InitCfgSearch
T000022:   ADDQ.W    #4,A7
T000024:   LEA.L     (A7),A1
T000026:   MOVEA.L   A2,A0
T000028:   JSR       SearchCfgString
T00002e:   MOVE.L    $0004(A7),D0
T000032:   BEQ.B     T00004A
T000034:   MOVE.W    $0010(A7),D1
T000038:   BMI.B     T00004A
T00003a:   MOVE.L    $000C(A7),D2
T00003e:   BEQ.B     T00004A
T000040:   TST.L     D2
T000042:   BEQ.B     T000048
T000044:   MOVEQ.L   #$01,D3
T000046:   BRA.B     T00004A
T000048:   CLR.W     D3
T00004a:   TST.W     D3
T00004c:   BNE       T0000D8
T000050:   MOVE.L    $0008(A2),D0
T000054:   BEQ       T0000D8
T000058:   MOVEA.L   D0,A0
T00005a:   JSR       strlen
T000060:   MOVE.L    D0,D4
T000062:   MOVEA.L   (A7),A0
T000064:   JSR       strlen
T00006a:   ADD.L     D0,D4
T00006c:   MOVEA.L   $0008(A7),A0
T000070:   JSR       strlen
T000076:   ADD.L     D0,D4
T000078:   TST.L     D4
T00007a:   BLE.B     T0000D8
T00007c:   MOVEQ.L   #$01,D0
T00007e:   ADD.L     D4,D0
T000080:   JSR       Ax_malloc
T000086:   MOVEA.L   A0,A5
T000088:   MOVE.L    A5,D0
T00008a:   BEQ.B     T0000D8
T00008c:   MOVE.L    $0008(A7),-(A7)
T000090:   MOVE.L    $0004(A7),-(A7)
T000094:   MOVE.L    $0008(A2),-(A7)
T000098:   MOVEQ.L   #$03,D0
T00009a:   JSR       Ast_add
T0000a0:   LEA.L     $000C(A7),A7
T0000a4:   MOVEA.L   $0008(A7),A0
T0000a8:   JSR       Ast_delete
T0000ae:   MOVE.L    A5,$0008(A7)
T0000b2:   MOVEA.L   ACSblk,A0
T0000b8:   MOVE.L    $041A(A0),-(A7)
T0000bc:   MOVEQ.L   #-$01,D0
T0000be:   LEA.L     $0004(A7),A1
T0000c2:   MOVEA.L   A2,A0
T0000c4:   JSR       SearchCfgNameInStrings
T0000ca:   ADDQ.W    #4,A7
T0000cc:   MOVE.L    $000C(A7),D0
T0000d0:   BEQ.B     T0000D6
T0000d2:   MOVEQ.L   #$01,D3
T0000d4:   BRA.B     T0000D8
T0000d6:   CLR.W     D3
T0000d8:   TST.W     D3
T0000da:   BEQ.B     T0000EE
T0000dc:   MOVEA.L   $000C(A7),A1
T0000e0:   MOVEA.L   A3,A0
T0000e2:   JSR       strcpy
T0000e8:   JSR       Ast_alltrim
T0000ee:   MOVEA.L   (A7),A0
T0000f0:   JSR       Ast_delete
T0000f6:   MOVEA.L   $0008(A7),A0
T0000fa:   JSR       Ast_delete
T000100:   MOVEA.L   A3,A0
T000102:   LEA.L     $0012(A7),A7
T000106:   MOVEM.L   (A7)+,D3-D4/A2-A3/A5
T00010a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setValue:
T000000:   MOVEM.L   D3-D4/A2/A4-A5,-(A7)
T000004:   LEA.L     -$0012(A7),A7
T000008:   MOVEA.L   A1,A5
T00000a:   MOVEA.L   $002E(A7),A4
T00000e:   MOVEA.L   A0,A2
T000010:   CLR.W     D3
T000012:   MOVE.L    $002A(A7),-(A7)
T000016:   LEA.L     $0004(A7),A0
T00001a:   JSR       InitCfgSearch
T000020:   ADDQ.W    #4,A7
T000022:   LEA.L     (A7),A1
T000024:   MOVEA.L   A2,A0
T000026:   JSR       SearchCfgString
T00002c:   MOVE.L    $0004(A7),D0
T000030:   BNE.B     T000040
T000032:   MOVEA.L   (A7),A1
T000034:   MOVEA.L   A2,A0
T000036:   JSR       CreateCfgGruppe
T00003c:   MOVE.L    A0,$0004(A7)
T000040:   MOVE.L    $0004(A7),D0
T000044:   BEQ       T00012E
T000048:   MOVEA.L   $0008(A7),A0
T00004c:   JSR       strlen
T000052:   MOVE.L    D0,D4
T000054:   MOVEA.L   A4,A0
T000056:   JSR       strlen
T00005c:   ADD.L     D0,D4
T00005e:   ADDQ.L    #2,D4
T000060:   MOVE.L    D4,D0
T000062:   JSR       Ax_malloc
T000068:   MOVEA.L   A0,A5
T00006a:   MOVE.L    A4,-(A7)
T00006c:   PEA.L     +$00000025
T000072:   MOVE.L    $0010(A7),-(A7)
T000076:   MOVEQ.L   #$03,D0
T000078:   JSR       Ast_add
T00007e:   LEA.L     $000C(A7),A7
T000082:   MOVE.W    $0010(A7),D0
T000086:   BMI.B     T00008E
T000088:   MOVE.L    $000C(A7),D1
T00008c:   BNE.B     T0000A0
T00008e:   MOVEA.L   A5,A1
T000090:   MOVEA.L   $0004(A7),A0
T000094:   JSR       CreateCfgString
T00009a:   MOVE.W    D0,D3
T00009c:   BRA       T000128
T0000a0:   MOVE.W    $000C(A2),D0
T0000a4:   BEQ.B     T0000CE
T0000a6:   MOVE.W    $0010(A7),D1
T0000aa:   EXT.L     D1
T0000ac:   LSL.L     #2,D1
T0000ae:   MOVEA.L   $0004(A7),A0
T0000b2:   MOVEA.L   $0006(A0),A1
T0000b6:   MOVEA.L   (A1,D1.L),A1
T0000ba:   MOVEA.L   A5,A0
T0000bc:   JSR       Ast_cmp
T0000c2:   TST.W     D0
T0000c4:   BNE.B     T0000CA
T0000c6:   MOVEQ.L   #$01,D4
T0000c8:   BRA.B     T0000CC
T0000ca:   CLR.W     D4
T0000cc:   BRA.B     T0000F4
T0000ce:   MOVE.W    $0010(A7),D0
T0000d2:   EXT.L     D0
T0000d4:   LSL.L     #2,D0
T0000d6:   MOVEA.L   $0004(A7),A0
T0000da:   MOVEA.L   $0006(A0),A1
T0000de:   MOVEA.L   (A1,D0.L),A1
T0000e2:   MOVEA.L   A5,A0
T0000e4:   JSR       Ast_icmp
T0000ea:   TST.W     D0
T0000ec:   BNE.B     T0000F2
T0000ee:   MOVEQ.L   #$01,D4
T0000f0:   BRA.B     T0000F4
T0000f2:   CLR.W     D4
T0000f4:   TST.W     D4
T0000f6:   BNE.B     T00012E
T0000f8:   MOVE.W    $0010(A7),D0
T0000fc:   EXT.L     D0
T0000fe:   LSL.L     #2,D0
T000100:   MOVEA.L   $0004(A7),A0
T000104:   MOVEA.L   $0006(A0),A1
T000108:   MOVEA.L   (A1,D0.L),A0
T00010c:   JSR       Ast_delete
T000112:   MOVE.W    $0010(A7),D0
T000116:   EXT.L     D0
T000118:   LSL.L     #2,D0
T00011a:   MOVEA.L   $0004(A7),A0
T00011e:   MOVEA.L   $0006(A0),A1
T000122:   MOVE.L    A5,(A1,D0.L)
T000126:   MOVEQ.L   #$01,D3
T000128:   MOVE.W    #$0001,$0012(A2)
T00012e:   MOVEA.L   (A7),A0
T000130:   JSR       Ast_delete
T000136:   MOVEA.L   $0008(A7),A0
T00013a:   JSR       Ast_delete
T000140:   TST.W     D3
T000142:   BEQ.B     T000148
T000144:   MOVEA.L   A4,A0
T000146:   BRA.B     T00014E
T000148:   LEA.L     ,A0
T00014e:   LEA.L     $0012(A7),A7
T000152:   MOVEM.L   (A7)+,D3-D4/A2/A4-A5
T000156:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_clearValue:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   LEA.L     -$0012(A7),A7
T000008:   MOVEA.L   $0026(A7),A3
T00000c:   MOVEA.L   A0,A2
T00000e:   CLR.W     D3
T000010:   CLR.B     (A3)
T000012:   MOVE.L    $0022(A7),-(A7)
T000016:   LEA.L     $0004(A7),A0
T00001a:   JSR       InitCfgSearch
T000020:   ADDQ.W    #4,A7
T000022:   LEA.L     (A7),A1
T000024:   MOVEA.L   A2,A0
T000026:   JSR       SearchCfgString
T00002c:   MOVE.L    $0004(A7),D0
T000030:   BEQ.B     T00005E
T000032:   MOVE.W    $0010(A7),D1
T000036:   BMI.B     T00005E
T000038:   MOVE.L    $000C(A7),D2
T00003c:   BEQ.B     T00005E
T00003e:   MOVEA.L   D2,A1
T000040:   MOVEA.L   A3,A0
T000042:   JSR       strcpy
T000048:   JSR       Ast_alltrim
T00004e:   MOVE.W    $0010(A7),D0
T000052:   MOVEA.L   $0004(A7),A0
T000056:   JSR       DeleteCfgString
T00005c:   MOVE.W    D0,D3
T00005e:   MOVEA.L   (A7),A0
T000060:   JSR       Ast_delete
T000066:   MOVEA.L   $0008(A7),A0
T00006a:   JSR       Ast_delete
T000070:   TST.W     D3
T000072:   BEQ.B     T000078
T000074:   MOVEA.L   A3,A0
T000076:   BRA.B     T00007E
T000078:   LEA.L     ,A0
T00007e:   LEA.L     $0012(A7),A7
T000082:   MOVEM.L   (A7)+,D3/A2-A3
T000086:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getString:
T000000:   PEA.L     s_val
T000006:   MOVE.L    $0008(A7),-(A7)
T00000a:   BSR       Acfg_getValue
T00000e:   ADDQ.W    #8,A7
T000010:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getLong:
T000000:   LEA.L     -$2000(A7),A7
T000004:   PEA.L     (A7)
T000006:   MOVE.L    $2008(A7),-(A7)
T00000a:   BSR       Acfg_getValue
T00000e:   ADDQ.W    #8,A7
T000010:   JSR       atol
T000016:   LEA.L     $2000(A7),A7
T00001a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setLong:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   LEA.L     -$0016(A7),A7
T000008:   MOVEA.L   A0,A3
T00000a:   MOVEA.L   A1,A2
T00000c:   MOVE.L    D0,-(A7)
T00000e:   LEA.L     +$00000027,A1
T000014:   LEA.L     $0004(A7),A0
T000018:   JSR       sprintf
T00001e:   ADDQ.W    #4,A7
T000020:   PEA.L     (A7)
T000022:   MOVE.L    $0026(A7),-(A7)
T000026:   MOVEA.L   A2,A1
T000028:   MOVEA.L   A3,A0
T00002a:   BSR       Acfg_setValue
T00002e:   ADDQ.W    #8,A7
T000030:   JSR       atol
T000036:   LEA.L     $0016(A7),A7
T00003a:   MOVEA.L   (A7)+,A3
T00003c:   MOVEA.L   (A7)+,A2
T00003e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getChar:
T000000:   LEA.L     -$0034(A7),A7
T000004:   PEA.L     (A7)
T000006:   MOVE.L    $003C(A7),-(A7)
T00000a:   BSR       Acfg_getValue
T00000e:   ADDQ.W    #8,A7
T000010:   MOVE.B    (A0),D0
T000012:   LEA.L     $0034(A7),A7
T000016:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setChar:
T000000:   SUBQ.W    #2,A7
T000002:   MOVE.B    D0,(A7)
T000004:   CLR.B     $0001(A7)
T000008:   PEA.L     (A7)
T00000a:   MOVE.L    $000A(A7),-(A7)
T00000e:   BSR       Acfg_setValue
T000012:   ADDQ.W    #8,A7
T000014:   MOVE.B    (A0),D0
T000016:   ADDQ.W    #2,A7
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getBool:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$000A(A7),A7
T000006:   MOVEA.L   A1,A2
T000008:   LEA.L     +$0000002B,A1
T00000e:   MOVE.L    A1,-(A7)
T000010:   PEA.L     $0004(A7)
T000014:   MOVE.L    $001A(A7),-(A7)
T000018:   MOVEA.L   A2,A1
T00001a:   BSR       Acfg_getValue
T00001e:   ADDQ.W    #8,A7
T000020:   MOVEA.L   (A7)+,A1
T000022:   JSR       Ast_icmp
T000028:   TST.W     D0
T00002a:   BNE.B     T000030
T00002c:   MOVEQ.L   #$01,D0
T00002e:   BRA.B     T000032
T000030:   CLR.W     D0
T000032:   LEA.L     $000A(A7),A7
T000036:   MOVEA.L   (A7)+,A2
T000038:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setBool:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   LEA.L     +$0000002B,A1
T00000e:   MOVE.L    A1,-(A7)
T000010:   TST.W     D0
T000012:   BEQ.B     T000016
T000014:   BRA.B     T00001C
T000016:   LEA.L     +$00000030,A1
T00001c:   MOVE.L    A1,-(A7)
T00001e:   MOVE.L    $0014(A7),-(A7)
T000022:   MOVEA.L   A2,A1
T000024:   MOVEA.L   A3,A0
T000026:   BSR       Acfg_setValue
T00002a:   ADDQ.W    #8,A7
T00002c:   MOVEA.L   (A7)+,A1
T00002e:   JSR       Ast_icmp
T000034:   TST.W     D0
T000036:   BNE.B     T00003C
T000038:   MOVEQ.L   #$01,D0
T00003a:   BRA.B     T00003E
T00003c:   CLR.W     D0
T00003e:   MOVEA.L   (A7)+,A3
T000040:   MOVEA.L   (A7)+,A2
T000042:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_isChanged:
T000000:   MOVE.W    $0012(A0),D0
T000004:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_grpAnzahl:
T000000:   MOVE.W    $0014(A0),D0
T000004:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_grpName:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A1,A3
T000006:   MOVEA.L   A0,A2
T000008:   TST.W     D0
T00000a:   BMI.B     T00002A
T00000c:   CMP.W     $0014(A2),D0
T000010:   BGE.B     T00002A
T000012:   EXT.L     D0
T000014:   LSL.L     #2,D0
T000016:   MOVEA.L   $0016(A2),A1
T00001a:   MOVEA.L   (A1,D0.L),A0
T00001e:   MOVEA.L   (A0),A1
T000020:   MOVEA.L   A3,A0
T000022:   JSR       strcpy
T000028:   BRA.B     T00002C
T00002a:   SUBA.L    A0,A0
T00002c:   MOVEA.L   (A7)+,A3
T00002e:   MOVEA.L   (A7)+,A2
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_strAnzahl:
T000000:   TST.W     D0
T000002:   BMI.B     T00001E
T000004:   CMP.W     $0014(A0),D0
T000008:   BGE.B     T00001E
T00000a:   MOVE.W    D0,D1
T00000c:   EXT.L     D1
T00000e:   LSL.L     #2,D1
T000010:   MOVEA.L   $0016(A0),A1
T000014:   MOVEA.L   (A1,D1.L),A1
T000018:   MOVE.W    $0004(A1),D0
T00001c:   RTS
T00001e:   CLR.W     D0
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_isGroupPresent:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0012(A7),A7
T000006:   MOVEA.L   A0,A2
T000008:   PEA.L     
T00000e:   LEA.L     $0004(A7),A0
T000012:   JSR       InitCfgSearch
T000018:   ADDQ.W    #4,A7
T00001a:   LEA.L     (A7),A1
T00001c:   MOVEA.L   A2,A0
T00001e:   JSR       SearchGruppe
T000024:   MOVE.L    A0,D0
T000026:   BNE.B     T00002C
T000028:   CLR.W     D0
T00002a:   BRA.B     T00002E
T00002c:   MOVEQ.L   #$01,D0
T00002e:   LEA.L     $0012(A7),A7
T000032:   MOVEA.L   (A7)+,A2
T000034:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_isStringPresent:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0012(A7),A7
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    $001A(A7),-(A7)
T00000c:   LEA.L     $0004(A7),A0
T000010:   JSR       InitCfgSearch
T000016:   ADDQ.W    #4,A7
T000018:   LEA.L     (A7),A1
T00001a:   MOVEA.L   A2,A0
T00001c:   JSR       SearchCfgString
T000022:   CMPI.W    #$FFFF,$0010(A7)
T000028:   BNE.B     T00002E
T00002a:   CLR.W     D0
T00002c:   BRA.B     T000030
T00002e:   MOVEQ.L   #$01,D0
T000030:   LEA.L     $0012(A7),A7
T000034:   MOVEA.L   (A7)+,A2
T000036:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_strName:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVE.W    D0,D3
T000008:   MOVE.W    D1,D4
T00000a:   MOVEA.L   A1,A2
T00000c:   CLR.B     (A1)
T00000e:   TST.W     D0
T000010:   BMI.B     T00006C
T000012:   CMP.W     $0014(A0),D0
T000016:   BGE.B     T00006C
T000018:   EXT.L     D0
T00001a:   LSL.L     #2,D0
T00001c:   MOVEA.L   $0016(A0),A1
T000020:   MOVEA.L   (A1,D0.L),A3
T000024:   TST.W     D1
T000026:   BMI.B     T00006C
T000028:   CMP.W     $0004(A3),D1
T00002c:   BGE.B     T00006C
T00002e:   MOVE.W    D3,D0
T000030:   JSR       Acfg_strIsComment
T000036:   TST.W     D0
T000038:   BNE.B     T00006C
T00003a:   MOVE.W    D4,D0
T00003c:   EXT.L     D0
T00003e:   LSL.L     #2,D0
T000040:   MOVEA.L   $0006(A3),A0
T000044:   MOVEA.L   (A0,D0.L),A3
T000048:   MOVEA.L   A3,A0
T00004a:   MOVEQ.L   #$3D,D0
T00004c:   JSR       strchr
T000052:   MOVEA.L   A0,A4
T000054:   MOVE.L    A4,D0
T000056:   BEQ.B     T00006C
T000058:   SUB.L     A3,D0
T00005a:   MOVEA.L   A3,A1
T00005c:   MOVEA.L   A2,A0
T00005e:   JSR       strncpy
T000064:   MOVEA.L   A4,A0
T000066:   SUBA.L    A3,A0
T000068:   CLR.B     (A2,A0.L)
T00006c:   MOVEA.L   A2,A0
T00006e:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000072:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_strValue:
T000000:   MOVEM.L   D3-D4/A3-A4,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   MOVE.W    D1,D4
T000008:   MOVEA.L   A1,A3
T00000a:   CLR.B     (A1)
T00000c:   TST.W     D0
T00000e:   BMI.B     T000082
T000010:   CMP.W     $0014(A0),D0
T000014:   BGE.B     T000082
T000016:   EXT.L     D0
T000018:   LSL.L     #2,D0
T00001a:   MOVEA.L   $0016(A0),A1
T00001e:   MOVEA.L   (A1,D0.L),A4
T000022:   TST.W     D1
T000024:   BMI.B     T000082
T000026:   CMP.W     $0004(A4),D1
T00002a:   BGE.B     T000082
T00002c:   MOVE.W    D3,D0
T00002e:   JSR       Acfg_strIsComment
T000034:   TST.W     D0
T000036:   BEQ.B     T000058
T000038:   MOVE.W    D4,D0
T00003a:   EXT.L     D0
T00003c:   LSL.L     #2,D0
T00003e:   MOVEA.L   $0006(A4),A0
T000042:   MOVEA.L   (A0,D0.L),A1
T000046:   MOVEA.L   A3,A0
T000048:   JSR       strcpy
T00004e:   MOVEA.L   A3,A0
T000050:   JSR       Ast_alltrim
T000056:   BRA.B     T000082
T000058:   MOVE.W    D4,D0
T00005a:   EXT.L     D0
T00005c:   LSL.L     #2,D0
T00005e:   MOVEA.L   $0006(A4),A0
T000062:   MOVEA.L   (A0,D0.L),A4
T000066:   MOVEA.L   A4,A0
T000068:   MOVEQ.L   #$3D,D0
T00006a:   JSR       strchr
T000070:   MOVEA.L   A0,A4
T000072:   MOVE.L    A4,D0
T000074:   BEQ.B     T000082
T000076:   ADDQ.W    #1,A4
T000078:   MOVEA.L   A4,A1
T00007a:   MOVEA.L   A3,A0
T00007c:   JSR       strcpy
T000082:   MOVEA.L   A3,A0
T000084:   MOVEM.L   (A7)+,D3-D4/A3-A4
T000088:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_strIsComment:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   CLR.W     D3
T000008:   TST.W     D0
T00000a:   BMI.B     T000060
T00000c:   CMP.W     $0014(A2),D0
T000010:   BGE.B     T000060
T000012:   MOVE.W    D0,D2
T000014:   EXT.L     D2
T000016:   LSL.L     #2,D2
T000018:   MOVEA.L   $0016(A2),A1
T00001c:   MOVEA.L   (A1,D2.L),A0
T000020:   TST.W     D1
T000022:   BMI.B     T000060
T000024:   CMP.W     $0004(A0),D1
T000028:   BGE.B     T000060
T00002a:   MOVE.W    D1,D0
T00002c:   EXT.L     D0
T00002e:   LSL.L     #2,D0
T000030:   MOVEA.L   $0006(A0),A1
T000034:   MOVEA.L   (A1,D0.L),A3
T000038:   BRA.B     T00003C
T00003a:   ADDQ.W    #1,A3
T00003c:   MOVE.B    (A3),D0
T00003e:   BEQ.B     T00004A
T000040:   JSR       Ach_isWhite
T000046:   TST.W     D0
T000048:   BNE.B     T00003A
T00004a:   MOVE.B    (A3),D0
T00004c:   BEQ.B     T000060
T00004e:   EXT.W     D0
T000050:   MOVEA.L   $0004(A2),A0
T000054:   JSR       strchr
T00005a:   MOVE.L    A0,D0
T00005c:   BEQ.B     T000060
T00005e:   MOVEQ.L   #$01,D3
T000060:   MOVE.W    D3,D0
T000062:   MOVEM.L   (A7)+,D3/A2-A3
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_clearHeader:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   CLR.W     D3
T000008:   BRA.B     T000020
T00000a:   MOVE.W    D3,D0
T00000c:   EXT.L     D0
T00000e:   LSL.L     #2,D0
T000010:   MOVEA.L   $001E(A2),A0
T000014:   MOVEA.L   (A0,D0.L),A0
T000018:   JSR       Ast_delete
T00001e:   ADDQ.W    #1,D3
T000020:   CMP.W     $001C(A2),D3
T000024:   BLT.B     T00000A
T000026:   MOVEA.L   $001E(A2),A0
T00002a:   JSR       Ax_free
T000030:   CLR.L     $001E(A2)
T000034:   CLR.W     $001C(A2)
T000038:   MOVEA.L   (A7)+,A2
T00003a:   MOVE.W    (A7)+,D3
T00003c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_headAnzahl:
T000000:   MOVE.W    $001C(A0),D0
T000004:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_setHeader:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D3
T000008:   MOVEA.L   A1,A4
T00000a:   MOVEA.L   A0,A2
T00000c:   BSR       Acfg_clearHeader
T000010:   MOVE.W    D3,D0
T000012:   EXT.L     D0
T000014:   LSL.L     #2,D0
T000016:   JSR       Ax_malloc
T00001c:   MOVEA.L   A0,A3
T00001e:   MOVE.L    A3,D0
T000020:   BNE.B     T000026
T000022:   SUBA.L    A0,A0
T000024:   BRA.B     T00006A
T000026:   MOVE.W    D3,D1
T000028:   EXT.L     D1
T00002a:   LSL.L     #2,D1
T00002c:   CLR.W     D0
T00002e:   MOVEA.L   A3,A0
T000030:   JSR       memset
T000036:   MOVE.W    D3,$001C(A2)
T00003a:   MOVE.L    A3,$001E(A2)
T00003e:   CLR.W     D4
T000040:   BRA.B     T000064
T000042:   MOVE.W    D4,D0
T000044:   EXT.L     D0
T000046:   LSL.L     #2,D0
T000048:   MOVEA.L   (A4,D0.L),A0
T00004c:   JSR       Ast_create
T000052:   JSR       Ast_alltrim
T000058:   MOVE.W    D4,D0
T00005a:   EXT.L     D0
T00005c:   LSL.L     #2,D0
T00005e:   MOVE.L    A0,(A3,D0.L)
T000062:   ADDQ.W    #1,D4
T000064:   CMP.W     D4,D3
T000066:   BGT.B     T000042
T000068:   MOVEA.L   A4,A0
T00006a:   MOVEM.L   (A7)+,D3-D4/A2-A4
T00006e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_getHeader:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A1,A3
T000006:   MOVEA.L   A0,A2
T000008:   CLR.W     D3
T00000a:   BRA.B     T000032
T00000c:   MOVE.W    D3,D0
T00000e:   EXT.L     D0
T000010:   LSL.L     #2,D0
T000012:   MOVEA.L   $001E(A2),A0
T000016:   MOVEA.L   (A0,D0.L),A0
T00001a:   JSR       Ast_create
T000020:   JSR       Ast_alltrim
T000026:   MOVE.W    D3,D0
T000028:   EXT.L     D0
T00002a:   LSL.L     #2,D0
T00002c:   MOVE.L    A0,(A3,D0.L)
T000030:   ADDQ.W    #1,D3
T000032:   CMP.W     $001C(A2),D3
T000036:   BLT.B     T00000C
T000038:   MOVEA.L   A3,A0
T00003a:   MOVEM.L   (A7)+,D3/A2-A3
T00003e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Acfg_isCfgfile:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A1,A3
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.W    $000E(A2),D0
T00000c:   BEQ.B     T000018
T00000e:   MOVEA.L   (A0),A0
T000010:   JSR       Ast_cmp
T000016:   BRA.B     T000022
T000018:   MOVEA.L   A3,A1
T00001a:   MOVEA.L   (A2),A0
T00001c:   JSR       Ast_icmp
T000022:   MOVEA.L   (A7)+,A3
T000024:   MOVEA.L   (A7)+,A2
T000026:   RTS

          .ENDMOD


          .MODULE LOCAL

InitCfgSearch:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   CLR.L     -(A7)
T00000a:   LEA.L     +$0000000C,A1
T000010:   MOVE.L    A1,-(A7)
T000012:   MOVEA.L   A2,A0
T000014:   JSR       Ast_create
T00001a:   JSR       Ast_alltrim
T000020:   MOVEA.L   (A7)+,A1
T000022:   JSR       Ast_filter
T000028:   ADDQ.W    #4,A7
T00002a:   MOVE.L    A0,(A3)
T00002c:   CLR.L     $0004(A3)
T000030:   CLR.L     -(A7)
T000032:   LEA.L     +$00000025,A1
T000038:   MOVE.L    A1,-(A7)
T00003a:   MOVEA.L   $0014(A7),A0
T00003e:   JSR       Ast_create
T000044:   JSR       Ast_alltrim
T00004a:   MOVEA.L   (A7)+,A1
T00004c:   JSR       Ast_filter
T000052:   ADDQ.W    #4,A7
T000054:   MOVE.L    A0,$0008(A3)
T000058:   CLR.L     $000C(A3)
T00005c:   MOVE.W    #$FFFF,$0010(A3)
T000062:   MOVEA.L   A3,A0
T000064:   MOVEA.L   (A7)+,A3
T000066:   MOVEA.L   (A7)+,A2
T000068:   RTS

          .ENDMOD


          .MODULE LOCAL

SearchCfgString:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   CLR.L     $000C(A2)
T00000c:   MOVE.W    #$FFFF,$0010(A2)
T000012:   JSR       SearchGruppe
T000018:   MOVE.L    A0,$0004(A2)
T00001c:   MOVE.L    A0,D0
T00001e:   BEQ.B     T000034
T000020:   MOVE.L    $0006(A0),-(A7)
T000024:   MOVE.W    $0004(A0),D0
T000028:   MOVEA.L   A2,A1
T00002a:   MOVEA.L   A3,A0
T00002c:   JSR       SearchCfgNameInStrings
T000032:   ADDQ.W    #4,A7
T000034:   MOVEA.L   (A7)+,A3
T000036:   MOVEA.L   (A7)+,A2
T000038:   RTS

          .ENDMOD


          .MODULE LOCAL

SearchCfgNameInStrings:
T000000:   MOVEM.L   D3-D4/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A5
T000006:   MOVEA.L   A1,A4
T000008:   MOVE.W    D0,D3
T00000a:   MOVEA.L   $001C(A7),A0
T00000e:   SUBA.L    A2,A2
T000010:   TST.W     D0
T000012:   BLE.B     T000018
T000014:   MOVE.L    A0,D1
T000016:   BNE.B     T000022
T000018:   CMP.W     #$FFFF,D3
T00001c:   BNE.B     T000070
T00001e:   MOVE.L    A0,D0
T000020:   BEQ.B     T000070
T000022:   CLR.W     D4
T000024:   MOVEA.L   A0,A2
T000026:   SUBA.L    A3,A3
T000028:   BRA.B     T00004C
T00002a:   MOVE.L    (A2),D0
T00002c:   BEQ.B     T000048
T00002e:   MOVEA.L   D0,A0
T000030:   MOVE.B    (A0),D1
T000032:   BEQ.B     T000048
T000034:   MOVE.L    A4,-(A7)
T000036:   MOVEA.L   D0,A1
T000038:   MOVEA.L   A5,A0
T00003a:   JSR       SearchCfgName
T000040:   ADDQ.W    #4,A7
T000042:   MOVEA.L   A0,A3
T000044:   MOVE.L    A3,D0
T000046:   BNE.B     T000064
T000048:   ADDQ.W    #1,D4
T00004a:   ADDQ.W    #4,A2
T00004c:   TST.W     D3
T00004e:   BLE.B     T000054
T000050:   CMP.W     D4,D3
T000052:   BGT.B     T00002A
T000054:   CMP.W     #$FFFF,D3
T000058:   BNE.B     T000064
T00005a:   MOVE.L    (A2),D0
T00005c:   BEQ.B     T000064
T00005e:   MOVEA.L   D0,A0
T000060:   MOVE.B    (A0),D1
T000062:   BNE.B     T00002A
T000064:   MOVE.L    A3,D0
T000066:   BEQ.B     T000070
T000068:   MOVE.L    D0,$000C(A4)
T00006c:   MOVE.W    D4,$0010(A4)
T000070:   MOVEM.L   (A7)+,D3-D4/A2-A5
T000074:   RTS

          .ENDMOD


          .MODULE LOCAL

SearchGruppe:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   MOVE.L    A2,D0
T00000a:   BNE.B     T000010
T00000c:   SUBA.L    A0,A0
T00000e:   BRA.B     T00006E
T000010:   CLR.W     D4
T000012:   MOVE.W    D4,D3
T000014:   BRA.B     T00005A
T000016:   MOVE.W    D3,D0
T000018:   EXT.L     D0
T00001a:   LSL.L     #2,D0
T00001c:   MOVEA.L   $0016(A3),A0
T000020:   MOVEA.L   (A0,D0.L),A4
T000024:   MOVE.W    $000C(A3),D1
T000028:   BEQ.B     T000040
T00002a:   MOVEA.L   (A2),A1
T00002c:   MOVEA.L   (A4),A0
T00002e:   JSR       Ast_cmp
T000034:   TST.W     D0
T000036:   BNE.B     T00003C
T000038:   MOVEQ.L   #$01,D4
T00003a:   BRA.B     T00003E
T00003c:   CLR.W     D4
T00003e:   BRA.B     T000054
T000040:   MOVEA.L   (A2),A1
T000042:   MOVEA.L   (A4),A0
T000044:   JSR       Ast_icmp
T00004a:   TST.W     D0
T00004c:   BNE.B     T000052
T00004e:   MOVEQ.L   #$01,D4
T000050:   BRA.B     T000054
T000052:   CLR.W     D4
T000054:   TST.W     D4
T000056:   BNE.B     T000064
T000058:   ADDQ.W    #1,D3
T00005a:   TST.W     D4
T00005c:   BNE.B     T000064
T00005e:   CMP.W     $0014(A3),D3
T000062:   BLT.B     T000016
T000064:   TST.W     D4
T000066:   BEQ.B     T00006C
T000068:   MOVEA.L   A4,A0
T00006a:   BRA.B     T00006E
T00006c:   SUBA.L    A0,A0
T00006e:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000072:   RTS

          .ENDMOD


          .MODULE LOCAL

SearchCfgName:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A2
T000008:   BRA.B     T00000C
T00000a:   ADDQ.W    #1,A2
T00000c:   MOVE.B    (A2),D0
T00000e:   BEQ.B     T00001A
T000010:   JSR       Ach_isWhite
T000016:   TST.W     D0
T000018:   BNE.B     T00000A
T00001a:   MOVE.B    (A2),D0
T00001c:   BEQ.B     T000030
T00001e:   EXT.W     D0
T000020:   MOVEA.L   $0004(A3),A0
T000024:   JSR       strchr
T00002a:   MOVE.L    A0,D0
T00002c:   BNE       T0000B6
T000030:   MOVEA.L   $0014(A7),A0
T000034:   MOVEA.L   $0008(A0),A4
T000038:   MOVEQ.L   #$01,D3
T00003a:   BRA.B     T000070
T00003c:   MOVE.W    $000C(A3),D0
T000040:   BEQ.B     T000050
T000042:   MOVE.B    (A2),D1
T000044:   CMP.B     (A4),D1
T000046:   BNE.B     T00004C
T000048:   MOVEQ.L   #$01,D3
T00004a:   BRA.B     T00004E
T00004c:   CLR.W     D3
T00004e:   BRA.B     T00006C
T000050:   MOVE.B    (A4),D0
T000052:   JSR       Ach_toupper
T000058:   MOVE.B    D0,-(A7)
T00005a:   MOVE.B    (A2),D0
T00005c:   JSR       Ach_toupper
T000062:   CMP.B     (A7)+,D0
T000064:   BNE.B     T00006A
T000066:   MOVEQ.L   #$01,D3
T000068:   BRA.B     T00006C
T00006a:   CLR.W     D3
T00006c:   ADDQ.W    #1,A4
T00006e:   ADDQ.W    #1,A2
T000070:   TST.W     D3
T000072:   BEQ.B     T000086
T000074:   MOVE.B    (A4),D0
T000076:   BEQ.B     T000086
T000078:   CMPI.B    #$3D,(A2)
T00007c:   BEQ.B     T000086
T00007e:   MOVE.B    (A2),D1
T000080:   BNE.B     T00003C
T000082:   BRA.B     T000086
T000084:   ADDQ.W    #1,A2
T000086:   TST.W     D3
T000088:   BEQ.B     T00009E
T00008a:   MOVE.B    (A2),D0
T00008c:   BEQ.B     T00009E
T00008e:   JSR       Ach_isWhite
T000094:   TST.W     D0
T000096:   BEQ.B     T00009E
T000098:   CMPI.B    #$3D,(A2)
T00009c:   BNE.B     T000084
T00009e:   TST.W     D3
T0000a0:   BEQ.B     T0000B6
T0000a2:   MOVE.B    (A2),D0
T0000a4:   BEQ.B     T0000B6
T0000a6:   CMP.B     #$3D,D0
T0000aa:   BNE.B     T0000B6
T0000ac:   CMP.B     #$3D,D0
T0000b0:   BNE.B     T0000BA
T0000b2:   MOVE.B    (A4),D1
T0000b4:   BEQ.B     T0000BA
T0000b6:   SUBA.L    A0,A0
T0000b8:   BRA.B     T0000BE
T0000ba:   ADDQ.W    #1,A2
T0000bc:   MOVEA.L   A2,A0
T0000be:   MOVEM.L   (A7)+,D3/A2-A4
T0000c2:   RTS

          .ENDMOD


          .MODULE LOCAL

CreateCfgGruppe:
T000000:   MOVEM.L   D3/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVEQ.L   #$0A,D0
T00000a:   JSR       Ax_malloc
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000054
T000016:   CLR.W     $0004(A2)
T00001a:   CLR.L     $0006(A2)
T00001e:   MOVEA.L   A3,A0
T000020:   JSR       Ast_create
T000026:   MOVE.L    A0,(A2)
T000028:   MOVE.L    A0,D0
T00002a:   BEQ.B     T00004C
T00002c:   MOVE.W    $0014(A4),D3
T000030:   MOVEQ.L   #$01,D0
T000032:   ADD.W     D3,D0
T000034:   EXT.L     D0
T000036:   LSL.L     #2,D0
T000038:   JSR       Ax_malloc
T00003e:   MOVEA.L   A0,A5
T000040:   MOVE.L    A5,D0
T000042:   BNE.B     T000058
T000044:   MOVEA.L   (A2),A0
T000046:   JSR       Ast_delete
T00004c:   MOVEA.L   A2,A0
T00004e:   JSR       Ax_free
T000054:   SUBA.L    A0,A0
T000056:   BRA.B     T000088
T000058:   MOVE.W    D3,D0
T00005a:   EXT.L     D0
T00005c:   LSL.L     #2,D0
T00005e:   MOVEA.L   $0016(A4),A1
T000062:   MOVEA.L   A5,A0
T000064:   JSR       memcpy
T00006a:   MOVE.W    D3,D0
T00006c:   EXT.L     D0
T00006e:   LSL.L     #2,D0
T000070:   MOVE.L    A2,(A5,D0.L)
T000074:   MOVEA.L   $0016(A4),A0
T000078:   JSR       Ax_free
T00007e:   MOVE.L    A5,$0016(A4)
T000082:   ADDQ.W    #1,$0014(A4)
T000086:   MOVEA.L   A2,A0
T000088:   MOVEM.L   (A7)+,D3/A2-A5
T00008c:   RTS

          .ENDMOD


          .MODULE LOCAL

CreateCfgString:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A4
T000008:   MOVE.W    $0004(A2),D3
T00000c:   MOVEQ.L   #$01,D0
T00000e:   ADD.W     D3,D0
T000010:   EXT.L     D0
T000012:   LSL.L     #2,D0
T000014:   JSR       Ax_malloc
T00001a:   MOVEA.L   A0,A3
T00001c:   MOVE.L    A3,D0
T00001e:   BNE.B     T000024
T000020:   CLR.W     D0
T000022:   BRA.B     T000054
T000024:   MOVE.W    D3,D0
T000026:   EXT.L     D0
T000028:   LSL.L     #2,D0
T00002a:   MOVEA.L   $0006(A2),A1
T00002e:   MOVEA.L   A3,A0
T000030:   JSR       memcpy
T000036:   MOVE.W    D3,D0
T000038:   EXT.L     D0
T00003a:   LSL.L     #2,D0
T00003c:   MOVE.L    A4,(A3,D0.L)
T000040:   MOVEA.L   $0006(A2),A0
T000044:   JSR       Ax_free
T00004a:   MOVE.L    A3,$0006(A2)
T00004e:   ADDQ.W    #1,$0004(A2)
T000052:   MOVEQ.L   #$01,D0
T000054:   MOVEM.L   (A7)+,D3/A2-A4
T000058:   RTS

          .ENDMOD


          .MODULE LOCAL

DeleteCfgString:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVE.W    D0,D4
T000008:   MOVEQ.L   #-$01,D3
T00000a:   ADD.W     $0004(A2),D3
T00000e:   MOVE.W    D3,D0
T000010:   EXT.L     D0
T000012:   LSL.L     #2,D0
T000014:   JSR       Ax_malloc
T00001a:   MOVEA.L   A0,A3
T00001c:   MOVE.L    A3,D0
T00001e:   BNE.B     T000024
T000020:   CLR.W     D0
T000022:   BRA.B     T000056
T000024:   CLR.W     D0
T000026:   MOVEA.L   A3,A0
T000028:   BRA.B     T00003E
T00002a:   CMP.W     D0,D4
T00002c:   BEQ.B     T00003C
T00002e:   MOVE.W    D0,D1
T000030:   EXT.L     D1
T000032:   LSL.L     #2,D1
T000034:   MOVEA.L   $0006(A2),A1
T000038:   MOVE.L    (A1,D1.L),(A0)+
T00003c:   ADDQ.W    #1,D0
T00003e:   CMP.W     D0,D3
T000040:   BGE.B     T00002A
T000042:   MOVEA.L   $0006(A2),A0
T000046:   JSR       Ax_free
T00004c:   MOVE.L    A3,$0006(A2)
T000050:   SUBQ.W    #1,$0004(A2)
T000054:   MOVEQ.L   #$01,D0
T000056:   MOVEM.L   (A7)+,D3-D4/A2-A3
T00005a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_cfgfile:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   LEA.L     ACSblk,A2
T00000c:   LEA.L     scrap,A3
T000012:   MOVEA.L   (A2),A0
T000014:   LEA.L     $0214(A0),A0
T000018:   JSR       Ast_isEmpty
T00001e:   TST.W     D0
T000020:   BNE.B     T000034
T000022:   MOVEA.L   (A2),A0
T000024:   LEA.L     $0214(A0),A0
T000028:   JSR       Af_length
T00002e:   MOVEQ.L   #-$01,D1
T000030:   CMP.L     D0,D1
T000032:   BLE.B     T000064
T000034:   MOVEA.L   (A2),A0
T000036:   MOVE.B    $0294(A0),D0
T00003a:   BNE.B     T000054
T00003c:   LEA.L     ,A1
T000042:   MOVEA.L   A3,A0
T000044:   JSR       strcpy
T00004a:   JSR       Dgetdrv
T000050:   ADD.B     D0,(A3)
T000052:   BRA.B     T000072
T000054:   MOVEA.L   (A2),A1
T000056:   LEA.L     $0294(A1),A1
T00005a:   MOVEA.L   A3,A0
T00005c:   JSR       strcpy
T000062:   BRA.B     T000072
T000064:   MOVEA.L   (A2),A1
T000066:   LEA.L     $0214(A1),A1
T00006a:   MOVEA.L   A3,A0
T00006c:   JSR       strcpy
T000072:   MOVEA.L   A4,A1
T000074:   MOVEA.L   A3,A0
T000076:   JSR       strcat
T00007c:   LEA.L     +$00000004,A1
T000082:   MOVEA.L   A3,A0
T000084:   JSR       strcat
T00008a:   MOVEA.L   A3,A0
T00008c:   MOVEM.L   (A7)+,A2-A4
T000090:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_2drv:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVEA.L   A0,A2
T000004:   CMPI.B    #$3A,$0001(A2)
T00000a:   BNE.B     T00002A
T00000c:   MOVE.B    (A0),D0
T00000e:   EXT.W     D0
T000010:   JSR       isalpha
T000016:   TST.W     D0
T000018:   BEQ.B     T00002A
T00001a:   MOVE.B    (A2),D0
T00001c:   EXT.W     D0
T00001e:   JSR       toupper
T000024:   ADD.W     #$FFBF,D0
T000028:   BRA.B     T000030
T00002a:   JSR       Dgetdrv
T000030:   MOVEA.L   (A7)+,A2
T000032:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_2path:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A4
T000008:   MOVEQ.L   #$5C,D0
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strchr
T000012:   MOVEA.L   A0,A2
T000014:   MOVE.L    A2,D0
T000016:   BNE.B     T000046
T000018:   MOVEA.L   A3,A0
T00001a:   CLR.W     D0
T00001c:   JSR       Dgetpath
T000022:   MOVEA.L   A3,A0
T000024:   JSR       strlen
T00002a:   SUBQ.L    #1,D0
T00002c:   CMPI.B    #$5C,(A3,D0.L)
T000032:   BEQ       T0000AA
T000036:   LEA.L     +$00000002,A1
T00003c:   MOVEA.L   A3,A0
T00003e:   JSR       strcat
T000044:   BRA.B     T0000AA
T000046:   MOVE.B    (A4),D0
T000048:   EXT.W     D0
T00004a:   JSR       isascii
T000050:   TST.W     D0
T000052:   BEQ.B     T00006A
T000054:   MOVE.B    (A4),D0
T000056:   EXT.W     D0
T000058:   JSR       isalnum
T00005e:   TST.W     D0
T000060:   BEQ.B     T00006A
T000062:   CMPI.B    #$3A,$0001(A4)
T000068:   BEQ.B     T00006C
T00006a:   MOVEA.L   A4,A2
T00006c:   MOVEQ.L   #$02,D0
T00006e:   LEA.L     +$00000009,A1
T000074:   MOVEA.L   A4,A0
T000076:   JSR       Ast_ncmp
T00007c:   TST.W     D0
T00007e:   BNE.B     T00008C
T000080:   CLR.W     D0
T000082:   MOVEA.L   A3,A0
T000084:   JSR       Dgetpath
T00008a:   BRA.B     T00008E
T00008c:   CLR.B     (A3)
T00008e:   MOVEQ.L   #$5C,D0
T000090:   MOVEA.L   A4,A0
T000092:   JSR       strrchr
T000098:   MOVEA.L   A0,A4
T00009a:   MOVE.L    A4,D0
T00009c:   SUB.L     A2,D0
T00009e:   ADDQ.L    #1,D0
T0000a0:   MOVEA.L   A2,A1
T0000a2:   MOVEA.L   A3,A0
T0000a4:   JSR       strncat
T0000aa:   MOVEA.L   A3,A0
T0000ac:   MOVEM.L   (A7)+,A2-A4
T0000b0:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_2name:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVEQ.L   #$5C,D0
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strrchr
T000012:   MOVEA.L   A0,A2
T000014:   MOVE.L    A2,D0
T000016:   BNE.B     T00002C
T000018:   MOVEA.L   A3,A0
T00001a:   MOVEQ.L   #$3A,D0
T00001c:   JSR       strrchr
T000022:   MOVEA.L   A0,A2
T000024:   MOVE.L    A2,D0
T000026:   BNE.B     T00002C
T000028:   MOVEA.L   A3,A2
T00002a:   BRA.B     T00002E
T00002c:   ADDQ.W    #1,A2
T00002e:   MOVEQ.L   #$2E,D0
T000030:   MOVEA.L   A2,A0
T000032:   JSR       strrchr
T000038:   MOVEA.L   A0,A3
T00003a:   MOVE.L    A3,D0
T00003c:   BNE.B     T00004A
T00003e:   MOVEA.L   A2,A1
T000040:   MOVEA.L   A4,A0
T000042:   JSR       strcpy
T000048:   BRA.B     T000060
T00004a:   MOVE.L    A3,D0
T00004c:   SUB.L     A2,D0
T00004e:   MOVEA.L   A2,A1
T000050:   MOVEA.L   A4,A0
T000052:   JSR       strncpy
T000058:   MOVEA.L   A3,A0
T00005a:   SUBA.L    A2,A0
T00005c:   CLR.B     (A4,A0.L)
T000060:   MOVEA.L   A4,A0
T000062:   MOVEM.L   (A7)+,A2-A4
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_2fullname:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A2
T000008:   MOVEQ.L   #$5C,D0
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strrchr
T000012:   MOVEA.L   A0,A3
T000014:   MOVE.L    A3,D0
T000016:   BNE.B     T00002C
T000018:   MOVEA.L   A2,A0
T00001a:   MOVEQ.L   #$3A,D0
T00001c:   JSR       strrchr
T000022:   MOVEA.L   A0,A3
T000024:   MOVE.L    A3,D0
T000026:   BNE.B     T00002C
T000028:   MOVEA.L   A2,A3
T00002a:   BRA.B     T00002E
T00002c:   ADDQ.W    #1,A3
T00002e:   MOVEA.L   A3,A1
T000030:   MOVEA.L   A4,A0
T000032:   JSR       strcpy
T000038:   MOVEA.L   A4,A0
T00003a:   MOVEM.L   (A7)+,A2-A4
T00003e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_2ext:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVEQ.L   #$5C,D0
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strrchr
T000012:   MOVEA.L   A0,A2
T000014:   MOVEQ.L   #$2E,D0
T000016:   MOVEA.L   A3,A0
T000018:   JSR       strrchr
T00001e:   MOVEA.L   A0,A3
T000020:   MOVE.L    A3,D0
T000022:   BEQ.B     T000028
T000024:   CMP.L     A2,D0
T000026:   BCC.B     T000038
T000028:   LEA.L     +$00000003,A1
T00002e:   MOVEA.L   A4,A0
T000030:   JSR       strcpy
T000036:   BRA.B     T000044
T000038:   LEA.L     $0001(A3),A1
T00003c:   MOVEA.L   A4,A0
T00003e:   JSR       strcpy
T000044:   MOVEA.L   A4,A0
T000046:   MOVEM.L   (A7)+,A2-A4
T00004a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_buildname:
T000000:   MOVEM.L   D3-D4/A2-A6,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D4
T000008:   MOVEA.L   A1,A4
T00000a:   MOVEA.L   $0020(A7),A5
T00000e:   MOVEA.L   $0024(A7),A6
T000012:   MOVEQ.L   #$03,D3
T000014:   LEA.L     ,A2
T00001a:   MOVEA.L   A2,A1
T00001c:   MOVEA.L   A3,A0
T00001e:   JSR       strcpy
T000024:   TST.W     D4
T000026:   BMI.B     T00002C
T000028:   ADD.B     D4,(A3)
T00002a:   BRA.B     T000034
T00002c:   JSR       Dgetdrv
T000032:   ADD.B     D0,(A3)
T000034:   MOVE.L    A4,D0
T000036:   BEQ.B     T00003C
T000038:   MOVE.B    (A4),D1
T00003a:   BNE.B     T000064
T00003c:   MOVE.B    (A3),D0
T00003e:   EXT.W     D0
T000040:   ADD.W     #$FFC0,D0
T000044:   LEA.L     $0002(A3),A0
T000048:   JSR       Dgetpath
T00004e:   LEA.L     $0002(A2),A1
T000052:   MOVEA.L   A3,A0
T000054:   JSR       strcat
T00005a:   JSR       strlen
T000060:   MOVE.L    D0,D3
T000062:   BRA.B     T00009E
T000064:   CMPI.B    #$5C,(A4)
T000068:   BNE.B     T000070
T00006a:   LEA.L     $0001(A4),A1
T00006e:   BRA.B     T000072
T000070:   MOVEA.L   A4,A1
T000072:   LEA.L     (A3,D3.L),A0
T000076:   JSR       strcpy
T00007c:   MOVEA.L   A3,A0
T00007e:   JSR       strlen
T000084:   MOVE.L    D0,D3
T000086:   CMPI.B    #$5C,-$01(A3,D3.L)
T00008c:   BEQ.B     T00009E
T00008e:   LEA.L     $0002(A2),A1
T000092:   LEA.L     (A3,D3.L),A0
T000096:   JSR       strcpy
T00009c:   ADDQ.L    #1,D3
T00009e:   MOVE.L    A5,D0
T0000a0:   BEQ.B     T0000DE
T0000a2:   MOVEA.L   A5,A1
T0000a4:   MOVEA.L   A3,A0
T0000a6:   JSR       strcat
T0000ac:   MOVE.L    A6,D0
T0000ae:   BEQ.B     T0000DE
T0000b0:   MOVEA.L   A3,A0
T0000b2:   JSR       strlen
T0000b8:   MOVE.L    D0,D3
T0000ba:   CMPI.B    #$2E,-$01(A3,D3.L)
T0000c0:   BEQ.B     T0000D2
T0000c2:   LEA.L     $000C(A2),A1
T0000c6:   LEA.L     (A3,D3.L),A0
T0000ca:   JSR       strcpy
T0000d0:   ADDQ.L    #1,D3
T0000d2:   MOVEA.L   A6,A1
T0000d4:   LEA.L     (A3,D3.L),A0
T0000d8:   JSR       strcpy
T0000de:   MOVEA.L   A3,A0
T0000e0:   MOVEM.L   (A7)+,D3-D4/A2-A6
T0000e4:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_chgExt:
T000000:   MOVEM.L   A2-A5,-(A7)
T000004:   SUBQ.W    #2,A7
T000006:   MOVEA.L   A0,A2
T000008:   MOVEA.L   A1,A5
T00000a:   LEA.L     +$00000008,A0
T000010:   LEA.L     (A7),A1
T000012:   MOVE.B    (A0)+,(A1)+
T000014:   MOVE.B    (A0)+,(A1)+
T000016:   MOVEQ.L   #$5C,D0
T000018:   MOVEA.L   A2,A0
T00001a:   JSR       strrchr
T000020:   MOVEA.L   A0,A3
T000022:   MOVEQ.L   #$2E,D0
T000024:   MOVEA.L   A2,A0
T000026:   JSR       strrchr
T00002c:   MOVEA.L   A0,A4
T00002e:   MOVE.L    A4,D0
T000030:   BEQ.B     T000036
T000032:   CMP.L     A3,D0
T000034:   BCC.B     T00004C
T000036:   LEA.L     (A7),A1
T000038:   MOVEA.L   A2,A0
T00003a:   JSR       strcat
T000040:   MOVEA.L   A5,A1
T000042:   MOVEA.L   A2,A0
T000044:   JSR       strcat
T00004a:   BRA.B     T000058
T00004c:   MOVEA.L   A5,A1
T00004e:   LEA.L     $0001(A4),A0
T000052:   JSR       strcpy
T000058:   MOVEA.L   A2,A0
T00005a:   ADDQ.W    #2,A7
T00005c:   MOVEM.L   (A7)+,A2-A5
T000060:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_length:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEQ.L   #-$02,D3
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T000068
T00000c:   MOVE.B    (A0),D1
T00000e:   BEQ.B     T000068
T000010:   MOVE.B    $0001(A2),D2
T000014:   BNE.B     T00001C
T000016:   CMP.B     #$5C,D1
T00001a:   BEQ.B     T000064
T00001c:   MOVE.B    (A2),D0
T00001e:   EXT.W     D0
T000020:   JSR       isascii
T000026:   TST.W     D0
T000028:   BEQ.B     T00006C
T00002a:   MOVE.B    (A2),D0
T00002c:   EXT.W     D0
T00002e:   JSR       isalpha
T000034:   TST.W     D0
T000036:   BEQ.B     T00006C
T000038:   LEA.L     +$00000001,A1
T00003e:   LEA.L     $0001(A2),A0
T000042:   JSR       Ast_cmp
T000048:   TST.W     D0
T00004a:   BNE.B     T00006C
T00004c:   JSR       Dgetdrv
T000052:   JSR       Dsetdrv
T000058:   MOVEQ.L   #$01,D1
T00005a:   MOVEQ.L   #-$41,D2
T00005c:   ADD.B     (A2),D2
T00005e:   LSL.L     D2,D1
T000060:   AND.L     D1,D0
T000062:   BEQ.B     T000068
T000064:   MOVEQ.L   #-$01,D0
T000066:   BRA.B     T0000D2
T000068:   MOVEQ.L   #-$02,D0
T00006a:   BRA.B     T0000D2
T00006c:   MOVEQ.L   #$5C,D0
T00006e:   MOVEA.L   A2,A0
T000070:   JSR       strrchr
T000076:   MOVEA.L   A0,A3
T000078:   MOVE.L    A3,D0
T00007a:   BEQ.B     T000086
T00007c:   MOVE.B    $0001(A3),D1
T000080:   BNE.B     T000086
T000082:   CLR.B     (A0)
T000084:   BRA.B     T000088
T000086:   SUBA.L    A3,A3
T000088:   CLR.W     D1
T00008a:   CLR.W     D0
T00008c:   MOVEA.L   A2,A0
T00008e:   JSR       Fattrib
T000094:   TST.L     D0
T000096:   BMI.B     T0000C8
T000098:   MOVEQ.L   #$10,D1
T00009a:   AND.W     D0,D1
T00009c:   BEQ.B     T0000A2
T00009e:   MOVEQ.L   #-$01,D3
T0000a0:   BRA.B     T0000C8
T0000a2:   CLR.W     D0
T0000a4:   MOVEA.L   A2,A0
T0000a6:   JSR       Fopen
T0000ac:   MOVE.L    D0,D4
T0000ae:   TST.L     D0
T0000b0:   BLE.B     T0000C8
T0000b2:   MOVEQ.L   #$02,D2
T0000b4:   MOVE.W    D4,D1
T0000b6:   MOVEQ.L   #$00,D0
T0000b8:   JSR       Fseek
T0000be:   MOVE.L    D0,D3
T0000c0:   MOVE.W    D4,D0
T0000c2:   JSR       Fclose
T0000c8:   MOVE.L    A3,D0
T0000ca:   BEQ.B     T0000D0
T0000cc:   MOVE.B    #$5C,(A3)
T0000d0:   MOVE.L    D3,D0
T0000d2:   MOVEM.L   (A7)+,D3-D4/A2-A3
T0000d6:   RTS

          .ENDMOD


          .MODULE LOCAL

Af_readdirOld:
T000000:   MOVEM.L   D3-D4/A2-A4/A6,-(A7)
T000004:   LEA.L     -$0030(A7),A7
T000008:   MOVEA.L   A0,A2
T00000a:   JSR       strlen
T000010:   MOVE.L    D0,D3
T000012:   LEA.L     ,A3
T000018:   CMPI.B    #$5C,-$01(A2,D3.L)
T00001e:   BNE.B     T00002E
T000020:   LEA.L     $000E(A3),A1
T000024:   MOVEA.L   A2,A0
T000026:   JSR       strcat
T00002c:   BRA.B     T00003A
T00002e:   LEA.L     $0012(A3),A1
T000032:   MOVEA.L   A2,A0
T000034:   JSR       strcat
T00003a:   JSR       Fgetdta
T000040:   MOVE.L    A0,$002C(A7)
T000044:   LEA.L     (A7),A0
T000046:   JSR       Fsetdta
T00004c:   SUBA.L    A6,A6
T00004e:   MOVEA.L   A6,A4
T000050:   MOVEQ.L   #$11,D0
T000052:   MOVEA.L   A2,A0
T000054:   JSR       Fsfirst
T00005a:   MOVE.W    D0,D4
T00005c:   BRA       T00015E
T000060:   LEA.L     $000C(A3),A1
T000064:   LEA.L     $001E(A7),A0
T000068:   JSR       Ast_cmp
T00006e:   TST.W     D0
T000070:   BEQ       T000156
T000074:   LEA.L     $0017(A3),A1
T000078:   LEA.L     $001E(A7),A0
T00007c:   JSR       Ast_cmp
T000082:   TST.W     D0
T000084:   BEQ       T000156
T000088:   MOVE.L    A4,D0
T00008a:   BNE.B     T0000AA
T00008c:   MOVEQ.L   #$3C,D0
T00008e:   JSR       Ax_malloc
T000094:   MOVEA.L   A0,A6
T000096:   MOVE.L    A6,D0
T000098:   BEQ       T000164
T00009c:   MOVEQ.L   #$3C,D1
T00009e:   CLR.W     D0
T0000a0:   JSR       memset
T0000a6:   MOVEA.L   A6,A4
T0000a8:   BRA.B     T0000CA
T0000aa:   MOVEQ.L   #$3C,D0
T0000ac:   JSR       Ax_malloc
T0000b2:   MOVE.L    A0,$0004(A6)
T0000b6:   MOVE.L    A0,D0
T0000b8:   BEQ       T000164
T0000bc:   MOVEA.L   D0,A6
T0000be:   MOVEQ.L   #$3C,D1
T0000c0:   MOVEA.L   A6,A0
T0000c2:   CLR.W     D0
T0000c4:   JSR       memset
T0000ca:   MOVEQ.L   #$14,D0
T0000cc:   ADD.L     D3,D0
T0000ce:   JSR       Ax_malloc
T0000d4:   MOVE.L    A0,(A6)
T0000d6:   MOVE.L    A0,D0
T0000d8:   BEQ       T000164
T0000dc:   CLR.B     (A0)
T0000de:   MOVEA.L   A2,A1
T0000e0:   MOVEA.L   (A6),A0
T0000e2:   JSR       strcpy
T0000e8:   MOVEA.L   (A6),A0
T0000ea:   JSR       strlen
T0000f0:   SUBQ.L    #3,D0
T0000f2:   MOVEA.L   (A6),A0
T0000f4:   CLR.B     (A0,D0.L)
T0000f8:   LEA.L     $001E(A7),A1
T0000fc:   MOVEA.L   (A6),A0
T0000fe:   JSR       strcat
T000104:   MOVEQ.L   #$10,D0
T000106:   AND.B     $0015(A7),D0
T00010a:   BEQ.B     T000118
T00010c:   LEA.L     $0002(A3),A1
T000110:   MOVEA.L   (A6),A0
T000112:   JSR       strcat
T000118:   MOVE.B    $0015(A7),D0
T00011c:   EXT.W     D0
T00011e:   MOVE.W    D0,$0030(A6)
T000122:   MOVE.W    $0016(A7),$0024(A6)
T000128:   MOVE.W    $0016(A7),$0028(A6)
T00012e:   MOVE.W    $0016(A7),$002C(A6)
T000134:   MOVE.W    $0018(A7),$0026(A6)
T00013a:   MOVE.W    $0018(A7),$002A(A6)
T000140:   MOVE.W    $0018(A7),$002E(A6)
T000146:   MOVEA.L   A2,A0
T000148:   BSR       Af_2drv
T00014c:   MOVE.W    D0,$000E(A6)
T000150:   MOVE.L    $001A(A7),$0018(A6)
T000156:   JSR       Fsnext
T00015c:   MOVE.W    D0,D4
T00015e:   TST.W     D4
T000160:   BEQ       T010060
T000164:   MOVEA.L   $002C(A7),A0
T000168:   JSR       Fsetdta
T00016e:   TST.W     D4
T000170:   BNE.B     T00017E
T000172:   MOVEA.L   A4,A0
T000174:   JSR       Af_freedir
T00017a:   SUBA.L    A6,A6
T00017c:   MOVEA.L   A6,A4
T00017e:   MOVEA.L   A4,A0
T000180:   LEA.L     $0030(A7),A7
T000184:   MOVEM.L   (A7)+,D3-D4/A2-A4/A6
T000188:   RTS

          .ENDMOD


          .MODULE LOCAL

Af_readdirNew:
T000000:   MOVEM.L   D3-D7/A3-A6,-(A7)
T000004:   LEA.L     -$003C(A7),A7
T000008:   MOVE.L    A0,$0038(A7)
T00000c:   CLR.W     D3
T00000e:   JSR       strlen
T000014:   MOVE.L    D0,D4
T000016:   MOVEQ.L   #-$01,D0
T000018:   MOVEA.L   $0038(A7),A0
T00001c:   JSR       Dpathconf
T000022:   MOVE.L    D0,D5
T000024:   MOVEQ.L   #-$20,D1
T000026:   CMP.L     D0,D1
T000028:   BEQ.B     T000050
T00002a:   MOVEQ.L   #$02,D2
T00002c:   CMP.L     D0,D2
T00002e:   BGT.B     T000050
T000030:   MOVEA.L   $0038(A7),A0
T000034:   MOVEQ.L   #$02,D0
T000036:   JSR       Dpathconf
T00003c:   MOVE.L    D0,D5
T00003e:   MOVEQ.L   #-$20,D1
T000040:   CMP.L     D0,D1
T000042:   BEQ.B     T00004A
T000044:   MOVEQ.L   #$1E,D6
T000046:   ADD.W     D5,D6
T000048:   BRA.B     T00004E
T00004a:   MOVE.W    #$0096,D6
T00004e:   BRA.B     T000054
T000050:   MOVE.W    #$0096,D6
T000054:   MOVE.W    D6,D0
T000056:   EXT.L     D0
T000058:   JSR       Ax_malloc
T00005e:   MOVEA.L   A0,A3
T000060:   MOVE.L    A3,D0
T000062:   BEQ.B     T0000A0
T000064:   CLR.B     (A0)
T000066:   MOVEA.L   $0038(A7),A0
T00006a:   CLR.W     D0
T00006c:   JSR       Dopendir
T000072:   MOVE.L    D0,D7
T000074:   AND.L     #$FF000000,D0
T00007a:   CMP.L     #$FF000000,D0
T000080:   BEQ.B     T000094
T000082:   MOVEQ.L   #-$22,D1
T000084:   CMP.L     D7,D1
T000086:   BEQ.B     T000094
T000088:   MOVEQ.L   #-$24,D2
T00008a:   CMP.L     D7,D2
T00008c:   BEQ.B     T000094
T00008e:   MOVEQ.L   #-$27,D0
T000090:   CMP.L     D7,D0
T000092:   BNE.B     T0000A6
T000094:   TST.L     D7
T000096:   BMI.B     T0000A0
T000098:   MOVE.L    D7,D0
T00009a:   JSR       Dclosedir
T0000a0:   SUBA.L    A0,A0
T0000a2:   BRA       T00025C
T0000a6:   SUBA.L    A4,A4
T0000a8:   MOVEA.L   A4,A5
T0000aa:   LEA.L     $0034(A7),A6
T0000ae:   PEA.L     (A6)
T0000b0:   LEA.L     $0004(A7),A1
T0000b4:   MOVEA.L   A3,A0
T0000b6:   MOVE.L    D7,D1
T0000b8:   MOVE.W    D6,D0
T0000ba:   JSR       Dxreaddir
T0000c0:   ADDQ.W    #4,A7
T0000c2:   MOVE.L    D0,D5
T0000c4:   MOVEQ.L   #-$20,D1
T0000c6:   CMP.L     D0,D1
T0000c8:   BNE.B     T000100
T0000ca:   MOVEA.L   A3,A0
T0000cc:   MOVE.L    D7,D1
T0000ce:   MOVE.W    D6,D0
T0000d0:   JSR       Dreaddir
T0000d6:   MOVE.L    D0,D5
T0000d8:   MOVEQ.L   #-$40,D1
T0000da:   CMP.L     D0,D1
T0000dc:   BEQ.B     T0000CA
T0000de:   TST.L     D0
T0000e0:   BMI.B     T00010A
T0000e2:   MOVE.L    #$FFFFFFE0,(A6)
T0000e8:   BRA.B     T00011A
T0000ea:   PEA.L     (A6)
T0000ec:   LEA.L     $0004(A7),A1
T0000f0:   MOVEA.L   A3,A0
T0000f2:   MOVE.L    D7,D1
T0000f4:   MOVE.W    D6,D0
T0000f6:   JSR       Dxreaddir
T0000fc:   ADDQ.W    #4,A7
T0000fe:   MOVE.L    D0,D5
T000100:   MOVEQ.L   #-$40,D0
T000102:   CMP.L     D5,D0
T000104:   BEQ.B     T0000EA
T000106:   TST.L     D5
T000108:   BPL.B     T00011A
T00010a:   MOVEQ.L   #-$31,D0
T00010c:   CMP.L     D5,D0
T00010e:   BEQ.B     T000114
T000110:   MOVEQ.L   #$01,D3
T000112:   BRA.B     T000116
T000114:   CLR.W     D3
T000116:   BRA       T00023A
T00011a:   LEA.L     +$0000000C,A1
T000120:   LEA.L     $0004(A3),A0
T000124:   JSR       Ast_cmp
T00012a:   TST.W     D0
T00012c:   BNE.B     T000144
T00012e:   LEA.L     +$00000017,A1
T000134:   LEA.L     $0004(A3),A0
T000138:   JSR       Ast_cmp
T00013e:   TST.W     D0
T000140:   BEQ       T0100AA
T000144:   MOVE.L    A5,D0
T000146:   BNE.B     T000172
T000148:   MOVEQ.L   #$3C,D0
T00014a:   JSR       Ax_malloc
T000150:   MOVEA.L   A0,A4
T000152:   MOVE.L    A4,D0
T000154:   BNE.B     T00015A
T000156:   MOVEQ.L   #$01,D3
T000158:   BRA.B     T00015C
T00015a:   CLR.W     D3
T00015c:   TST.W     D3
T00015e:   BNE       T00023A
T000162:   MOVEQ.L   #$3C,D1
T000164:   CLR.W     D0
T000166:   MOVEA.L   A4,A0
T000168:   JSR       memset
T00016e:   MOVEA.L   A4,A5
T000170:   BRA.B     T00019E
T000172:   MOVEQ.L   #$3C,D0
T000174:   JSR       Ax_malloc
T00017a:   MOVE.L    A0,$0004(A4)
T00017e:   MOVE.L    A0,D0
T000180:   BNE.B     T000186
T000182:   MOVEQ.L   #$01,D3
T000184:   BRA.B     T000188
T000186:   CLR.W     D3
T000188:   TST.W     D3
T00018a:   BNE       T00023A
T00018e:   MOVEA.L   $0004(A4),A4
T000192:   MOVEQ.L   #$3C,D1
T000194:   CLR.W     D0
T000196:   MOVEA.L   A4,A0
T000198:   JSR       memset
T00019e:   MOVE.W    D6,D0
T0001a0:   EXT.L     D0
T0001a2:   ADD.L     D4,D0
T0001a4:   ADDQ.L    #1,D0
T0001a6:   JSR       Ax_malloc
T0001ac:   MOVE.L    A0,(A4)
T0001ae:   MOVE.L    A0,D0
T0001b0:   BEQ       T00023A
T0001b4:   CLR.B     (A0)
T0001b6:   MOVEA.L   $0038(A7),A1
T0001ba:   MOVEA.L   (A4),A0
T0001bc:   JSR       strcpy
T0001c2:   LEA.L     +$00000002,A1
T0001c8:   MOVEA.L   (A4),A0
T0001ca:   JSR       strcat
T0001d0:   LEA.L     $0004(A3),A1
T0001d4:   MOVEA.L   (A4),A0
T0001d6:   JSR       strcat
T0001dc:   MOVEQ.L   #-$20,D0
T0001de:   CMP.L     (A6),D0
T0001e0:   BNE.B     T000208
T0001e2:   LEA.L     $0008(A4),A1
T0001e6:   MOVEA.L   (A4),A0
T0001e8:   CLR.W     D0
T0001ea:   JSR       Fxattr
T0001f0:   MOVE.L    D0,(A6)
T0001f2:   MOVEQ.L   #-$20,D1
T0001f4:   CMP.L     D0,D1
T0001f6:   BNE.B     T000216
T0001f8:   LEA.L     $0008(A4),A0
T0001fc:   CLR.W     D0
T0001fe:   MOVEQ.L   #$34,D1
T000200:   JSR       memset
T000206:   BRA.B     T000216
T000208:   MOVEQ.L   #$34,D0
T00020a:   LEA.L     (A7),A1
T00020c:   LEA.L     $0008(A4),A0
T000210:   JSR       memcpy
T000216:   MOVEQ.L   #-$20,D0
T000218:   CMP.L     (A6),D0
T00021a:   BEQ       T0100AA
T00021e:   MOVEQ.L   #$10,D1
T000220:   AND.W     $0030(A4),D1
T000224:   BEQ       T0100AA
T000228:   LEA.L     +$00000002,A1
T00022e:   MOVEA.L   (A4),A0
T000230:   JSR       strcat
T000236:   BRA       T0100AA
T00023a:   MOVEA.L   A3,A0
T00023c:   JSR       Ax_free
T000242:   MOVE.L    D7,D0
T000244:   JSR       Dclosedir
T00024a:   TST.W     D3
T00024c:   BEQ.B     T00025A
T00024e:   MOVEA.L   A5,A0
T000250:   JSR       Af_freedir
T000256:   SUBA.L    A4,A4
T000258:   MOVEA.L   A4,A5
T00025a:   MOVEA.L   A5,A0
T00025c:   LEA.L     $003C(A7),A7
T000260:   MOVEM.L   (A7)+,D3-D7/A3-A6
T000264:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_readdir:
T000000:   MOVEM.L   D3-D4/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   JSR       strlen
T00000c:   MOVE.L    D0,D3
T00000e:   MOVEQ.L   #$14,D0
T000010:   ADD.L     D3,D0
T000012:   JSR       Ax_malloc
T000018:   MOVEA.L   A0,A2
T00001a:   MOVE.L    A2,D0
T00001c:   BNE.B     T000024
T00001e:   SUBA.L    A0,A0
T000020:   BRA       T0000C2
T000024:   MOVEA.L   A3,A1
T000026:   MOVEA.L   A2,A0
T000028:   JSR       strcpy
T00002e:   MOVEQ.L   #$5C,D0
T000030:   MOVEA.L   A2,A0
T000032:   JSR       strrchr
T000038:   MOVE.L    A0,D0
T00003a:   BEQ.B     T000044
T00003c:   MOVE.B    $0001(A0),D1
T000040:   BNE.B     T000044
T000042:   CLR.B     (A0)
T000044:   MOVEA.L   A2,A0
T000046:   JSR       strlen
T00004c:   MOVEQ.L   #$02,D1
T00004e:   CMP.L     D0,D1
T000050:   BNE.B     T000068
T000052:   CMPI.B    #$3A,$0001(A2)
T000058:   BNE.B     T000068
T00005a:   LEA.L     +$00000002,A1
T000060:   MOVEA.L   A2,A0
T000062:   JSR       strcat
T000068:   JSR       Dgetdrv
T00006e:   MOVE.W    D0,D3
T000070:   MOVEA.L   A3,A0
T000072:   BSR       Af_2drv
T000076:   JSR       Dsetdrv
T00007c:   CLR.W     D0
T00007e:   LEA.L     +$0000000C,A0
T000084:   JSR       Dopendir
T00008a:   MOVE.L    D0,D4
T00008c:   MOVE.W    D3,D0
T00008e:   JSR       Dsetdrv
T000094:   MOVEQ.L   #-$20,D0
T000096:   CMP.L     D4,D0
T000098:   BNE.B     T0000A4
T00009a:   MOVEA.L   A2,A0
T00009c:   BSR       Af_readdirOld
T0000a0:   MOVEA.L   A0,A3
T0000a2:   BRA.B     T0000B8
T0000a4:   TST.L     D4
T0000a6:   BLE.B     T0000B0
T0000a8:   MOVE.L    D4,D0
T0000aa:   JSR       Dclosedir
T0000b0:   MOVEA.L   A2,A0
T0000b2:   BSR       Af_readdirNew
T0000b6:   MOVEA.L   A0,A3
T0000b8:   MOVEA.L   A2,A0
T0000ba:   JSR       Ax_free
T0000c0:   MOVEA.L   A3,A0
T0000c2:   MOVEM.L   (A7)+,D3-D4/A2-A3
T0000c6:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_freedir:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   BRA.B     T000022
T000008:   MOVEA.L   A2,A3
T00000a:   MOVEA.L   $0004(A2),A2
T00000e:   MOVE.L    (A3),D0
T000010:   BEQ.B     T00001A
T000012:   MOVEA.L   D0,A0
T000014:   JSR       Ast_delete
T00001a:   MOVEA.L   A3,A0
T00001c:   JSR       Ax_free
T000022:   MOVE.L    A2,D0
T000024:   BNE.B     T000008
T000026:   MOVEA.L   (A7)+,A3
T000028:   MOVEA.L   (A7)+,A2
T00002a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_first:
T000000:   MOVEM.L   A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVEA.L   A1,A4
T000008:   LEA.L     DateiListe,A2
T00000e:   MOVE.L    (A2),D0
T000010:   BEQ.B     T000020
T000012:   MOVEA.L   D0,A0
T000014:   BSR       Af_freedir
T000018:   MOVEQ.L   #$00,D0
T00001a:   MOVE.L    D0,$0004(A2)
T00001e:   MOVE.L    D0,(A2)
T000020:   MOVEA.L   A3,A0
T000022:   BSR       Af_readdir
T000026:   MOVE.L    A0,(A2)
T000028:   MOVE.L    A0,D0
T00002a:   BNE.B     T000030
T00002c:   SUBA.L    A0,A0
T00002e:   BRA.B     T000038
T000030:   MOVEA.L   A4,A0
T000032:   JSR       Af_next
T000038:   MOVEM.L   (A7)+,A2-A4
T00003c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_next:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   LEA.L     AktDatei,A2
T00000c:   MOVE.L    -$0004(A2),D0
T000010:   BEQ.B     T00004E
T000012:   MOVE.L    (A2),D1
T000014:   BNE.B     T00001A
T000016:   MOVE.L    D0,(A2)
T000018:   BRA.B     T000020
T00001a:   MOVEA.L   (A2),A0
T00001c:   MOVE.L    $0004(A0),(A2)
T000020:   MOVE.L    (A2),D0
T000022:   BNE.B     T000036
T000024:   MOVEA.L   -$0004(A2),A0
T000028:   BSR       Af_freedir
T00002c:   MOVEQ.L   #$00,D0
T00002e:   MOVE.L    D0,(A2)
T000030:   MOVE.L    D0,-$0004(A2)
T000034:   BRA.B     T00004E
T000036:   MOVE.L    A3,D0
T000038:   BEQ.B     T000048
T00003a:   MOVEA.L   (A2),A1
T00003c:   ADDQ.W    #8,A1
T00003e:   MOVEA.L   A3,A0
T000040:   MOVEQ.L   #$34,D0
T000042:   JSR       memcpy
T000048:   MOVEA.L   (A2),A0
T00004a:   MOVEA.L   (A0),A0
T00004c:   BRA.B     T000050
T00004e:   SUBA.L    A0,A0
T000050:   MOVEA.L   (A7)+,A3
T000052:   MOVEA.L   (A7)+,A2
T000054:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_pathconf:
T000000:   MOVEM.L   D3-D4/A3,-(A7)
T000004:   SUBQ.W    #4,A7
T000006:   MOVE.W    D0,D3
T000008:   MOVE.W    D1,D4
T00000a:   LEA.L     max_mode,A3
T000010:   LEA.L     $0002(A3),A0
T000014:   LEA.L     (A7),A1
T000016:   MOVE.B    (A0)+,(A1)+
T000018:   MOVE.B    (A0)+,(A1)+
T00001a:   MOVE.B    (A0)+,(A1)+
T00001c:   MOVE.B    (A0)+,(A1)+
T00001e:   TST.W     D3
T000020:   BLE.B     T000028
T000022:   MOVEQ.L   #-$01,D0
T000024:   ADD.B     D3,D0
T000026:   BRA.B     T00002E
T000028:   JSR       Dgetdrv
T00002e:   ADD.B     D0,(A7)
T000030:   CMPI.W    #$FFFF,(A3)
T000034:   BGE.B     T000052
T000036:   MOVEQ.L   #-$01,D0
T000038:   LEA.L     (A7),A0
T00003a:   JSR       Dpathconf
T000040:   MOVEQ.L   #-$20,D1
T000042:   CMP.L     D0,D1
T000044:   BEQ.B     T00004E
T000046:   MOVEQ.L   #-$01,D2
T000048:   AND.W     D0,D2
T00004a:   MOVE.W    D2,(A3)
T00004c:   BRA.B     T000052
T00004e:   MOVE.W    #$FFFF,(A3)
T000052:   CMP.W     (A3),D4
T000054:   BGT.B     T000062
T000056:   MOVE.W    D4,D0
T000058:   LEA.L     (A7),A0
T00005a:   JSR       Dpathconf
T000060:   BRA.B     T000064
T000062:   MOVEQ.L   #-$20,D0
T000064:   ADDQ.W    #4,A7
T000066:   MOVEM.L   (A7)+,D3-D4/A3
T00006a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_quote:
T000000:   MOVEM.L   D3/A2-A5,-(A7)
T000004:   MOVEA.L   A0,A2
T000006:   MOVEA.L   A1,A3
T000008:   CMPA.L    A0,A1
T00000a:   BEQ.B     T000012
T00000c:   JSR       strcpy
T000012:   MOVEA.L   A2,A0
T000014:   JSR       Ast_alltrim
T00001a:   LEA.L     ,A3
T000020:   LEA.L     $001A(A3),A1
T000024:   MOVEA.L   A2,A0
T000026:   JSR       strpbrk
T00002c:   MOVE.L    A0,D0
T00002e:   BEQ.B     T000084
T000030:   CLR.W     D3
T000032:   MOVEA.L   A2,A4
T000034:   BRA.B     T000042
T000036:   MOVE.B    (A4),D0
T000038:   CMP.B     $0020(A3),D0
T00003c:   BNE.B     T000040
T00003e:   ADDQ.W    #1,D3
T000040:   ADDQ.W    #1,A4
T000042:   MOVE.B    (A4),D0
T000044:   BNE.B     T000036
T000046:   MOVEA.L   A2,A0
T000048:   JSR       strlen
T00004e:   LEA.L     (A2,D0.L),A4
T000052:   LEA.L     $01(A4,D3.W),A5
T000056:   BRA.B     T00006A
T000058:   MOVE.B    (A4),D0
T00005a:   CMP.B     $0020(A3),D0
T00005e:   BNE.B     T000064
T000060:   MOVE.B    D0,(A5)
T000062:   SUBQ.W    #1,A5
T000064:   MOVE.B    (A4),(A5)
T000066:   SUBQ.W    #1,A4
T000068:   SUBQ.W    #1,A5
T00006a:   CMPA.L    A4,A2
T00006c:   BLS.B     T000058
T00006e:   MOVE.B    $0020(A3),(A2)
T000072:   MOVEA.L   A2,A0
T000074:   JSR       strlen
T00007a:   LEA.L     (A2,D0.L),A5
T00007e:   MOVE.B    $0020(A3),(A5)+
T000082:   CLR.B     (A5)
T000084:   MOVEA.L   A2,A0
T000086:   MOVEM.L   (A7)+,D3/A2-A5
T00008a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_unquote:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   CMPA.L    A0,A1
T000008:   BEQ.B     T000010
T00000a:   JSR       strcpy
T000010:   MOVEA.L   A3,A0
T000012:   JSR       Ast_alltrim
T000018:   MOVE.B    (A3),D3
T00001a:   MOVE.B    D3,D0
T00001c:   EXT.W     D0
T00001e:   LEA.L     +$00000020,A0
T000024:   JSR       strchr
T00002a:   MOVE.L    A0,D0
T00002c:   BEQ.B     T000060
T00002e:   MOVEA.L   A3,A0
T000030:   JSR       strlen
T000036:   SUBQ.L    #1,D0
T000038:   CMP.B     (A3,D0.L),D3
T00003c:   BNE.B     T000060
T00003e:   MOVEA.L   A3,A1
T000040:   LEA.L     $0001(A3),A0
T000044:   BRA.B     T00005A
T000046:   CMP.B     (A0),D3
T000048:   BNE.B     T000054
T00004a:   MOVE.B    (A0),D0
T00004c:   CMP.B     $0001(A0),D0
T000050:   BNE.B     T00005E
T000052:   ADDQ.W    #1,A0
T000054:   MOVE.B    (A0),(A1)
T000056:   ADDQ.W    #1,A0
T000058:   ADDQ.W    #1,A1
T00005a:   MOVE.B    (A0),D0
T00005c:   BNE.B     T000046
T00005e:   CLR.B     (A1)
T000060:   MOVEA.L   A3,A0
T000062:   MOVEA.L   (A7)+,A3
T000064:   MOVE.W    (A7)+,D3
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Af_parseCmdLine:
T000000:   MOVEM.L   D3/A2-A6,-(A7)
T000004:   LEA.L     -$0088(A7),A7
T000008:   MOVEA.L   A0,A4
T00000a:   JSR       Alu_create
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000024
T000016:   MOVEA.L   A4,A0
T000018:   JSR       Ast_create
T00001e:   MOVE.L    A0,(A7)
T000020:   MOVE.L    A0,D0
T000022:   BNE.B     T00002A
T000024:   SUBA.L    A0,A0
T000026:   BRA       T0000DA
T00002a:   MOVEA.L   (A7),A4
T00002c:   LEA.L     $0004(A7),A5
T000030:   BRA       T0000C2
T000034:   MOVEA.L   A4,A0
T000036:   JSR       Ast_alltrim
T00003c:   MOVE.B    (A4),D3
T00003e:   MOVE.B    D3,D0
T000040:   EXT.W     D0
T000042:   LEA.L     +$00000020,A0
T000048:   JSR       strchr
T00004e:   MOVE.L    A0,D0
T000050:   BEQ.B     T000074
T000052:   ADDQ.W    #1,A4
T000054:   MOVEA.L   A5,A3
T000056:   BRA.B     T00006C
T000058:   CMP.B     (A4),D3
T00005a:   BNE.B     T000066
T00005c:   ADDQ.W    #1,A4
T00005e:   MOVE.B    -$0001(A4),D0
T000062:   CMP.B     (A4),D0
T000064:   BNE.B     T000070
T000066:   MOVE.B    (A4),(A3)
T000068:   ADDQ.W    #1,A4
T00006a:   ADDQ.W    #1,A3
T00006c:   MOVE.B    (A4),D0
T00006e:   BNE.B     T000058
T000070:   CLR.B     (A3)
T000072:   BRA.B     T0000A8
T000074:   LEA.L     +$0000001A,A1
T00007a:   MOVEA.L   A4,A0
T00007c:   JSR       strpbrk
T000082:   MOVEA.L   A0,A3
T000084:   MOVE.L    A3,D0
T000086:   BEQ.B     T00009C
T000088:   MOVE.B    (A0),D3
T00008a:   CLR.B     (A0)
T00008c:   MOVEA.L   A4,A1
T00008e:   MOVEA.L   A5,A0
T000090:   JSR       strcpy
T000096:   MOVEA.L   A3,A4
T000098:   MOVE.B    D3,(A4)
T00009a:   BRA.B     T0000A8
T00009c:   MOVEA.L   A4,A1
T00009e:   MOVEA.L   A5,A0
T0000a0:   JSR       strcpy
T0000a6:   SUBA.L    A4,A4
T0000a8:   MOVEA.L   A5,A0
T0000aa:   JSR       Ast_create
T0000b0:   MOVE.L    A0,$0084(A7)
T0000b4:   MOVE.L    A0,D0
T0000b6:   BEQ.B     T0000C2
T0000b8:   MOVEA.L   D0,A1
T0000ba:   MOVEA.L   $000C(A2),A6
T0000be:   MOVEA.L   A2,A0
T0000c0:   JSR       (A6)
T0000c2:   MOVEA.L   A4,A0
T0000c4:   JSR       Ast_isEmpty
T0000ca:   TST.W     D0
T0000cc:   BEQ       T010034
T0000d0:   MOVEA.L   (A7),A0
T0000d2:   JSR       Ast_delete
T0000d8:   MOVEA.L   A2,A0
T0000da:   LEA.L     $0088(A7),A7
T0000de:   MOVEM.L   (A7)+,D3/A2-A6
T0000e2:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ash_error:
T000000:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ash_cmdParsen:
T000000:   MOVEM.L   D3-D6/A2-A5,-(A7)
T000004:   SUBQ.W    #8,A7
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.W    D0,D5
T00000a:   MOVE.L    A1,$0004(A7)
T00000e:   MOVEA.L   $002C(A7),A5
T000012:   MOVEA.L   $0038(A7),A3
T000016:   MOVEQ.L   #$01,D3
T000018:   CLR.W     D4
T00001a:   BRA.B     T000028
T00001c:   MOVE.W    D4,D0
T00001e:   EXT.L     D0
T000020:   LSL.L     #2,D0
T000022:   CLR.L     (A2,D0.L)
T000026:   ADDQ.W    #1,D4
T000028:   CMP.W     #$0100,D4
T00002c:   BLT.B     T00001C
T00002e:   CLR.W     D4
T000030:   BRA.B     T000048
T000032:   MOVE.W    D4,D0
T000034:   EXT.L     D0
T000036:   LSL.L     #2,D0
T000038:   MOVEA.L   $0004(A7),A0
T00003c:   MOVEA.L   (A0,D0.L),A0
T000040:   JSR       Ast_alltrim
T000046:   ADDQ.W    #1,D4
T000048:   CMP.W     D4,D5
T00004a:   BGT.B     T000032
T00004c:   MOVEQ.L   #$01,D4
T00004e:   BRA       T000148
T000052:   MOVE.W    D4,D0
T000054:   EXT.L     D0
T000056:   LSL.L     #2,D0
T000058:   MOVEA.L   $0004(A7),A0
T00005c:   MOVE.L    (A0,D0.L),(A7)
T000060:   MOVEA.L   (A7),A1
T000062:   MOVE.B    (A1),D0
T000064:   EXT.W     D0
T000066:   MOVEA.L   A5,A0
T000068:   JSR       strchr
T00006e:   MOVE.L    A0,D0
T000070:   BEQ       T000136
T000074:   CLR.B     D6
T000076:   MOVEA.L   (A7),A4
T000078:   ADDQ.W    #1,A4
T00007a:   BRA       T00012E
T00007e:   MOVE.B    (A4),D6
T000080:   MOVE.B    D6,D0
T000082:   EXT.W     D0
T000084:   MOVEA.L   $0030(A7),A0
T000088:   JSR       strchr
T00008e:   MOVE.L    A0,D0
T000090:   BEQ       T00011C
T000094:   MOVE.B    (A4),D0
T000096:   EXT.W     D0
T000098:   MOVEA.L   $0034(A7),A0
T00009c:   JSR       strchr
T0000a2:   MOVE.L    A0,D0
T0000a4:   BEQ.B     T00010A
T0000a6:   MOVE.B    $0001(A4),D0
T0000aa:   BEQ.B     T0000C0
T0000ac:   LEA.L     $0001(A4),A0
T0000b0:   MOVE.B    D6,D1
T0000b2:   EXT.W     D1
T0000b4:   EXT.L     D1
T0000b6:   LSL.L     #2,D1
T0000b8:   MOVE.L    A0,(A2,D1.L)
T0000bc:   BRA       T000146
T0000c0:   MOVEQ.L   #-$01,D0
T0000c2:   ADD.W     D5,D0
T0000c4:   CMP.W     D0,D4
T0000c6:   BGE.B     T0000D8
T0000c8:   MOVE.W    D4,D1
T0000ca:   EXT.L     D1
T0000cc:   LSL.L     #2,D1
T0000ce:   MOVEA.L   $0004(A7),A0
T0000d2:   MOVEA.L   $04(A0,D1.L),A4
T0000d6:   BRA.B     T0000DA
T0000d8:   MOVEA.L   A5,A4
T0000da:   MOVE.B    (A4),D0
T0000dc:   EXT.W     D0
T0000de:   MOVEA.L   A5,A0
T0000e0:   JSR       strchr
T0000e6:   MOVE.L    A0,D0
T0000e8:   BEQ.B     T0000FC
T0000ea:   MOVE.L    A3,D0
T0000ec:   BEQ.B     T0000F6
T0000ee:   MOVE.B    D6,D0
T0000f0:   JSR       (A3)
T0000f2:   TST.W     D0
T0000f4:   BEQ.B     T00012C
T0000f6:   CLR.W     D3
T0000f8:   MOVE.W    D5,D4
T0000fa:   BRA.B     T000146
T0000fc:   MOVE.B    D6,D0
T0000fe:   EXT.W     D0
T000100:   EXT.L     D0
T000102:   LSL.L     #2,D0
T000104:   MOVE.L    A4,(A2,D0.L)
T000108:   BRA.B     T000146
T00010a:   MOVE.B    D6,D0
T00010c:   EXT.W     D0
T00010e:   EXT.L     D0
T000110:   LSL.L     #2,D0
T000112:   MOVE.L    #,(A2,D0.L)
T00011a:   BRA.B     T00012C
T00011c:   MOVE.L    A3,D0
T00011e:   BEQ.B     T000128
T000120:   MOVE.B    D6,D0
T000122:   JSR       (A3)
T000124:   TST.W     D0
T000126:   BEQ.B     T000146
T000128:   CLR.W     D3
T00012a:   BRA.B     T000146
T00012c:   ADDQ.W    #1,A4
T00012e:   MOVE.B    (A4),D0
T000130:   BNE       T01007E
T000134:   BRA.B     T000146
T000136:   MOVEA.L   (A7),A1
T000138:   MOVEA.L   $003C(A7),A0
T00013c:   MOVEA.L   $003C(A7),A4
T000140:   MOVEA.L   $000C(A4),A4
T000144:   JSR       (A4)
T000146:   ADDQ.W    #1,D4
T000148:   CMP.W     D4,D5
T00014a:   BGT       T010052
T00014e:   MOVE.W    D3,D0
T000150:   ADDQ.W    #8,A7
T000152:   MOVEM.L   (A7)+,D3-D6/A2-A5
T000156:   RTS

          .ENDMOD


          .MODULE GLOBAL

Ash_getenv:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   ACSblk,A1
T00000a:   MOVEA.L   $041A(A1),A1
T00000e:   MOVE.L    A1,D0
T000010:   BEQ.B     T000040
T000012:   MOVEA.L   (A1),A2
T000014:   BRA.B     T000038
T000016:   MOVEA.L   A0,A3
T000018:   BRA.B     T00002A
T00001a:   CMPI.B    #$3D,(A2)
T00001e:   BNE.B     T00002A
T000020:   MOVE.B    (A3),D0
T000022:   BNE.B     T00002A
T000024:   ADDQ.W    #1,A2
T000026:   MOVEA.L   A2,A0
T000028:   BRA.B     T000042
T00002a:   MOVE.B    (A2),D0
T00002c:   BEQ.B     T000034
T00002e:   MOVE.B    (A2)+,D0
T000030:   CMP.B     (A3)+,D0
T000032:   BEQ.B     T00001A
T000034:   ADDQ.W    #4,A1
T000036:   MOVEA.L   (A1),A2
T000038:   MOVE.L    A2,D0
T00003a:   BEQ.B     T000040
T00003c:   MOVE.B    (A2),D1
T00003e:   BNE.B     T000016
T000040:   SUBA.L    A0,A0
T000042:   MOVEA.L   (A7)+,A3
T000044:   MOVEA.L   (A7)+,A2
T000046:   RTS

          .ENDMOD


          .MODULE LOCAL

nk_findscan:
T000000:   BTST.L    #$000D,D0
T000004:   BEQ.B     T00002C
T000006:   MOVE.W    #$004A,D1
T00000a:   CMP.B     (A0,D1.W),D0
T00000e:   BEQ.B     T000042
T000010:   MOVE.W    #$004E,D1
T000014:   CMP.B     (A0,D1.W),D0
T000018:   BEQ.B     T000042
T00001a:   MOVE.W    #$0063,D1
.numsearch:
T00001e:   CMP.B     (A0,D1.W),D0
T000022:   BEQ.B     T000042
T000024:   ADDQ.W    #1,D1
T000026:   CMP.W     #$0073,D1
T00002a:   BCS.B     T00001E
.search:
T00002c:   MOVE.W    #$0001,D1
.mainsearch:
T000030:   CMP.B     (A0,D1.W),D0
T000034:   BEQ.B     T000042
T000036:   ADDQ.B    #1,D1
T000038:   CMP.B     #$78,D1
T00003c:   BCS.B     T000030
T00003e:   MOVEQ.L   #$00,D1
T000040:   RTS
.found:
T000042:   TST.W     D1
T000044:   RTS
nkc_init:
T000046:   MOVEQ.L   #-$01,D0
T000048:   MOVE.L    D0,-(A7)
T00004a:   MOVE.L    D0,-(A7)
T00004c:   MOVE.L    D0,-(A7)
T00004e:   MOVE.W    #$0010,-(A7)
T000052:   TRAP      #14
T000054:   LEA.L     $000E(A7),A7
T000058:   MOVEA.L   D0,A0
T00005a:   MOVE.L    (A0)+,pkey_unshift
T000060:   MOVE.L    (A0)+,pkey_shift
T000066:   MOVE.L    (A0),pkey_caps
.exit:
T00006c:   MOVE.W    #$0294,D0
T000070:   RTS
nkc_tos2n:
T000072:   MOVEM.L   D3-D4,-(A7)
T000076:   MOVE.L    D0,D1
T000078:   SWAP      D1
T00007a:   MOVE.W    D1,D2
T00007c:   MOVE.W    #$00FF,D3
T000080:   AND.W     D3,D0
T000082:   AND.W     D3,D1
T000084:   BEQ       T0001DA
T000088:   AND.W     #$1F00,D2
T00008c:   MOVE.W    D2,D3
T00008e:   AND.W     #$0300,D3
T000092:   BEQ.B     T00009C
T000094:   MOVEA.L   pkey_shift,A0
T00009a:   BRA.B     T0000B0
.ktab1:
T00009c:   BTST.L    #$000C,D2
T0000a0:   BEQ.B     T0000AA
T0000a2:   MOVEA.L   pkey_caps,A0
T0000a8:   BRA.B     T0000B0
.ktab2:
T0000aa:   MOVEA.L   pkey_unshift,A0
.ktab3:
T0000b0:   CMP.B     #$84,D1
T0000b4:   BCS.B     T0000DC
T0000b6:   MOVE.W    D2,D1
T0000b8:   AND.W     #$0C00,D1
T0000bc:   BEQ.B     T0000C6
T0000be:   OR.W      #$2000,D0
T0000c2:   AND.W     #$1300,D2
.special:
T0000c6:   OR.W      D2,D0
T0000c8:   OR.W      #$C000,D0
T0000cc:   CMP.B     #$20,D0
T0000d0:   BCC       T0001D2
T0000d4:   MOVE.B    #$20,D0
T0000d8:   BRA       T0001D2
.ktab4:
T0000dc:   CMP.B     #$78,D1
T0000e0:   BCS.B     T0000F2
T0000e2:   SUB.B     #$76,D1
T0000e6:   MOVE.B    (A0,D1.W),D0
T0000ea:   OR.W      #$0800,D2
T0000ee:   BRA       T00019A
.scan1:
T0000f2:   LEA.L     xscantab,A1
.search_scan:
T0000f8:   MOVE.W    (A1)+,D3
T0000fa:   BMI.B     T000106
T0000fc:   CMP.B     D1,D3
T0000fe:   BNE.B     T0000F8
T000100:   LSR.W     #8,D3
T000102:   MOVEQ.L   #$00,D0
T000104:   BRA.B     T000108
.tabend:
T000106:   MOVEQ.L   #$00,D3
.scan2:
T000108:   MOVE.B    (A0,D1.W),D4
T00010c:   CMP.B     #$20,D0
T000110:   BCC.B     T000118
T000112:   CMP.B     D4,D0
T000114:   BEQ.B     T000118
T000116:   MOVEQ.L   #$00,D0
.scan3:
T000118:   TST.B     D0
T00011a:   BEQ.B     T000124
T00011c:   CMP.B     D4,D0
T00011e:   BEQ.B     T000124
T000120:   AND.W     #$F7FF,D2
.scan4:
T000124:   TST.B     D0
T000126:   BNE.B     T00012E
T000128:   MOVE.B    D3,D0
T00012a:   BNE.B     T00012E
T00012c:   MOVE.B    D4,D0
.scan5:
T00012e:   CMP.B     #$7F,D0
T000132:   BNE.B     T000138
T000134:   MOVE.B    #$1F,D0
.scan6:
T000138:   CMP.B     #$4A,D1
T00013c:   BEQ.B     T000150
T00013e:   CMP.B     #$4E,D1
T000142:   BEQ.B     T000150
T000144:   CMP.B     #$63,D1
T000148:   BCS.B     T000154
T00014a:   CMP.B     #$72,D1
T00014e:   BHI.B     T000154
.numeric:
T000150:   OR.W      #$2000,D2
.scan7:
T000154:   CMP.B     #$20,D0
T000158:   BCC.B     T00016C
T00015a:   OR.W      #$8000,D2
T00015e:   CMP.B     #$0D,D0
T000162:   BNE.B     T00016C
T000164:   BTST.L    #$000D,D2
T000168:   BEQ.B     T00016C
T00016a:   MOVEQ.L   #$0A,D0
.scan8:
T00016c:   CMP.B     #$54,D1
T000170:   BCS.B     T000188
T000172:   CMP.B     #$5D,D1
T000176:   BHI.B     T000188
T000178:   SUB.B     #$19,D1
T00017c:   MOVE.W    D2,D3
T00017e:   AND.W     #$0300,D3
T000182:   BNE.B     T000188
T000184:   OR.W      #$0300,D2
.scan9:
T000188:   CMP.B     #$3B,D1
T00018c:   BCS.B     T00019A
T00018e:   CMP.B     #$44,D1
T000192:   BHI.B     T00019A
T000194:   MOVE.B    D1,D0
T000196:   SUB.B     #$2B,D0
.cat_codes:
T00019a:   MOVEA.L   pkey_shift,A0
T0001a0:   MOVE.B    (A0,D1.W),D3
T0001a4:   OR.W      D2,D0
T0001a6:   BMI.B     T0001AE
T0001a8:   AND.W     #$0C00,D2
T0001ac:   BNE.B     T0001BC
.scan10:
T0001ae:   MOVEA.L   pkey_unshift,A0
T0001b4:   CMP.B     (A0,D1.W),D3
T0001b8:   BEQ.B     T0001CE
T0001ba:   BRA.B     T0001D2
.scan11:
T0001bc:   OR.W      #$8000,D0
T0001c0:   MOVEA.L   pkey_caps,A0
T0001c6:   CMP.B     (A0,D1.W),D3
T0001ca:   BNE.B     T0001D2
T0001cc:   MOVE.B    D3,D0
.scan12:
T0001ce:   OR.W      #$4000,D0
.exit:
T0001d2:   TST.W     D0
T0001d4:   MOVEM.L   (A7)+,D3-D4
T0001d8:   RTS
.tos306:
T0001da:   AND.W     #$1000,D2
T0001de:   OR.W      D2,D0
T0001e0:   MOVEM.L   (A7)+,D3-D4
T0001e4:   RTS
nkc_n2tos:
T0001e6:   MOVE.W    D0,D1
T0001e8:   AND.W     #$8C00,D1
T0001ec:   CMP.W     #$8000,D1
T0001f0:   BNE.B     T000216
T0001f2:   CMP.B     #$20,D0
T0001f6:   BCS.B     T000216
T0001f8:   MOVE.W    D0,D1
T0001fa:   AND.L     #$00001300,D0
T000200:   BTST.L    #$000D,D1
T000204:   BEQ.B     T00020A
T000206:   OR.W      #$0C00,D0
.mackey:
T00020a:   OR.B      #$FF,D0
T00020e:   SWAP      D0
T000210:   MOVE.B    D1,D0
T000212:   BRA       T00033E
.ktab0:
T000216:   MOVE.W    D0,D1
T000218:   AND.W     #$0300,D1
T00021c:   BEQ.B     T00022C
T00021e:   LEA.L     n_to_scan_s,A1
T000224:   MOVEA.L   pkey_shift,A0
T00022a:   BRA.B     T000246
.ktab1:
T00022c:   LEA.L     n_to_scan_u,A1
T000232:   BTST.L    #$000C,D0
T000236:   BEQ.B     T000240
T000238:   MOVEA.L   pkey_caps,A0
T00023e:   BRA.B     T000246
.ktab2:
T000240:   MOVEA.L   pkey_unshift,A0
.ktab3:
T000246:   CMP.B     #$20,D0
T00024a:   BCS.B     T000280
T00024c:   BSR       T010000
T000250:   BNE.B     T0002AC
T000252:   BTST.L    #$000F,D0
T000256:   BEQ.B     T000270
T000258:   MOVE.L    A0,D1
T00025a:   LEA.L     tolower,A0
T000260:   MOVEQ.L   #$00,D2
T000262:   MOVE.B    D0,D2
T000264:   MOVE.B    (A0,D2.W),D0
T000268:   MOVEA.L   D1,A0
T00026a:   BSR       T010000
T00026e:   BNE.B     T0002AC
.notfound:
T000270:   MOVEQ.L   #$00,D1
T000272:   MOVE.B    D0,D1
T000274:   AND.W     #$1F00,D0
T000278:   SWAP      D0
T00027a:   MOVE.W    D1,D0
T00027c:   BRA       T00033E
.lowascii:
T000280:   BTST.L    #$000F,D0
T000284:   BNE.B     T00028C
T000286:   AND.W     #$10FF,D0
T00028a:   BRA.B     T000270
.func:
T00028c:   MOVEQ.L   #$00,D1
T00028e:   MOVE.B    D0,D1
T000290:   MOVE.W    D1,D2
T000292:   MOVE.B    (A1,D1.W),D1
T000296:   BNE.B     T00029E
T000298:   MOVEQ.L   #$00,D0
T00029a:   BRA       T00033E
.getascii:
T00029e:   LEA.L     n_to_scan_u,A1
T0002a4:   MOVE.B    (A1,D2.W),D2
T0002a8:   MOVE.B    (A0,D2.W),D0
.found:
T0002ac:   MOVE.W    D0,D2
T0002ae:   AND.W     #$1F00,D0
T0002b2:   MOVE.B    D1,D0
T0002b4:   SWAP      D0
T0002b6:   CLR.W     D0
T0002b8:   MOVE.B    D2,D0
T0002ba:   BTST.L    #$000A,D2
T0002be:   BEQ.B     T000308
T0002c0:   CMP.B     #$4B,D1
T0002c4:   BNE.B     T0002D0
T0002c6:   ADD.L     #$00280000,D0
T0002cc:   CLR.B     D0
T0002ce:   BRA.B     T00033E
.scanchk2:
T0002d0:   CMP.B     #$4D,D1
T0002d4:   BNE.B     T0002E0
T0002d6:   ADD.L     #$00270000,D0
T0002dc:   CLR.B     D0
T0002de:   BRA.B     T00033E
.scanchk3:
T0002e0:   CMP.B     #$47,D1
T0002e4:   BNE.B     T0002EE
T0002e6:   ADD.L     #$00300000,D0
T0002ec:   BRA.B     T00033E
.ascchk:
T0002ee:   LEA.L     asc_trans,A0
.ascloop:
T0002f4:   MOVE.W    (A0)+,D1
T0002f6:   BEQ.B     T000302
T0002f8:   CMP.B     D0,D1
T0002fa:   BNE.B     T0002F4
T0002fc:   LSR.W     #8,D1
T0002fe:   MOVE.B    D1,D0
T000300:   BRA.B     T00033E
.noctrlasc:
T000302:   AND.B     #$1F,D0
T000306:   BRA.B     T00033E
.alternate:
T000308:   BTST.L    #$000B,D2
T00030c:   BEQ.B     T00033E
T00030e:   CMP.B     #$02,D1
T000312:   BCS.B     T000324
T000314:   CMP.B     #$0D,D1
T000318:   BHI.B     T000324
T00031a:   ADD.L     #$00760000,D0
T000320:   CLR.B     D0
T000322:   BRA.B     T00033E
.alphachk:
T000324:   CMP.B     #$41,D0
T000328:   BCS.B     T00033E
T00032a:   CMP.B     #$7A,D0
T00032e:   BHI.B     T00033E
T000330:   CMP.B     #$5A,D0
T000334:   BLS.B     T00033C
T000336:   CMP.B     #$61,D0
T00033a:   BCS.B     T00033E
.ascii0:
T00033c:   CLR.B     D0
.exit:
T00033e:   TST.L     D0
T000340:   RTS
nkc_toupper:
T000342:   LEA.L     toupper,A0
T000348:   AND.W     #$00FF,D0
T00034c:   MOVE.B    (A0,D0.W),D0
T000350:   RTS
nkc_tolower:
T000352:   LEA.L     tolower,A0
T000358:   AND.W     #$00FF,D0
T00035c:   MOVE.B    (A0,D0.W),D0
T000360:   RTS

          .ENDMOD


          .MODULE LOCAL


          .ENDMOD


          .MODULE GLOBAL

ACSInitLineA:
T000000:   MOVEM.L   D3-D7/A2-A6,-(A7)
T000004:   LINEA     #$A000
T000006:   LEA.L     Linea,A3
T00000c:   MOVE.L    A0,(A3)
T00000e:   LEA.L     -$038E(A0),A0
T000012:   LEA.L     Vdiesc,A3
T000018:   MOVE.L    A0,(A3)
T00001a:   LEA.L     Fonts,A3
T000020:   MOVE.L    A1,(A3)
T000022:   LEA.L     Linea_funp,A3
T000028:   MOVE.L    A2,(A3)
T00002a:   MOVEM.L   (A7)+,D3-D7/A2-A6
T00002e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getKeyTab:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     kt,A2
T000008:   MOVE.L    (A2),D0
T00000a:   BNE.B     T00002A
T00000c:   MOVEA.L   A2,A0
T00000e:   MOVE.L    #$4B455954,D0
T000014:   JSR       Ash_getcookie
T00001a:   TST.W     D0
T00001c:   BEQ.B     T000028
T00001e:   MOVEA.L   (A2),A0
T000020:   CMPI.L    #$4B455954,(A0)
T000026:   BEQ.B     T00002A
T000028:   CLR.L     (A2)
T00002a:   MOVEA.L   (A2),A0
T00002c:   MOVEA.L   (A7)+,A2
T00002e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpMinNr:
T000000:   MOVE.L    A2,-(A7)
T000002:   BSR       Akt_getKeyTab
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T00001C
T00000c:   MOVEQ.L   #$68,D1
T00000e:   CMP.L     $0004(A2),D1
T000012:   BGT.B     T00001C
T000014:   MOVEA.L   $0068(A2),A0
T000018:   JSR       (A0)
T00001a:   BRA.B     T00001E
T00001c:   CLR.W     D0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpMaxNr:
T000000:   MOVE.L    A2,-(A7)
T000002:   BSR       Akt_getKeyTab
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T000014
T00000c:   MOVEA.L   $0008(A2),A0
T000010:   JSR       (A0)
T000012:   BRA.B     T000016
T000014:   MOVEQ.L   #-$01,D0
T000016:   MOVEA.L   (A7)+,A2
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpMinNr:
T000000:   MOVE.L    A2,-(A7)
T000002:   BSR       Akt_getKeyTab
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T00001C
T00000c:   MOVEQ.L   #$68,D1
T00000e:   CMP.L     $0004(A2),D1
T000012:   BGT.B     T00001C
T000014:   MOVEA.L   $006C(A2),A0
T000018:   JSR       (A0)
T00001a:   BRA.B     T00001E
T00001c:   CLR.W     D0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpMaxNr:
T000000:   MOVE.L    A2,-(A7)
T000002:   BSR       Akt_getKeyTab
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T000014
T00000c:   MOVEA.L   $0018(A2),A0
T000010:   JSR       (A0)
T000012:   BRA.B     T000016
T000014:   MOVEQ.L   #-$01,D0
T000016:   MOVEA.L   (A7)+,A2
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpNameFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000034
T000010:   MOVEQ.L   #$38,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000026
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $0030(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   MOVEA.L   D0,A0
T000024:   BRA.B     T000036
T000026:   MOVE.W    D3,-(A7)
T000028:   MOVE.W    D3,D0
T00002a:   MOVEA.L   $000C(A2),A0
T00002e:   JSR       (A0)
T000030:   ADDQ.W    #2,A7
T000032:   BRA.B     T000036
T000034:   SUBA.L    A0,A0
T000036:   MOVEA.L   (A7)+,A2
T000038:   MOVE.W    (A7)+,D3
T00003a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpNameFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000034
T000010:   MOVEQ.L   #$38,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000026
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $0034(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   MOVEA.L   D0,A0
T000024:   BRA.B     T000036
T000026:   MOVE.W    D3,-(A7)
T000028:   MOVE.W    D3,D0
T00002a:   MOVEA.L   $001C(A2),A0
T00002e:   JSR       (A0)
T000030:   ADDQ.W    #2,A7
T000032:   BRA.B     T000036
T000034:   SUBA.L    A0,A0
T000036:   MOVEA.L   (A7)+,A2
T000038:   MOVE.W    (A7)+,D3
T00003a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpShortNameFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000026
T000010:   MOVEQ.L   #$40,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000026
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $0038(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   MOVEA.L   D0,A0
T000024:   BRA.B     T000028
T000026:   SUBA.L    A0,A0
T000028:   MOVEA.L   (A7)+,A2
T00002a:   MOVE.W    (A7)+,D3
T00002c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpShortNameFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000026
T000010:   MOVEQ.L   #$40,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000026
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $003C(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   MOVEA.L   D0,A0
T000024:   BRA.B     T000028
T000026:   SUBA.L    A0,A0
T000028:   MOVEA.L   (A7)+,A2
T00002a:   MOVE.W    (A7)+,D3
T00002c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getRelease:
T000000:   MOVE.L    A2,-(A7)
T000002:   BSR       Akt_getKeyTab
T000006:   MOVEA.L   A0,A2
T000008:   MOVE.L    A2,D0
T00000a:   BEQ.B     T00001C
T00000c:   MOVEQ.L   #$4C,D1
T00000e:   CMP.L     $0004(A2),D1
T000012:   BGT.B     T00001C
T000014:   MOVEA.L   $0040(A2),A0
T000018:   JSR       (A0)
T00001a:   BRA.B     T00001E
T00001c:   MOVEQ.L   #-$01,D0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpNrFromId:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T00001C
T000010:   MOVE.W    D3,-(A7)
T000012:   MOVEA.L   $0010(A2),A0
T000016:   JSR       (A0)
T000018:   ADDQ.W    #2,A7
T00001a:   BRA.B     T00001E
T00001c:   MOVEQ.L   #-$01,D0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   MOVE.W    (A7)+,D3
T000022:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpNrFromId:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T00001C
T000010:   MOVE.W    D3,-(A7)
T000012:   MOVEA.L   $0020(A2),A0
T000016:   JSR       (A0)
T000018:   ADDQ.W    #2,A7
T00001a:   BRA.B     T00001E
T00001c:   MOVEQ.L   #-$01,D0
T00001e:   MOVEA.L   (A7)+,A2
T000020:   MOVE.W    (A7)+,D3
T000022:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpIdFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000024
T000010:   MOVEQ.L   #$4C,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000024
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $0044(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   BRA.B     T000026
T000024:   MOVEQ.L   #-$01,D0
T000026:   MOVEA.L   (A7)+,A2
T000028:   MOVE.W    (A7)+,D3
T00002a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpIdFromNr:
T000000:   MOVE.W    D3,-(A7)
T000002:   MOVE.L    A2,-(A7)
T000004:   MOVE.W    D0,D3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000024
T000010:   MOVEQ.L   #$4C,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000024
T000018:   MOVE.W    D3,-(A7)
T00001a:   MOVEA.L   $0048(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #2,A7
T000022:   BRA.B     T000026
T000024:   MOVEQ.L   #-$01,D0
T000026:   MOVEA.L   (A7)+,A2
T000028:   MOVE.W    (A7)+,D3
T00002a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getExpNrFromName:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000024
T000010:   MOVEQ.L   #$54,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000024
T000018:   MOVE.L    A3,-(A7)
T00001a:   MOVEA.L   $004C(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #4,A7
T000022:   BRA.B     T000026
T000024:   CLR.W     D0
T000026:   MOVEA.L   (A7)+,A3
T000028:   MOVEA.L   (A7)+,A2
T00002a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getImpNrFromName:
T000000:   MOVE.L    A2,-(A7)
T000002:   MOVE.L    A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   BSR       Akt_getKeyTab
T00000a:   MOVEA.L   A0,A2
T00000c:   MOVE.L    A2,D0
T00000e:   BEQ.B     T000024
T000010:   MOVEQ.L   #$54,D1
T000012:   CMP.L     $0004(A2),D1
T000016:   BGT.B     T000024
T000018:   MOVE.L    A3,-(A7)
T00001a:   MOVEA.L   $0050(A2),A0
T00001e:   JSR       (A0)
T000020:   ADDQ.W    #4,A7
T000022:   BRA.B     T000026
T000024:   CLR.W     D0
T000026:   MOVEA.L   (A7)+,A3
T000028:   MOVEA.L   (A7)+,A2
T00002a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_getEuro:
T000000:   MOVE.L    A2,-(A7)
T000002:   SUBQ.W    #4,A7
T000004:   BSR       Akt_getKeyTab
T000008:   MOVEA.L   A0,A2
T00000a:   MOVE.L    A2,D0
T00000c:   BEQ.B     T00001E
T00000e:   MOVEQ.L   #$58,D1
T000010:   CMP.L     $0004(A2),D1
T000014:   BGT.B     T00001E
T000016:   MOVEA.L   $0054(A2),A0
T00001a:   JSR       (A0)
T00001c:   BRA.B     T00003A
T00001e:   LEA.L     (A7),A0
T000020:   MOVE.L    #$4555524F,D0
T000026:   JSR       Ash_getcookie
T00002c:   TST.W     D0
T00002e:   BEQ.B     T000034
T000030:   MOVE.L    (A7),D0
T000032:   BRA.B     T00003A
T000034:   MOVE.L    #$000002EC,D0
T00003a:   ADDQ.W    #4,A7
T00003c:   MOVEA.L   (A7)+,A2
T00003e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharAtari2X:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVE.B    D1,D3
T000008:   BSR       Akt_getKeyTab
T00000c:   MOVEA.L   A0,A2
T00000e:   MOVE.L    A2,D0
T000010:   BEQ.B     T000020
T000012:   MOVE.B    D3,-(A7)
T000014:   MOVE.W    D4,-(A7)
T000016:   MOVEA.L   $0014(A2),A0
T00001a:   JSR       (A0)
T00001c:   ADDQ.W    #4,A7
T00001e:   BRA.B     T000022
T000020:   MOVE.B    D3,D0
T000022:   MOVEM.L   (A7)+,D3-D4/A2
T000026:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharX2Atari:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVE.B    D1,D3
T000008:   BSR       Akt_getKeyTab
T00000c:   MOVEA.L   A0,A2
T00000e:   MOVE.L    A2,D0
T000010:   BEQ.B     T000020
T000012:   MOVE.B    D3,-(A7)
T000014:   MOVE.W    D4,-(A7)
T000016:   MOVEA.L   $0024(A2),A0
T00001a:   JSR       (A0)
T00001c:   ADDQ.W    #4,A7
T00001e:   BRA.B     T000022
T000020:   MOVE.B    D3,D0
T000022:   MOVEM.L   (A7)+,D3-D4/A2
T000026:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockAtari2X:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D4
T000008:   MOVEA.L   A1,A4
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A4,D0
T000014:   BEQ.B     T000026
T000016:   CMP.L     A3,D0
T000018:   BEQ.B     T000026
T00001a:   MOVEA.L   A4,A1
T00001c:   MOVEA.L   A3,A0
T00001e:   MOVE.L    D3,D0
T000020:   JSR       memcpy
T000026:   MOVE.L    A2,D0
T000028:   BEQ.B     T000060
T00002a:   MOVEQ.L   #$30,D1
T00002c:   CMP.L     $0004(A2),D1
T000030:   BGT.B     T000044
T000032:   MOVE.L    A3,-(A7)
T000034:   MOVE.L    D3,-(A7)
T000036:   MOVE.W    D4,-(A7)
T000038:   MOVEA.L   $0028(A2),A0
T00003c:   JSR       (A0)
T00003e:   LEA.L     $000A(A7),A7
T000042:   BRA.B     T000060
T000044:   MOVEA.L   A3,A4
T000046:   MOVEQ.L   #$00,D5
T000048:   BRA.B     T00005C
T00004a:   MOVE.B    (A4),-(A7)
T00004c:   MOVE.W    D4,-(A7)
T00004e:   MOVEA.L   $0014(A2),A0
T000052:   JSR       (A0)
T000054:   ADDQ.W    #4,A7
T000056:   MOVE.B    D0,(A4)
T000058:   ADDQ.L    #1,D5
T00005a:   ADDQ.W    #1,A4
T00005c:   CMP.L     D5,D3
T00005e:   BGT.B     T00004A
T000060:   MOVEA.L   A3,A0
T000062:   MOVEM.L   (A7)+,D3-D5/A2-A4
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockX2Atari:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D4
T000008:   MOVEA.L   A1,A4
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A4,D0
T000014:   BEQ.B     T000026
T000016:   CMP.L     A3,D0
T000018:   BEQ.B     T000026
T00001a:   MOVEA.L   A4,A1
T00001c:   MOVEA.L   A3,A0
T00001e:   MOVE.L    D3,D0
T000020:   JSR       memcpy
T000026:   MOVE.L    A2,D0
T000028:   BEQ.B     T000060
T00002a:   MOVEQ.L   #$30,D1
T00002c:   CMP.L     $0004(A2),D1
T000030:   BGT.B     T000044
T000032:   MOVE.L    A3,-(A7)
T000034:   MOVE.L    D3,-(A7)
T000036:   MOVE.W    D4,-(A7)
T000038:   MOVEA.L   $002C(A2),A0
T00003c:   JSR       (A0)
T00003e:   LEA.L     $000A(A7),A7
T000042:   BRA.B     T000060
T000044:   MOVEA.L   A3,A4
T000046:   MOVEQ.L   #$00,D5
T000048:   BRA.B     T00005C
T00004a:   MOVE.B    (A4),-(A7)
T00004c:   MOVE.W    D4,-(A7)
T00004e:   MOVEA.L   $0024(A2),A0
T000052:   JSR       (A0)
T000054:   ADDQ.W    #4,A7
T000056:   MOVE.B    D0,(A4)
T000058:   ADDQ.L    #1,D5
T00005a:   ADDQ.W    #1,A4
T00005c:   CMP.L     D5,D3
T00005e:   BGT.B     T00004A
T000060:   MOVEA.L   A3,A0
T000062:   MOVEM.L   (A7)+,D3-D5/A2-A4
T000066:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringAtari2X:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D3
T000008:   MOVEA.L   A1,A2
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strlen
T000012:   MOVE.L    D0,D1
T000014:   ADDQ.L    #1,D1
T000016:   MOVEA.L   A2,A1
T000018:   MOVE.W    D3,D0
T00001a:   MOVEA.L   A3,A0
T00001c:   BSR       Akt_BlockAtari2X
T000020:   MOVEM.L   (A7)+,D3/A2-A3
T000024:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringX2Atari:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D3
T000008:   MOVEA.L   A1,A2
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strlen
T000012:   MOVE.L    D0,D1
T000014:   ADDQ.L    #1,D1
T000016:   MOVEA.L   A2,A1
T000018:   MOVE.W    D3,D0
T00001a:   MOVEA.L   A3,A0
T00001c:   BSR       Akt_BlockX2Atari
T000020:   MOVEM.L   (A7)+,D3/A2-A3
T000024:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharX2Unicode:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVE.B    D1,D3
T000008:   BSR       Akt_getKeyTab
T00000c:   MOVEA.L   A0,A2
T00000e:   MOVE.L    A2,D0
T000010:   BEQ.B     T000028
T000012:   MOVEQ.L   #$60,D1
T000014:   CMP.L     $0004(A2),D1
T000018:   BGT.B     T000028
T00001a:   MOVE.B    D3,-(A7)
T00001c:   MOVE.W    D4,-(A7)
T00001e:   MOVEA.L   $0058(A2),A0
T000022:   JSR       (A0)
T000024:   ADDQ.W    #4,A7
T000026:   BRA.B     T00002C
T000028:   MOVE.B    D3,D0
T00002a:   EXT.W     D0
T00002c:   MOVEM.L   (A7)+,D3-D4/A2
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharUnicode2X:
T000000:   MOVEM.L   D3-D4/A2,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVE.W    D1,D3
T000008:   BSR       Akt_getKeyTab
T00000c:   MOVEA.L   A0,A2
T00000e:   MOVE.L    A2,D0
T000010:   BEQ.B     T000028
T000012:   MOVEQ.L   #$60,D1
T000014:   CMP.L     $0004(A2),D1
T000018:   BGT.B     T000028
T00001a:   MOVE.W    D3,-(A7)
T00001c:   MOVE.W    D4,-(A7)
T00001e:   MOVEA.L   $005C(A2),A0
T000022:   JSR       (A0)
T000024:   ADDQ.W    #4,A7
T000026:   BRA.B     T00002C
T000028:   MOVEQ.L   #-$01,D0
T00002a:   AND.B     D3,D0
T00002c:   MOVEM.L   (A7)+,D3-D4/A2
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockX2Unicode:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVE.W    D0,D4
T000008:   MOVEA.L   A1,A3
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000044
T000016:   MOVEQ.L   #$60,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000032
T00001e:   MOVE.L    D3,-(A7)
T000020:   MOVE.L    A3,-(A7)
T000022:   MOVE.W    D4,-(A7)
T000024:   MOVE.L    A4,-(A7)
T000026:   MOVEA.L   $0060(A2),A0
T00002a:   JSR       (A0)
T00002c:   LEA.L     $000E(A7),A7
T000030:   BRA.B     T000044
T000032:   MOVE.L    D3,D1
T000034:   ADD.L     D1,D1
T000036:   CLR.W     D0
T000038:   MOVEA.L   A4,A0
T00003a:   JSR       memset
T000040:   SUBA.L    A0,A0
T000042:   BRA.B     T000046
T000044:   MOVEA.L   A4,A0
T000046:   MOVEM.L   (A7)+,D3-D4/A2-A4
T00004a:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockUnicode2X:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVE.W    D0,D4
T000008:   MOVEA.L   A1,A3
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000036
T000016:   MOVEQ.L   #$60,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000032
T00001e:   MOVE.L    D3,-(A7)
T000020:   MOVE.L    A3,-(A7)
T000022:   MOVE.W    D4,-(A7)
T000024:   MOVE.L    A4,-(A7)
T000026:   MOVEA.L   $0064(A2),A0
T00002a:   JSR       (A0)
T00002c:   LEA.L     $000E(A7),A7
T000030:   BRA.B     T000036
T000032:   SUBA.L    A0,A0
T000034:   BRA.B     T000038
T000036:   MOVEA.L   A4,A0
T000038:   MOVEM.L   (A7)+,D3-D4/A2-A4
T00003c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringX2Unicode:
T000000:   MOVEM.L   D3/A2-A3,-(A7)
T000004:   MOVEA.L   A0,A3
T000006:   MOVE.W    D0,D3
T000008:   MOVEA.L   A1,A2
T00000a:   MOVEA.L   A1,A0
T00000c:   JSR       strlen
T000012:   MOVE.L    D0,D1
T000014:   ADDQ.L    #1,D1
T000016:   MOVEA.L   A2,A1
T000018:   MOVE.W    D3,D0
T00001a:   MOVEA.L   A3,A0
T00001c:   BSR       Akt_BlockX2Unicode
T000020:   MOVEM.L   (A7)+,D3/A2-A3
T000024:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharXUtf2Unicode:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVEA.L   A0,A4
T000008:   MOVE.L    D1,D3
T00000a:   MOVEA.L   A1,A3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000032
T000016:   MOVEQ.L   #$68,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000032
T00001e:   MOVE.L    A3,-(A7)
T000020:   MOVE.L    D3,-(A7)
T000022:   MOVE.L    A4,-(A7)
T000024:   MOVE.W    D4,-(A7)
T000026:   MOVEA.L   $0070(A2),A0
T00002a:   JSR       (A0)
T00002c:   LEA.L     $000E(A7),A7
T000030:   BRA.B     T000044
T000032:   MOVE.L    A3,D0
T000034:   BEQ.B     T00003A
T000036:   MOVE.W    #$0001,(A3)
T00003a:   MOVE.B    (A4),D1
T00003c:   MOVE.W    D4,D0
T00003e:   BSR       Akt_CharX2Unicode
T000042:   EXT.L     D0
T000044:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000048:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_CharUnicode2XUtf:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVE.W    D0,D4
T000006:   MOVE.L    D1,D3
T000008:   MOVEA.L   A0,A4
T00000a:   MOVEA.L   A1,A3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000034
T000016:   MOVEQ.L   #$68,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000034
T00001e:   MOVE.L    A3,-(A7)
T000020:   MOVE.L    A4,-(A7)
T000022:   MOVE.L    D3,-(A7)
T000024:   MOVE.W    D4,-(A7)
T000026:   MOVEA.L   $0074(A2),A0
T00002a:   JSR       (A0)
T00002c:   LEA.L     $000E(A7),A7
T000030:   MOVEA.L   D0,A0
T000032:   BRA.B     T00004E
T000034:   MOVE.L    A3,D0
T000036:   BEQ.B     T00003C
T000038:   MOVE.W    #$0001,(A3)
T00003c:   MOVE.L    A4,D0
T00003e:   BEQ.B     T00004C
T000040:   MOVEQ.L   #-$01,D1
T000042:   AND.W     D3,D1
T000044:   MOVE.W    D4,D0
T000046:   BSR       Akt_CharUnicode2X
T00004a:   MOVE.B    D0,(A4)
T00004c:   MOVEA.L   A4,A0
T00004e:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000052:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockXUtf2Unicode:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D4
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T00003A
T000016:   MOVEQ.L   #$68,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000036
T00001e:   MOVE.L    D3,-(A7)
T000020:   MOVE.L    $001C(A7),-(A7)
T000024:   MOVE.W    D4,-(A7)
T000026:   MOVE.L    A3,-(A7)
T000028:   MOVE.L    A4,-(A7)
T00002a:   MOVEA.L   $0078(A2),A0
T00002e:   JSR       (A0)
T000030:   LEA.L     $0012(A7),A7
T000034:   BRA.B     T00003A
T000036:   SUBA.L    A0,A0
T000038:   BRA.B     T00003C
T00003a:   MOVEA.L   A4,A0
T00003c:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000040:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockUnicode2XUtf:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D4
T00000a:   MOVE.L    D1,D3
T00000c:   BSR       Akt_getKeyTab
T000010:   MOVEA.L   A0,A2
T000012:   MOVE.L    A2,D0
T000014:   BEQ.B     T000038
T000016:   MOVEQ.L   #$68,D1
T000018:   CMP.L     $0004(A2),D1
T00001c:   BGT.B     T000038
T00001e:   MOVE.L    D3,-(A7)
T000020:   MOVE.L    $001C(A7),-(A7)
T000024:   MOVE.W    D4,-(A7)
T000026:   MOVE.L    A3,-(A7)
T000028:   MOVE.L    A4,-(A7)
T00002a:   MOVEA.L   $007C(A2),A0
T00002e:   JSR       (A0)
T000030:   LEA.L     $0012(A7),A7
T000034:   MOVEA.L   A4,A0
T000036:   BRA.B     T00003A
T000038:   SUBA.L    A0,A0
T00003a:   MOVEM.L   (A7)+,D3-D4/A2-A4
T00003e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockXUtf2U2XUtf:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D5
T00000a:   MOVE.L    D1,D4
T00000c:   MOVE.W    D2,D3
T00000e:   BSR       Akt_getKeyTab
T000012:   MOVEA.L   A0,A2
T000014:   MOVE.L    A2,D0
T000016:   BEQ.B     T000048
T000018:   CMPI.L    #$00000084,$0004(A2)
T000020:   BLT.B     T00003E
T000022:   MOVE.W    D3,-(A7)
T000024:   MOVE.L    D4,-(A7)
T000026:   MOVE.L    $0022(A7),-(A7)
T00002a:   MOVE.W    D5,-(A7)
T00002c:   MOVE.L    A3,-(A7)
T00002e:   MOVE.L    A4,-(A7)
T000030:   MOVEA.L   $0080(A2),A0
T000034:   JSR       (A0)
T000036:   LEA.L     $0014(A7),A7
T00003a:   MOVEA.L   A4,A0
T00003c:   BRA.B     T00004A
T00003e:   MOVE.L    A3,D0
T000040:   BEQ.B     T000048
T000042:   MOVE.L    #$FFFFFFFF,(A3)
T000048:   SUBA.L    A0,A0
T00004a:   MOVEM.L   (A7)+,D3-D5/A2-A4
T00004e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_BlockXUtf2XUtf:
T000000:   MOVEM.L   D3-D5/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D5
T00000a:   MOVE.L    D1,D4
T00000c:   MOVE.W    D2,D3
T00000e:   BSR       Akt_getKeyTab
T000012:   MOVEA.L   A0,A2
T000014:   MOVE.L    A2,D0
T000016:   BEQ.B     T000048
T000018:   CMPI.L    #$00000088,$0004(A2)
T000020:   BLT.B     T00003E
T000022:   MOVE.W    D3,-(A7)
T000024:   MOVE.L    D4,-(A7)
T000026:   MOVE.L    $0022(A7),-(A7)
T00002a:   MOVE.W    D5,-(A7)
T00002c:   MOVE.L    A3,-(A7)
T00002e:   MOVE.L    A4,-(A7)
T000030:   MOVEA.L   $0084(A2),A0
T000034:   JSR       (A0)
T000036:   LEA.L     $0014(A7),A7
T00003a:   MOVEA.L   A4,A0
T00003c:   BRA.B     T00004A
T00003e:   MOVE.L    A3,D0
T000040:   BEQ.B     T000048
T000042:   MOVE.L    #$FFFFFFFF,(A3)
T000048:   SUBA.L    A0,A0
T00004a:   MOVEM.L   (A7)+,D3-D5/A2-A4
T00004e:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringXUtf2Unicode:
T000000:   MOVEM.L   D3/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D3
T00000a:   MOVEA.L   $0014(A7),A2
T00000e:   MOVE.L    A2,-(A7)
T000010:   MOVEA.L   A2,A0
T000012:   JSR       strlen
T000018:   MOVE.L    D0,D1
T00001a:   ADDQ.L    #1,D1
T00001c:   MOVE.W    D3,D0
T00001e:   MOVEA.L   A3,A1
T000020:   MOVEA.L   A4,A0
T000022:   BSR       Akt_BlockXUtf2Unicode
T000026:   ADDQ.W    #4,A7
T000028:   MOVEM.L   (A7)+,D3/A2-A4
T00002c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringXUtf2U2XUtf:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D4
T00000a:   MOVEA.L   $0018(A7),A2
T00000e:   MOVE.W    D1,D3
T000010:   MOVE.L    A2,-(A7)
T000012:   MOVEA.L   A2,A0
T000014:   JSR       strlen
T00001a:   MOVE.L    D0,D1
T00001c:   ADDQ.L    #1,D1
T00001e:   MOVE.W    D4,D0
T000020:   MOVEA.L   A3,A1
T000022:   MOVEA.L   A4,A0
T000024:   MOVE.W    D3,D2
T000026:   BSR       Akt_BlockXUtf2U2XUtf
T00002a:   ADDQ.W    #4,A7
T00002c:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Akt_StringXUtf2XUtf:
T000000:   MOVEM.L   D3-D4/A2-A4,-(A7)
T000004:   MOVEA.L   A0,A4
T000006:   MOVEA.L   A1,A3
T000008:   MOVE.W    D0,D4
T00000a:   MOVEA.L   $0018(A7),A2
T00000e:   MOVE.W    D1,D3
T000010:   MOVE.L    A2,-(A7)
T000012:   MOVEA.L   A2,A0
T000014:   JSR       strlen
T00001a:   MOVE.L    D0,D1
T00001c:   ADDQ.L    #1,D1
T00001e:   MOVE.W    D4,D0
T000020:   MOVEA.L   A3,A1
T000022:   MOVEA.L   A4,A0
T000024:   MOVE.W    D3,D2
T000026:   BSR       Akt_BlockXUtf2XUtf
T00002a:   ADDQ.W    #4,A7
T00002c:   MOVEM.L   (A7)+,D3-D4/A2-A4
T000030:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_create:
T000000:   SUBQ.W    #4,A7
T000002:   MOVEQ.L   #$44,D0
T000004:   JSR       Ax_malloc
T00000a:   MOVE.L    A0,(A7)
T00000c:   MOVE.L    (A7),D0
T00000e:   BNE.B     T000014
T000010:   SUBA.L    A0,A0
T000012:   BRA.B     T000050
T000014:   MOVEQ.L   #$44,D0
T000016:   LEA.L     ,A1
T00001c:   MOVEA.L   (A7),A0
T00001e:   JSR       memcpy
T000024:   MOVEQ.L   #$14,D0
T000026:   JSR       Ax_malloc
T00002c:   MOVEA.L   (A7),A1
T00002e:   MOVE.L    A0,(A1)
T000030:   MOVEA.L   (A7),A0
T000032:   MOVE.L    (A0),D0
T000034:   BNE.B     T000044
T000036:   MOVEQ.L   #$44,D0
T000038:   MOVEA.L   (A7),A0
T00003a:   JSR       Ax_recycle
T000040:   SUBA.L    A0,A0
T000042:   BRA.B     T000050
T000044:   MOVEA.L   (A7),A0
T000046:   MOVEA.L   (A0),A0
T000048:   JSR       InitLinListe
T00004e:   MOVEA.L   (A7),A0
T000050:   ADDQ.W    #4,A7
T000052:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_delete:
T000000:   SUBQ.W    #4,A7
T000002:   MOVE.L    A0,(A7)
T000004:   MOVE.L    (A7),D0
T000006:   BEQ.B     T000024
T000008:   MOVEA.L   (A7),A0
T00000a:   JSR       Alu_clearElem
T000010:   MOVEA.L   (A7),A0
T000012:   MOVEA.L   (A0),A0
T000014:   JSR       Ax_free
T00001a:   MOVEQ.L   #$44,D0
T00001c:   MOVEA.L   (A7),A0
T00001e:   JSR       Ax_recycle
T000024:   ADDQ.W    #4,A7
T000026:   RTS

          .ENDMOD


          .MODULE LOCAL

InitLinListe:
T000000:   SUBQ.W    #4,A7
T000002:   MOVE.L    A0,(A7)
T000004:   MOVEA.L   (A7),A0
T000006:   CLR.L     (A0)
T000008:   MOVEA.L   (A7),A0
T00000a:   CLR.L     $0004(A0)
T00000e:   MOVEA.L   (A7),A0
T000010:   CLR.L     $0008(A0)
T000014:   MOVEA.L   (A7),A0
T000016:   CLR.L     $000C(A0)
T00001a:   MOVEA.L   (A7),A0
T00001c:   CLR.L     $0010(A0)
T000020:   ADDQ.W    #4,A7
T000022:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_clearElem:
T000000:   LEA.L     -$0010(A7),A7
T000004:   MOVE.L    A0,$000C(A7)
T000008:   MOVEA.L   $000C(A7),A0
T00000c:   MOVE.L    (A0),$0008(A7)
T000010:   MOVEA.L   $0008(A7),A0
T000014:   MOVE.L    (A0),$0004(A7)
T000018:   BRA.B     T00004C
T00001a:   MOVEA.L   $0004(A7),A0
T00001e:   MOVE.L    (A0),(A7)
T000020:   MOVEA.L   $000C(A7),A0
T000024:   MOVE.L    $0004(A0),D0
T000028:   BEQ.B     T00003C
T00002a:   MOVEA.L   $0004(A7),A0
T00002e:   MOVEA.L   $0008(A0),A0
T000032:   MOVEA.L   $000C(A7),A1
T000036:   MOVEA.L   $0004(A1),A1
T00003a:   JSR       (A1)
T00003c:   MOVEQ.L   #$0C,D0
T00003e:   MOVEA.L   $0004(A7),A0
T000042:   JSR       Ax_recycle
T000048:   MOVE.L    (A7),$0004(A7)
T00004c:   MOVE.L    $0004(A7),D0
T000050:   BNE.B     T00001A
T000052:   MOVEA.L   $0008(A7),A0
T000056:   BSR       InitLinListe
T00005a:   LEA.L     $0010(A7),A7
T00005e:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_appendElem:
T000000:   LEA.L     -$0010(A7),A7
T000004:   MOVE.L    A0,$000C(A7)
T000008:   MOVE.L    A1,$0008(A7)
T00000c:   CLR.L     $0004(A7)
T000010:   MOVEA.L   $000C(A7),A0
T000014:   MOVE.L    (A0),(A7)
T000016:   MOVEQ.L   #$0C,D0
T000018:   JSR       Ax_malloc
T00001e:   MOVE.L    A0,$0004(A7)
T000022:   MOVE.L    $0004(A7),D0
T000026:   BNE.B     T00002C
T000028:   CLR.W     D0
T00002a:   BRA.B     T00008E
T00002c:   MOVEA.L   $0004(A7),A0
T000030:   MOVE.L    $0008(A7),$0008(A0)
T000036:   MOVEQ.L   #$00,D0
T000038:   MOVEA.L   $0004(A7),A0
T00003c:   MOVE.L    D0,$0004(A0)
T000040:   MOVEA.L   $0004(A7),A0
T000044:   MOVE.L    D0,(A0)
T000046:   MOVEA.L   (A7),A0
T000048:   MOVE.L    (A0),D0
T00004a:   BNE.B     T000060
T00004c:   MOVEA.L   (A7),A0
T00004e:   MOVE.L    $0004(A7),(A0)
T000052:   MOVEA.L   (A7),A0
T000054:   MOVE.L    $0004(A7),$000C(A0)
T00005a:   MOVEA.L   (A7),A0
T00005c:   CLR.L     $0010(A0)
T000060:   MOVEA.L   (A7),A0
T000062:   MOVE.L    $0004(A0),D0
T000066:   BEQ.B     T000072
T000068:   MOVEA.L   (A7),A0
T00006a:   MOVEA.L   $0004(A0),A0
T00006e:   MOVE.L    $0004(A7),(A0)
T000072:   MOVEA.L   (A7),A0
T000074:   MOVEA.L   $0004(A7),A1
T000078:   MOVE.L    $0004(A0),$0004(A1)
T00007e:   MOVEA.L   (A7),A0
T000080:   MOVE.L    $0004(A7),$0004(A0)
T000086:   MOVEA.L   (A7),A0
T000088:   ADDQ.L    #1,$0008(A0)
T00008c:   MOVEQ.L   #$01,D0
T00008e:   LEA.L     $0010(A7),A7
T000092:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_insertElem:
T000000:   LEA.L     -$001A(A7),A7
T000004:   MOVE.L    A0,$0016(A7)
T000008:   MOVE.L    A1,$0012(A7)
T00000c:   MOVE.W    D0,$0010(A7)
T000010:   CLR.L     $0008(A7)
T000014:   CLR.L     $0004(A7)
T000018:   MOVEA.L   $0016(A7),A0
T00001c:   MOVE.L    (A0),(A7)
T00001e:   MOVEQ.L   #$0C,D0
T000020:   JSR       Ax_malloc
T000026:   MOVE.L    A0,$0008(A7)
T00002a:   MOVE.L    $0008(A7),D0
T00002e:   BNE.B     T000036
T000030:   CLR.W     D0
T000032:   BRA       T0000F8
T000036:   CLR.L     $000C(A7)
T00003a:   MOVEA.L   (A7),A0
T00003c:   MOVE.L    (A0),$0004(A7)
T000040:   BRA.B     T00004E
T000042:   MOVEA.L   $0004(A7),A0
T000046:   MOVE.L    (A0),$0004(A7)
T00004a:   ADDQ.L    #1,$000C(A7)
T00004e:   MOVEQ.L   #-$01,D0
T000050:   ADD.W     $0010(A7),D0
T000054:   EXT.L     D0
T000056:   MOVE.L    $000C(A7),D1
T00005a:   CMP.L     D0,D1
T00005c:   BGE.B     T000064
T00005e:   MOVE.L    $0004(A7),D0
T000062:   BNE.B     T000042
T000064:   MOVEQ.L   #-$01,D0
T000066:   ADD.W     $0010(A7),D0
T00006a:   EXT.L     D0
T00006c:   MOVE.L    $000C(A7),D1
T000070:   CMP.L     D0,D1
T000072:   BNE.B     T00007A
T000074:   MOVE.L    $0004(A7),D0
T000078:   BNE.B     T000082
T00007a:   MOVEA.L   (A7),A0
T00007c:   MOVE.L    $0004(A0),$0004(A7)
T000082:   MOVEA.L   $0008(A7),A0
T000086:   MOVE.L    $0012(A7),$0008(A0)
T00008c:   MOVEA.L   $0008(A7),A0
T000090:   CLR.L     (A0)
T000092:   MOVE.L    $0004(A7),D0
T000096:   BEQ.B     T0000D4
T000098:   MOVEA.L   $0004(A7),A0
T00009c:   MOVEA.L   $0008(A7),A1
T0000a0:   MOVE.L    (A0),(A1)
T0000a2:   MOVEA.L   $0004(A7),A0
T0000a6:   MOVE.L    $0008(A7),(A0)
T0000aa:   MOVEA.L   $0008(A7),A0
T0000ae:   MOVE.L    $0004(A7),$0004(A0)
T0000b4:   MOVEA.L   $0008(A7),A0
T0000b8:   MOVE.L    (A0),D0
T0000ba:   BEQ.B     T0000CA
T0000bc:   MOVEA.L   $0008(A7),A0
T0000c0:   MOVEA.L   (A0),A0
T0000c2:   MOVE.L    $0008(A7),$0004(A0)
T0000c8:   BRA.B     T0000D2
T0000ca:   MOVEA.L   (A7),A0
T0000cc:   MOVE.L    $0008(A7),$0004(A0)
T0000d2:   BRA.B     T0000F0
T0000d4:   MOVEA.L   $0008(A7),A0
T0000d8:   MOVEA.L   (A7),A1
T0000da:   MOVE.L    A0,$0004(A1)
T0000de:   MOVEA.L   (A7),A1
T0000e0:   MOVE.L    A0,(A1)
T0000e2:   MOVEA.L   (A7),A0
T0000e4:   MOVE.L    $0008(A7),$000C(A0)
T0000ea:   MOVEA.L   (A7),A0
T0000ec:   CLR.L     $0010(A0)
T0000f0:   MOVEA.L   (A7),A0
T0000f2:   ADDQ.L    #1,$0008(A0)
T0000f6:   MOVEQ.L   #$01,D0
T0000f8:   LEA.L     $001A(A7),A7
T0000fc:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_deleteElem:
T000000:   LEA.L     -$001A(A7),A7
T000004:   MOVE.L    A0,$0016(A7)
T000008:   MOVE.W    D0,$0014(A7)
T00000c:   CLR.L     $000C(A7)
T000010:   CLR.L     $0008(A7)
T000014:   MOVEA.L   $0016(A7),A0
T000018:   MOVE.L    (A0),$0004(A7)
T00001c:   CLR.L     $0010(A7)
T000020:   CLR.L     $000C(A7)
T000024:   MOVEA.L   $0004(A7),A0
T000028:   MOVE.L    (A0),$0008(A7)
T00002c:   BRA.B     T000040
T00002e:   MOVE.L    $0008(A7),$000C(A7)
T000034:   MOVEA.L   $0008(A7),A0
T000038:   MOVE.L    (A0),$0008(A7)
T00003c:   ADDQ.L    #1,$0010(A7)
T000040:   MOVE.W    $0014(A7),D0
T000044:   EXT.L     D0
T000046:   MOVE.L    $0010(A7),D1
T00004a:   CMP.L     D0,D1
T00004c:   BGE.B     T000054
T00004e:   MOVE.L    $0008(A7),D0
T000052:   BNE.B     T00002E
T000054:   MOVE.W    $0014(A7),D0
T000058:   EXT.L     D0
T00005a:   MOVE.L    $0010(A7),D1
T00005e:   CMP.L     D0,D1
T000060:   BEQ.B     T000068
T000062:   SUBA.L    A0,A0
T000064:   BRA       T0000E4
T000068:   MOVE.L    $000C(A7),D0
T00006c:   BEQ.B     T00007A
T00006e:   MOVEA.L   $0008(A7),A0
T000072:   MOVEA.L   $000C(A7),A1
T000076:   MOVE.L    (A0),(A1)
T000078:   BRA.B     T000084
T00007a:   MOVEA.L   $0008(A7),A0
T00007e:   MOVEA.L   $0004(A7),A1
T000082:   MOVE.L    (A0),(A1)
T000084:   MOVEA.L   $0008(A7),A0
T000088:   MOVE.L    (A0),D0
T00008a:   BEQ.B     T00009A
T00008c:   MOVEA.L   $0008(A7),A0
T000090:   MOVEA.L   (A0),A0
T000092:   MOVE.L    $000C(A7),$0004(A0)
T000098:   BRA.B     T0000A4
T00009a:   MOVEA.L   $0004(A7),A0
T00009e:   MOVE.L    $000C(A7),$0004(A0)
T0000a4:   MOVEA.L   $0004(A7),A0
T0000a8:   SUBQ.L    #1,$0008(A0)
T0000ac:   MOVEA.L   $0004(A7),A0
T0000b0:   MOVEA.L   $000C(A0),A0
T0000b4:   CMPA.L    $0008(A7),A0
T0000b8:   BNE.B     T0000CE
T0000ba:   MOVEA.L   $0004(A7),A0
T0000be:   MOVEA.L   $0004(A7),A1
T0000c2:   MOVE.L    (A0),$000C(A1)
T0000c6:   MOVEA.L   $0004(A7),A0
T0000ca:   CLR.L     $0010(A0)
T0000ce:   MOVEA.L   $0008(A7),A0
T0000d2:   MOVE.L    $0008(A0),(A7)
T0000d6:   MOVEQ.L   #$0C,D0
T0000d8:   MOVEA.L   $0008(A7),A0
T0000dc:   JSR       Ax_recycle
T0000e2:   MOVEA.L   (A7),A0
T0000e4:   LEA.L     $001A(A7),A7
T0000e8:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_ptrCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   $0004(A7),A0
T00000c:   CMPA.L    (A7),A0
T00000e:   BNE.B     T000014
T000010:   MOVEQ.L   #$01,D0
T000012:   BRA.B     T000016
T000014:   CLR.W     D0
T000016:   ADDQ.W    #8,A7
T000018:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_longCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   $0004(A7),A0
T00000c:   MOVE.L    (A0),D0
T00000e:   MOVEA.L   (A7),A0
T000010:   CMP.L     (A0),D0
T000012:   BNE.B     T000018
T000014:   MOVEQ.L   #$01,D0
T000016:   BRA.B     T00001A
T000018:   CLR.W     D0
T00001a:   ADDQ.W    #8,A7
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_intCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   $0004(A7),A0
T00000c:   MOVE.W    (A0),D0
T00000e:   MOVEA.L   (A7),A0
T000010:   CMP.W     (A0),D0
T000012:   BNE.B     T000018
T000014:   MOVEQ.L   #$01,D0
T000016:   BRA.B     T00001A
T000018:   CLR.W     D0
T00001a:   ADDQ.W    #8,A7
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_charCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   $0004(A7),A0
T00000c:   MOVE.B    (A0),D0
T00000e:   MOVEA.L   (A7),A0
T000010:   CMP.B     (A0),D0
T000012:   BNE.B     T000018
T000014:   MOVEQ.L   #$01,D0
T000016:   BRA.B     T00001A
T000018:   CLR.W     D0
T00001a:   ADDQ.W    #8,A7
T00001c:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_strCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   (A7),A1
T00000a:   MOVEA.L   $0004(A7),A0
T00000e:   JSR       Ast_cmp
T000014:   TST.W     D0
T000016:   BNE.B     T00001C
T000018:   MOVEQ.L   #$01,D0
T00001a:   BRA.B     T00001E
T00001c:   CLR.W     D0
T00001e:   ADDQ.W    #8,A7
T000020:   RTS

          .ENDMOD


          .MODULE GLOBAL

Alu_striCmp:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVE.L    A1,(A7)
T000008:   MOVEA.L   (A7),A1
T00000a:   MOVEA.L   $0004(A7),A0
T00000e:   JSR       Ast_icmp
T000014:   TST.W     D0
T000016:   BNE.B     T00001C
T000018:   MOVEQ.L   #$01,D0
T00001a:   BRA.B     T00001E
T00001c:   CLR.W     D0
T00001e:   ADDQ.W    #8,A7
T000020:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_deleteForElem:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0018(A7),A7
T000006:   MOVE.L    A0,$0014(A7)
T00000a:   MOVE.L    A1,$0010(A7)
T00000e:   CLR.L     $000C(A7)
T000012:   CLR.L     $0008(A7)
T000016:   CLR.L     $0004(A7)
T00001a:   MOVEA.L   $0014(A7),A0
T00001e:   MOVE.L    (A0),(A7)
T000020:   CLR.L     $0004(A7)
T000024:   MOVEA.L   (A7),A0
T000026:   MOVE.L    (A0),$0008(A7)
T00002a:   BRA       T0000D6
T00002e:   MOVE.L    $0020(A7),D0
T000032:   BEQ.B     T00004C
T000034:   MOVEA.L   $0008(A7),A0
T000038:   MOVEA.L   $0008(A0),A1
T00003c:   MOVEA.L   $0010(A7),A0
T000040:   MOVEA.L   $0020(A7),A2
T000044:   JSR       (A2)
T000046:   TST.W     D0
T000048:   BEQ       T0000C8
T00004c:   MOVE.L    $0004(A7),D0
T000050:   BEQ.B     T00005E
T000052:   MOVEA.L   $0008(A7),A0
T000056:   MOVEA.L   $0004(A7),A1
T00005a:   MOVE.L    (A0),(A1)
T00005c:   BRA.B     T000066
T00005e:   MOVEA.L   $0008(A7),A0
T000062:   MOVEA.L   (A7),A1
T000064:   MOVE.L    (A0),(A1)
T000066:   MOVEA.L   $0008(A7),A0
T00006a:   MOVE.L    (A0),D0
T00006c:   BEQ.B     T00007C
T00006e:   MOVEA.L   $0008(A7),A0
T000072:   MOVEA.L   (A0),A0
T000074:   MOVE.L    $0004(A7),$0004(A0)
T00007a:   BRA.B     T000084
T00007c:   MOVEA.L   (A7),A0
T00007e:   MOVE.L    $0004(A7),$0004(A0)
T000084:   MOVEA.L   (A7),A0
T000086:   SUBQ.L    #1,$0008(A0)
T00008a:   MOVEA.L   (A7),A0
T00008c:   MOVEA.L   $000C(A0),A0
T000090:   CMPA.L    $0008(A7),A0
T000094:   BNE.B     T0000A4
T000096:   MOVEA.L   (A7),A0
T000098:   MOVEA.L   (A7),A1
T00009a:   MOVE.L    (A0),$000C(A1)
T00009e:   MOVEA.L   (A7),A0
T0000a0:   CLR.L     $0010(A0)
T0000a4:   MOVEA.L   $0008(A7),A0
T0000a8:   MOVEA.L   $0008(A0),A0
T0000ac:   MOVEA.L   $0014(A7),A1
T0000b0:   MOVEA.L   $0004(A1),A1
T0000b4:   JSR       (A1)
T0000b6:   MOVEQ.L   #$0C,D0
T0000b8:   MOVEA.L   $0008(A7),A0
T0000bc:   JSR       Ax_recycle
T0000c2:   ADDQ.L    #1,$000C(A7)
T0000c6:   BRA.B     T0000CE
T0000c8:   MOVE.L    $0008(A7),$0004(A7)
T0000ce:   MOVEA.L   $0008(A7),A0
T0000d2:   MOVE.L    (A0),$0008(A7)
T0000d6:   MOVE.L    $0008(A7),D0
T0000da:   BNE       T01002E
T0000de:   MOVE.L    $000C(A7),D0
T0000e2:   LEA.L     $0018(A7),A7
T0000e6:   MOVEA.L   (A7)+,A2
T0000e8:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_searchElem:
T000000:   LEA.L     -$0014(A7),A7
T000004:   MOVE.L    A0,$0010(A7)
T000008:   MOVE.L    D0,$000C(A7)
T00000c:   CLR.L     $0004(A7)
T000010:   MOVEA.L   $0010(A7),A0
T000014:   MOVE.L    (A0),(A7)
T000016:   CLR.L     $0008(A7)
T00001a:   MOVEA.L   (A7),A0
T00001c:   MOVE.L    (A0),$0004(A7)
T000020:   BRA.B     T00002E
T000022:   MOVEA.L   $0004(A7),A0
T000026:   MOVE.L    (A0),$0004(A7)
T00002a:   ADDQ.L    #1,$0008(A7)
T00002e:   MOVE.L    $0008(A7),D0
T000032:   CMP.L     $000C(A7),D0
T000036:   BGE.B     T00003E
T000038:   MOVE.L    $0004(A7),D0
T00003c:   BNE.B     T000022
T00003e:   MOVE.L    $0008(A7),D0
T000042:   CMP.L     $000C(A7),D0
T000046:   BNE.B     T000068
T000048:   MOVE.L    $0004(A7),D0
T00004c:   BEQ.B     T000068
T00004e:   MOVEA.L   (A7),A0
T000050:   MOVE.L    $0004(A7),$000C(A0)
T000056:   MOVEA.L   (A7),A0
T000058:   MOVE.L    $000C(A7),$0010(A0)
T00005e:   MOVEA.L   $0004(A7),A0
T000062:   MOVEA.L   $0008(A0),A0
T000066:   BRA.B     T00006A
T000068:   SUBA.L    A0,A0
T00006a:   LEA.L     $0014(A7),A7
T00006e:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_searchForElem:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0016(A7),A7
T000006:   MOVE.L    A0,$0012(A7)
T00000a:   MOVE.L    A1,$000E(A7)
T00000e:   CLR.W     $000C(A7)
T000012:   CLR.L     $0008(A7)
T000016:   CLR.L     $0004(A7)
T00001a:   MOVEA.L   $0012(A7),A0
T00001e:   MOVE.L    (A0),(A7)
T000020:   CLR.L     $0008(A7)
T000024:   MOVEA.L   (A7),A0
T000026:   MOVE.L    (A0),$0004(A7)
T00002a:   BRA.B     T00005C
T00002c:   MOVE.L    $001E(A7),D0
T000030:   BEQ.B     T000048
T000032:   MOVEA.L   $0004(A7),A0
T000036:   MOVEA.L   $0008(A0),A1
T00003a:   MOVEA.L   $000E(A7),A0
T00003e:   MOVEA.L   $001E(A7),A2
T000042:   JSR       (A2)
T000044:   TST.W     D0
T000046:   BEQ.B     T000050
T000048:   MOVE.W    #$0001,$000C(A7)
T00004e:   BRA.B     T000068
T000050:   MOVEA.L   $0004(A7),A0
T000054:   MOVE.L    (A0),$0004(A7)
T000058:   ADDQ.L    #1,$0008(A7)
T00005c:   MOVE.W    $000C(A7),D0
T000060:   BNE.B     T000068
T000062:   MOVE.L    $0004(A7),D0
T000066:   BNE.B     T00002C
T000068:   MOVE.W    $000C(A7),D0
T00006c:   BEQ.B     T00008E
T00006e:   MOVE.L    $0004(A7),D0
T000072:   BEQ.B     T00008E
T000074:   MOVEA.L   (A7),A0
T000076:   MOVE.L    $0004(A7),$000C(A0)
T00007c:   MOVEA.L   (A7),A0
T00007e:   MOVE.L    $0008(A7),$0010(A0)
T000084:   MOVEA.L   $0004(A7),A0
T000088:   MOVEA.L   $0008(A0),A0
T00008c:   BRA.B     T000090
T00008e:   SUBA.L    A0,A0
T000090:   LEA.L     $0016(A7),A7
T000094:   MOVEA.L   (A7)+,A2
T000096:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_firstElem:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVEA.L   $0004(A7),A0
T00000a:   MOVE.L    (A0),(A7)
T00000c:   MOVEA.L   (A7),A0
T00000e:   MOVEA.L   (A7),A1
T000010:   MOVE.L    (A0),$000C(A1)
T000014:   MOVEA.L   (A7),A0
T000016:   CLR.L     $0010(A0)
T00001a:   MOVEA.L   (A7),A0
T00001c:   MOVE.L    (A0),D0
T00001e:   BNE.B     T000026
T000020:   SUBA.L    A0,A0
T000022:   BRA.B     T000030
T000024:   BRA.B     T000030
T000026:   MOVEA.L   (A7),A0
T000028:   MOVEA.L   (A0),A0
T00002a:   MOVEA.L   $0008(A0),A0
T00002e:   NOP
T000030:   ADDQ.W    #8,A7
T000032:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_lastElem:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVEA.L   $0004(A7),A0
T00000a:   MOVE.L    (A0),(A7)
T00000c:   MOVEA.L   (A7),A0
T00000e:   MOVEA.L   (A7),A1
T000010:   MOVE.L    $0004(A0),$000C(A1)
T000016:   MOVEQ.L   #-$01,D0
T000018:   MOVEA.L   (A7),A0
T00001a:   ADD.L     $0008(A0),D0
T00001e:   MOVEA.L   (A7),A0
T000020:   MOVE.L    D0,$0010(A0)
T000024:   MOVEA.L   (A7),A0
T000026:   MOVE.L    $0004(A0),D0
T00002a:   BNE.B     T000032
T00002c:   SUBA.L    A0,A0
T00002e:   BRA.B     T00003E
T000030:   BRA.B     T00003E
T000032:   MOVEA.L   (A7),A0
T000034:   MOVEA.L   $0004(A0),A0
T000038:   MOVEA.L   $0008(A0),A0
T00003c:   NOP
T00003e:   ADDQ.W    #8,A7
T000040:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_aktNrElem:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVEA.L   $0004(A7),A0
T00000a:   MOVE.L    (A0),(A7)
T00000c:   MOVEA.L   (A7),A0
T00000e:   MOVE.L    $000C(A0),D0
T000012:   BNE.B     T00001A
T000014:   MOVEQ.L   #-$01,D0
T000016:   BRA.B     T000022
T000018:   BRA.B     T000022
T00001a:   MOVEA.L   (A7),A0
T00001c:   MOVE.L    $0010(A0),D0
T000020:   NOP
T000022:   ADDQ.W    #8,A7
T000024:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_aktElem:
T000000:   SUBQ.W    #8,A7
T000002:   MOVE.L    A0,$0004(A7)
T000006:   MOVEA.L   $0004(A7),A0
T00000a:   MOVE.L    (A0),(A7)
T00000c:   MOVEA.L   (A7),A0
T00000e:   MOVE.L    $000C(A0),D0
T000012:   BNE.B     T00001A
T000014:   SUBA.L    A0,A0
T000016:   BRA.B     T000026
T000018:   BRA.B     T000026
T00001a:   MOVEA.L   (A7),A0
T00001c:   MOVEA.L   $000C(A0),A0
T000020:   MOVEA.L   $0008(A0),A0
T000024:   NOP
T000026:   ADDQ.W    #8,A7
T000028:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_skipElem:
T000000:   LEA.L     -$0012(A7),A7
T000004:   MOVE.L    A0,$000E(A7)
T000008:   MOVE.W    D0,$000C(A7)
T00000c:   MOVE.L    D1,$0008(A7)
T000010:   MOVEA.L   $000E(A7),A0
T000014:   MOVE.L    (A0),$0004(A7)
T000018:   MOVE.W    $000C(A7),D0
T00001c:   BEQ.B     T000048
T00001e:   CLR.L     (A7)
T000020:   BRA.B     T000034
T000022:   MOVEA.L   $0004(A7),A0
T000026:   MOVEA.L   $000C(A0),A0
T00002a:   MOVEA.L   $0004(A7),A1
T00002e:   MOVE.L    (A0),$000C(A1)
T000032:   ADDQ.L    #1,(A7)
T000034:   MOVE.L    (A7),D0
T000036:   CMP.L     $0008(A7),D0
T00003a:   BGE.B     T000046
T00003c:   MOVEA.L   $0004(A7),A0
T000040:   MOVE.L    $000C(A0),D0
T000044:   BNE.B     T000022
T000046:   BRA.B     T000072
T000048:   CLR.L     (A7)
T00004a:   BRA.B     T000060
T00004c:   MOVEA.L   $0004(A7),A0
T000050:   MOVEA.L   $000C(A0),A0
T000054:   MOVEA.L   $0004(A7),A1
T000058:   MOVE.L    $0004(A0),$000C(A1)
T00005e:   ADDQ.L    #1,(A7)
T000060:   MOVE.L    (A7),D0
T000062:   CMP.L     $0008(A7),D0
T000066:   BGE.B     T000072
T000068:   MOVEA.L   $0004(A7),A0
T00006c:   MOVE.L    $000C(A0),D0
T000070:   BNE.B     T00004C
T000072:   MOVEA.L   $0004(A7),A0
T000076:   MOVE.L    $000C(A0),D0
T00007a:   BNE.B     T000082
T00007c:   SUBA.L    A0,A0
T00007e:   BRA.B     T000090
T000080:   BRA.B     T000090
T000082:   MOVEA.L   $0004(A7),A0
T000086:   MOVEA.L   $000C(A0),A0
T00008a:   MOVEA.L   $0008(A0),A0
T00008e:   NOP
T000090:   LEA.L     $0012(A7),A7
T000094:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_countElem:
T000000:   SUBQ.W    #4,A7
T000002:   MOVE.L    A0,(A7)
T000004:   MOVEA.L   (A7),A0
T000006:   MOVEA.L   (A0),A0
T000008:   MOVE.L    $0008(A0),D0
T00000c:   ADDQ.W    #4,A7
T00000e:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_countForElem:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0014(A7),A7
T000006:   MOVE.L    A0,$0010(A7)
T00000a:   MOVE.L    A1,$000C(A7)
T00000e:   CLR.L     $0008(A7)
T000012:   CLR.L     $0004(A7)
T000016:   MOVEA.L   $0010(A7),A0
T00001a:   MOVE.L    (A0),(A7)
T00001c:   MOVEA.L   (A7),A0
T00001e:   MOVE.L    (A0),$0004(A7)
T000022:   BRA.B     T00004C
T000024:   MOVE.L    $001C(A7),D0
T000028:   BEQ.B     T000040
T00002a:   MOVEA.L   $0004(A7),A0
T00002e:   MOVEA.L   $0008(A0),A1
T000032:   MOVEA.L   $000C(A7),A0
T000036:   MOVEA.L   $001C(A7),A2
T00003a:   JSR       (A2)
T00003c:   TST.W     D0
T00003e:   BEQ.B     T000044
T000040:   ADDQ.L    #1,$0008(A7)
T000044:   MOVEA.L   $0004(A7),A0
T000048:   MOVE.L    (A0),$0004(A7)
T00004c:   MOVE.L    $0004(A7),D0
T000050:   BNE.B     T000024
T000052:   MOVE.L    $0008(A7),D0
T000056:   LEA.L     $0014(A7),A7
T00005a:   MOVEA.L   (A7)+,A2
T00005c:   RTS

          .ENDMOD


          .MODULE LOCAL

Alu_doForElem:
T000000:   MOVE.L    A2,-(A7)
T000002:   LEA.L     -$0010(A7),A7
T000006:   MOVE.L    A0,$000C(A7)
T00000a:   MOVE.L    A1,$0008(A7)
T00000e:   CLR.L     $0004(A7)
T000012:   MOVEA.L   $000C(A7),A0
T000016:   MOVE.L    (A0),(A7)
T000018:   MOVEA.L   (A7),A0
T00001a:   MOVE.L    (A0),$0004(A7)
T00001e:   BRA.B     T000056
T000020:   MOVE.L    $0018(A7),D0
T000024:   BEQ.B     T00003C
T000026:   MOVEA.L   $0004(A7),A0
T00002a:   MOVEA.L   $0008(A0),A1
T00002e:   MOVEA.L   $0008(A7),A0
T000032:   MOVEA.L   $0018(A7),A2
T000036:   JSR       (A2)
T000038:   TST.W     D0
T00003a:   BEQ.B     T00004E
T00003c:   MOVEA.L   $0004(A7),A0
T000040:   MOVEA.L   $0008(A0),A1
T000044:   MOVEA.L   $0008(A7),A0
T000048:   MOVEA.L   $001C(A7),A2
T00004c:   JSR       (A2)
T00004e:   MOVEA.L   $0004(A7),A0
T000052:   MOVE.L    (A0),$0004(A7)
T000056:   MOVE.L    $0004(A7),D0
T00005a:   BNE.B     T000020
T00005c:   LEA.L     $0010(A7),A7
T000060:   MOVEA.L   (A7)+,A2
T000062:   RTS

          .ENDMOD



          .DATA   

          .MODULE LOCAL

copyright:
D000000:   .DC.W   $2863, $2920, $3139, $3931, $2D32, $3030, $3120, $532E
D000010:   .DC.W   $4261, $6368, $6572, $742C, $204F, $2E4D, $6963, $6861
D000020:   .DC.W   $6C61, $6B20, $2620, $4D2E, $456C, $7384, $7373, $6572
D000030:   .DC.W   $2041, $4353, $2033, $2E30, $2E30, $E100
_c_version:
D00003c:   .DC.W   $4143, $5370, $726F, $2056, $332E, $302E, $30E1
D00004a:   .DC.B   $00
_c_format:
D00004b:   .DC.W   $2573, $0A45, $7273, $7465, $6C6C, $7420, $6D69, $7420
D00005b:   .DC.W   $2573, $2076, $6F6D, $2025, $730A, $2573
D000067:   .DC.B   $00
compiler_date:
D000068:   .DC.W   $4E6F, $7620, $3132, $2032, $3030, $3300
lib_date:
D000074:   .DC.W   $0000, $0000, $0000, $0000, $0000, $0000

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $4A41, $4E00, $4645, $4200, $4D41, $5200, $4150, $5200
D000010:   .DC.W   $4D41, $5900, $4A55, $4E00, $4A55, $4C00, $4155, $4700
D000020:   .DC.W   $5345, $5000, $4F43, $5400, $4E4F, $5600, $4445, $4300
D000030:   .DC.W   $2530, $3269, $0043, $4C49, $5042, $4F41, $5244, $0043
D000040:   .DC.W   $4C49, $5042, $5244, $0053, $4352, $4150, $4449, $5200
D000050:   .DC.W   $583A, $5C63, $6C69, $7062, $7264, $005C, $0048, $4F4D
D000060:   .DC.W   $4500, $544D, $5044, $4952, $0054, $4D50, $0041, $3A5C
D000070:   .DC.W   $0046, $5300, $4946, $5300, $4665, $686C, $6572, $6861
D000080:   .DC.W   $6674, $6520, $4F70, $7469, $6F6E, $2025, $630A, $0020
D000090:   .DC.W   $093D, $2B2D, $2A2F, $2829, $2126, $7C5B, $5D7B, $7D3C
D0000a0:   .DC.W   $3E2C, $2E3B, $3ADD, $2425, $3F60, $275E, $237E, $405C
D0000b0:   .DC.W   $2200, $2D2F, $0000

          .ENDMOD


          .MODULE LOCAL

in_use::
D000000:   .DC.W   $0000, $0000
MemInit:
D000004:   .DC.W   $0000
_freeBlockList:
D000006:   .DC.W   $0000, $0022
D00000a:   .DC.L   
D00000e:   .DC.W   $0005, $0000, $0000, $0000, $0000, $0000, $0000, $0012
D00001e:   .DC.L   +$00000008
D000022:   .DC.W   $0005, $0000, $0000, $0000, $0000, $0000, $0000, $000A
D000032:   .DC.L   +$00000011
D000036:   .DC.W   $0005, $0000, $0000, $0000, $0000, $0000, $0000, $0044
D000046:   .DC.L   +$0000001C
D00004a:   .DC.W   $0014, $0000, $0000, $0000, $0000, $0000, $0000, $000C
D00005a:   .DC.L   +$00000026
D00005e:   .DC.W   $0028, $0000, $0000, $0000, $0000, $0000
freeBlockList:
D00006a:   .DC.L   _freeBlockList
freeBlockListAnz:
D00006e:   .DC.W   $0005
freeBlockStat:
D000070:   .DC.W   $0000, $0000

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $5543, $6F6E, $6669, $6700, $5543, $6667, $496E, $666F
D000010:   .DC.W   $0043, $6667, $2D47, $7275, $7070, $6500, $554C, $696E
D000020:   .DC.W   $4C69, $7374, $6500, $554C, $696E, $4C69, $7374, $652D
D000030:   .DC.W   $456C, $656D, $656E, $7400

          .ENDMOD


          .MODULE LOCAL

null_string::
D000000:   .DC.W   $002A, $003F, $0000

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $2009, $0A0D, $0001, $0203, $0405, $0600, $0100

          .ENDMOD


          .MODULE LOCAL

default_info:
D000000:   .DC.L   
D000004:   .DC.L   +$00000001
D000008:   .DC.W   $0000, $0000, $0000, $0000, $0020

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $0025, $3B00, $6366, $6700, $5C00, $7200, $5B5D, $0025
D000010:   .DC.W   $6320, $2573, $0A00, $2563, $0A00, $7700, $5B25, $735D
D000020:   .DC.W   $0A00, $7878, $003D, $0025, $6C69, $0054, $7275, $6500
D000030:   .DC.W   $4661, $6C73, $6500

          .ENDMOD


          .MODULE LOCAL

DateiListe:
D000000:   .DC.W   $0000, $0000
AktDatei:
D000004:   .DC.W   $0000, $0000, $2E00
max_mode:
D00000a:   .DC.W   $FFFE, $413A, $5C00

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $413A, $5C00, $2E63, $6667, $002E, $5C00, $2E00, $2A2E
D000010:   .DC.W   $2A00, $5C2A, $2E2A, $002E, $2E00, $2009, $0A0D, $2700
D000020:   .DC.W   $2722, $0000

          .ENDMOD


          .MODULE LOCAL

D000000:   .DC.W   $0000

          .ENDMOD


          .MODULE LOCAL

xscantab:
D000000:   .DC.W   $0148, $0250, $044B, $0473, $034D, $0374, $0549, $0651
D000010:   .DC.W   $074F, $0B52, $0C47, $0C77, $0E62, $0F61, $1A45, $1C46
D000020:   .DC.W   $1D37, $FFFF
toupper:
D000024:   .DC.W   $0001, $0203, $0405, $0607, $0809, $0A0B, $0C0D, $0E0F
D000034:   .DC.W   $1011, $1213, $1415, $1617, $1819, $1A1B, $1C1D, $1E1F
D000044:   .DC.W   $2021, $2223, $2425, $2627, $2829, $2A2B, $2C2D, $2E2F
D000054:   .DC.W   $3031, $3233, $3435, $3637, $3839, $3A3B, $3C3D, $3E3F
D000064:   .DC.W   $4041, $4243, $4445, $4647, $4849, $4A4B, $4C4D, $4E4F
D000074:   .DC.W   $5051, $5253, $5455, $5657, $5859, $5A5B, $5C5D, $5E5F
D000084:   .DC.W   $6041, $4243, $4445, $4647, $4849, $4A4B, $4C4D, $4E4F
D000094:   .DC.W   $5051, $5253, $5455, $5657, $5859, $5A7B, $7C7D, $7E7F
D0000a4:   .DC.W   $809A, $9083, $8EB6, $8F80, $8889, $8A8B, $8C8D, $8E8F
D0000b4:   .DC.W   $9092, $9293, $9995, $9697, $9899, $9A9B, $9C9D, $9E9F
D0000c4:   .DC.W   $A0A1, $A2A3, $A5A5, $A6A7, $A8A9, $AAAB, $ACAD, $AEAF
D0000d4:   .DC.W   $B7B8, $B2B2, $B5B5, $B6B7, $B8B9, $BABB, $BCBD, $BEBF
D0000e4:   .DC.W   $C0C1, $C2C3, $C4C5, $C6C7, $C8C9, $CACB, $CCCD, $CECF
D0000f4:   .DC.W   $D0D1, $D2D3, $D4D5, $D6D7, $D8D9, $DADB, $DCDD, $DEDF
D000104:   .DC.W   $E0E1, $E2E3, $E4E5, $E6E7, $E8E9, $EAEB, $ECED, $EEEF
D000114:   .DC.W   $F0F1, $F2F3, $F4F5, $F6F7, $F8F9, $FAFB, $FCFD, $FEFF
tolower:
D000124:   .DC.W   $0001, $0203, $0405, $0607, $0809, $0A0B, $0C0D, $0E0F
D000134:   .DC.W   $1011, $1213, $1415, $1617, $1819, $1A1B, $1C1D, $1E1F
D000144:   .DC.W   $2021, $2223, $2425, $2627, $2829, $2A2B, $2C2D, $2E2F
D000154:   .DC.W   $3031, $3233, $3435, $3637, $3839, $3A3B, $3C3D, $3E3F
D000164:   .DC.W   $4061, $6263, $6465, $6667, $6869, $6A6B, $6C6D, $6E6F
D000174:   .DC.W   $7071, $7273, $7475, $7677, $7879, $7A5B, $5C5D, $5E5F
D000184:   .DC.W   $6061, $6263, $6465, $6667, $6869, $6A6B, $6C6D, $6E6F
D000194:   .DC.W   $7071, $7273, $7475, $7677, $7879, $7A7B, $7C7D, $7E7F
D0001a4:   .DC.W   $8781, $8283, $8485, $8687, $8889, $8A8B, $8C8D, $8486
D0001b4:   .DC.W   $8291, $9193, $9495, $9697, $9894, $819B, $9C9D, $9E9F
D0001c4:   .DC.W   $A0A1, $A2A3, $A4A4, $A6A7, $A8A9, $AAAB, $ACAD, $AEAF
D0001d4:   .DC.W   $B0B1, $B3B3, $B4B4, $85B0, $B1B9, $BABB, $BCBD, $BEBF
D0001e4:   .DC.W   $C0C1, $C2C3, $C4C5, $C6C7, $C8C9, $CACB, $CCCD, $CECF
D0001f4:   .DC.W   $D0D1, $D2D3, $D4D5, $D6D7, $D8D9, $DADB, $DCDD, $DEDF
D000204:   .DC.W   $E0E1, $E2E3, $E4E5, $E6E7, $E8E9, $EAEB, $ECED, $EEEF
D000214:   .DC.W   $F0F1, $F2F3, $F4F5, $F6F7, $F8F9, $FAFB, $FCFD, $FEFF
asc_trans:
D000224:   .DC.W   $0032, $1E36, $1F2D, $0A0D, $0000
n_to_scan_u:
D00022e:   .DC.W   $0048, $504D, $4B49, $514F, $0E0F, $7252, $471C, $6261
D00023e:   .DC.W   $3B3C, $3D3E, $3F40, $4142, $4344, $4501, $4637, $0053
n_to_scan_s:
D00024e:   .DC.W   $0048, $504D, $4B49, $514F, $0E0F, $7252, $471C, $6261
D00025e:   .DC.W   $5455, $5657, $5859, $5A5B, $5C5D, $4501, $4637, $0053

          .ENDMOD


          .MODULE LOCAL

kt:
D000000:   .DC.W   $0000, $0000

          .ENDMOD


          .MODULE LOCAL

empty:
D000000:   .DC.W   $0000, $0000
D000004:   .DC.L   Ax_free
D000008:   .DC.L   Alu_clearElem
D00000c:   .DC.L   Alu_appendElem
D000010:   .DC.L   Alu_insertElem
D000014:   .DC.L   Alu_deleteElem
D000018:   .DC.L   Alu_deleteForElem
D00001c:   .DC.L   Alu_searchElem
D000020:   .DC.L   Alu_searchForElem
D000024:   .DC.L   Alu_firstElem
D000028:   .DC.L   Alu_lastElem
D00002c:   .DC.L   Alu_aktElem
D000030:   .DC.L   Alu_aktNrElem
D000034:   .DC.L   Alu_skipElem
D000038:   .DC.L   Alu_countElem
D00003c:   .DC.L   Alu_countForElem
D000040:   .DC.L   Alu_doForElem

          .ENDMOD



          .BSS    

          .MODULE LOCAL

ACSblk::
B000000:   .DS.B   4
_ACSblk:
B000004:   .DS.B   2640

          .ENDMOD


          .MODULE LOCAL

watch_min::
B000000:   .DS.B   4
watch_max::
B000004:   .DS.B   4
check:
B000008:   .DS.B   48

          .ENDMOD


          .MODULE LOCAL

s_val:
B000000:   .DS.B   8192

          .ENDMOD


          .MODULE LOCAL

scrap:
B000000:   .DS.B   256

          .ENDMOD


          .MODULE LOCAL

pkey_unshift:
B000000:   .DS.B   4
pkey_shift:
B000004:   .DS.B   4
pkey_caps:
B000008:   .DS.B   4

          .ENDMOD


          .MODULE LOCAL

Linea::
B000000:   .DS.B   4
Vdiesc::
B000004:   .DS.B   4
Fonts::
B000008:   .DS.B   4
Linea_funp::
B00000C:   .DS.B   4

          .ENDMOD



          .OFFSET 


          .OFFSET 


          .END
